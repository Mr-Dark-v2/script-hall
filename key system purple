--[[
THE MIST HUB - Ultra-Premium Key System GUI
Advanced Features: Fullscreen, Auto-Scaling, Cinematic Intro, Glassmorphism
Enhanced with Premium Constellation Aurora Background
]]

-- ================================================================= --
-- PRE-FLIGHT CHECK
-- ================================================================= --

if JunkieProtected == nil then
local player = game:GetService("Players").LocalPlayer
if not player or not player:IsA("Player") then return end
local failsafeGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
failsafeGui.Name = "MistHub_FAILSAFE"
failsafeGui.ResetOnSpawn = false
local background = Instance.new("Frame", failsafeGui)
background.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
background.BorderColor3 = Color3.fromRGB(255, 60, 60)
background.BorderSizePixel = 2
background.Position = UDim2.fromScale(0.5, 0.5)
background.AnchorPoint = Vector2.new(0.5, 0.5)
background.Size = UDim2.new(0, 500, 0, 300)
Instance.new("UICorner", background).CornerRadius = UDim.new(0, 12)
local title = Instance.new("TextLabel", background)
title.Size = UDim2.new(1, 0, 0, 50)
title.BackgroundColor3 = Color3.fromRGB(255, 60, 60)
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.GothamBold
title.TextSize = 24
title.Text = "SDK INITIALIZATION FAILED"
Instance.new("UICorner", title).CornerRadius = UDim.new(0, 10)
local message = Instance.new("TextLabel", background)
message.Size = UDim2.new(0.9, 0, 0.7, 0)
message.Position = UDim2.fromScale(0.05, 0.25)
message.BackgroundTransparency = 1
message.TextColor3 = Color3.fromRGB(240, 240, 240)
message.Font = Enum.Font.Gotham
message.TextSize = 18
message.TextWrapped = true
message.TextXAlignment = Enum.TextXAlignment.Left
message.Text = "The protection library was not found.\n\nPlease ensure you are using the official script version."
return
end

-- ================================================================= --
-- SERVICES & CONFIG
-- ================================================================= --

local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local HttpService = game:GetService("HttpService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local camera = workspace.CurrentCamera

JunkieProtected.API_KEY = "asdfghjkl"
JunkieProtected.PROVIDER = "key_system"
JunkieProtected.SERVICE_ID = "key system"

local KEY_FILENAME = "MistHubKey.txt"
local DISCORD_LINK = "https://discord.gg/themisthub"

-- ================================================================= --
-- UTILITY: RESPONSIVE SCALING
-- ================================================================= --

local function getScale()
local vpSize = camera.ViewportSize
local baseWidth = 1920
local baseHeight = 1080
return math.min(vpSize.X / baseWidth, vpSize.Y / baseHeight)
end

local function scaledSize(width, height)
local scale = getScale()
return UDim2.new(0, width * scale, 0, height * scale)
end

-- ================================================================= --
-- RUN MAIN SCRIPT
-- ================================================================= --

local function RunMainScript()
local MainScriptGui = Instance.new("ScreenGui")
MainScriptGui.Name = "TheMistHubMain"
MainScriptGui.Parent = playerGui

-- Create a simple notification that the main script is running
local notification = Instance.new("Frame")
notification.Size = UDim2.new(0, 400, 0, 100)
notification.Position = UDim2.new(0.5, -200, 0.5, -50)
notification.AnchorPoint = Vector2.new(0, 0)
notification.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
notification.BorderSizePixel = 0
notification.Parent = MainScriptGui

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 12)
corner.Parent = notification

local title = Instance.new("TextLabel", notification)
title.Size = UDim2.new(1, 0, 0, 40)
title.Position = UDim2.new(0, 0, 0, 10)
title.Text = "THE MIST HUB"
title.TextSize = 24
title.Font = Enum.Font.GothamBold
title.TextColor3 = Color3.fromRGB(0, 217, 255)
title.BackgroundTransparency = 1
title.Parent = notification

local message = Instance.new("TextLabel", notification)
message.Size = UDim2.new(1, -20, 0, 40)
message.Position = UDim2.new(0, 10, 0, 50)
message.Text = "Main script loaded successfully!"
message.TextSize = 16
message.Font = Enum.Font.Gotham
message.TextColor3 = Color3.fromRGB(255, 255, 255)
message.BackgroundTransparency = 1
message.TextWrapped = true
message.Parent = notification

-- Auto-close notification after 5 seconds
game:GetService("Debris"):AddItem(notification, 5)
end

-- ================================================================= --
-- CHECK SAVED KEY
-- ================================================================= --

if isfile and isfile(KEY_FILENAME) then
local savedKey = readfile(KEY_FILENAME)
if savedKey and savedKey ~= "" then
local result = JunkieProtected.ValidateKey({ Key = savedKey })
if result == "valid" then
RunMainScript()
return
end
end
end

local keylessCheck = JunkieProtected.IsKeylessMode()
if keylessCheck and keylessCheck.keyless_mode then
RunMainScript()
return
end

-- ================================================================= --
-- CREATE GUI (FULLSCREEN)
-- ================================================================= --

local gui = Instance.new("ScreenGui")
gui.Name = "TheMistHubUltra"
gui.ResetOnSpawn = false
gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
gui.IgnoreGuiInset = true
gui.Parent = playerGui

-- ================================================================= --
-- PREMIUM CONSTELLATION AURORA BACKGROUND
-- ================================================================= --

local bgFrame = Instance.new("Frame")
bgFrame.Name = "Background"
bgFrame.Size = UDim2.new(1, 0, 1, 0)
bgFrame.BackgroundColor3 = Color3.fromRGB(5, 5, 15)
bgFrame.BorderSizePixel = 0
bgFrame.ZIndex = 1
bgFrame.BackgroundTransparency = 0
bgFrame.Parent = gui

-- Create multiple gradient layers for aurora effect
local auroraLayers = {}
for i = 1, 3 do
local aurora = Instance.new("Frame")
aurora.Name = "Aurora" .. i
aurora.Size = UDim2.new(1.5, 0, 1.5, 0)
aurora.Position = UDim2.fromScale(-0.25, -0.25)
aurora.BackgroundTransparency = 0.85 - (i * 0.1)
aurora.BorderSizePixel = 0
aurora.ZIndex = 1 + i
aurora.Parent = bgFrame

local gradient = Instance.new("UIGradient")
local colors = {
ColorSequence.new{
ColorSequenceKeypoint.new(0, Color3.fromHSV(0.55, 0.8, 0.6)),
ColorSequenceKeypoint.new(0.5, Color3.fromHSV(0.75, 0.8, 0.6)),
ColorSequenceKeypoint.new(1, Color3.fromHSV(0.85, 0.8, 0.6))
},
ColorSequence.new{
ColorSequenceKeypoint.new(0, Color3.fromHSV(0.65, 0.7, 0.5)),
ColorSequenceKeypoint.new(0.5, Color3.fromHSV(0.45, 0.7, 0.5)),
ColorSequenceKeypoint.new(1, Color3.fromHSV(0.35, 0.7, 0.5))
},
ColorSequence.new{
ColorSequenceKeypoint.new(0, Color3.fromHSV(0.15, 0.6, 0.4)),
ColorSequenceKeypoint.new(0.5, Color3.fromHSV(0.25, 0.6, 0.4)),
ColorSequenceKeypoint.new(1, Color3.fromHSV(0.05, 0.6, 0.4))
}
}
gradient.Color = colors[i]
gradient.Rotation = 45 + (i * 30)
gradient.Parent = aurora

table.insert(auroraLayers, {frame = aurora, gradient = gradient, baseRotation = gradient.Rotation})
end

-- Animate aurora layers
task.spawn(function()
while bgFrame and bgFrame.Parent do
for i, layer in ipairs(auroraLayers) do
if layer.frame and layer.frame.Parent then
layer.gradient.Rotation = layer.baseRotation + math.sin(tick() * (0.2 + i * 0.1)) * 30
layer.frame.Position = UDim2.new(
-0.25 + math.sin(tick() * (0.1 + i * 0.05)) * 0.05,
0,
-0.25 + math.cos(tick() * (0.1 + i * 0.05)) * 0.05,
0
)
end
end
task.wait(0.03)
end
end)

-- Constellation nodes system
local constellationContainer = Instance.new("Frame")
constellationContainer.Name = "Constellation"
constellationContainer.Size = UDim2.new(1, 0, 1, 0)
constellationContainer.BackgroundTransparency = 1
constellationContainer.ZIndex = 2
constellationContainer.Parent = bgFrame

local nodes = {}
local connections = {}
local mousePos = Vector2.new(0, 0)

-- Create constellation nodes
for i = 1, 25 do
local node = Instance.new("Frame")
node.Size = scaledSize(4, 4)
node.Position = UDim2.new(math.random(), 0, math.random(), 0)
node.AnchorPoint = Vector2.new(0.5, 0.5)
node.BackgroundColor3 = Color3.fromHSV(0.55, 0.8, 1)
node.BackgroundTransparency = 0.3
node.BorderSizePixel = 0
node.ZIndex = 3
node.Parent = constellationContainer

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(1, 0)
corner.Parent = node

local glow = Instance.new("Frame")
glow.Size = scaledSize(12, 12)
glow.Position = UDim2.fromScale(0.5, 0.5)
glow.AnchorPoint = Vector2.new(0.5, 0.5)
glow.BackgroundColor3 = Color3.fromHSV(0.55, 0.8, 1)
glow.BackgroundTransparency = 0.8
glow.BorderSizePixel = 0
glow.ZIndex = 2
glow.Parent = node

local glowCorner = Instance.new("UICorner")
glowCorner.CornerRadius = UDim.new(1, 0)
glowCorner.Parent = glow

table.insert(nodes, {
frame = node,
glow = glow,
vx = (math.random() - 0.5) * 0.0005,
vy = (math.random() - 0.5) * 0.0005,
baseHue = 0.55 + math.random() * 0.1
})
end

-- Create connection lines
local function createConnection(node1, node2)
local connection = Instance.new("Frame")
connection.Name = "Connection"
connection.BorderSizePixel = 0
connection.BackgroundTransparency = 0.7
connection.ZIndex = 2
connection.Parent = constellationContainer

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 1)
corner.Parent = connection

return {
frame = connection,
node1 = node1,
node2 = node2
}
end

-- Update constellation system
RunService.Heartbeat:Connect(function()
-- Update node positions
for _, node in ipairs(nodes) do
if node.frame and node.frame.Parent then
local pos = node.frame.Position
local newX = pos.X.Scale + node.vx
local newY = pos.Y.Scale + node.vy

if newX < 0 or newX > 1 then node.vx = -node.vx end
if newY < 0 or newY > 1 then node.vy = -node.vy end

node.frame.Position = UDim2.new(
math.clamp(newX, 0, 1), 0,
math.clamp(newY, 0, 1), 0
)

-- Update glow based on mouse proximity
local nodeScreenPos = Vector2.new(
node.frame.AbsolutePosition.X + node.frame.AbsoluteSize.X / 2,
node.frame.AbsolutePosition.Y + node.frame.AbsoluteSize.Y / 2
)
local distance = (nodeScreenPos - mousePos).Magnitude
local maxDistance = 200
local intensity = math.max(0, 1 - distance / maxDistance)

node.glow.BackgroundTransparency = 0.8 - intensity * 0.5
node.glow.Size = scaledSize(12 + intensity * 8, 12 + intensity * 8)

-- Pulse effect
local pulse = math.sin(tick() * 2 + node.baseHue * 10) * 0.2 + 0.8
node.frame.BackgroundTransparency = 0.3 - intensity * 0.2 + (1 - pulse) * 0.2
end
end

-- Update connections
-- Clear old connections
for _, conn in ipairs(connections) do
if conn.frame then
conn.frame:Destroy()
end
end
connections = {}

-- Create new connections for nearby nodes
for i, node1 in ipairs(nodes) do
for j, node2 in ipairs(nodes) do
if i < j then
local pos1 = node1.frame.Position
local pos2 = node2.frame.Position
local distance = math.sqrt(
(pos1.X.Scale - pos2.X.Scale) ^ 2 +
(pos1.Y.Scale - pos2.Y.Scale) ^ 2
)

if distance < 0.2 then
local connection = createConnection(node1, node2)

-- Calculate connection properties
local centerX = (pos1.X.Scale + pos2.X.Scale) / 2
local centerY = (pos1.Y.Scale + pos2.Y.Scale) / 2
local angle = math.atan2(pos2.Y.Scale - pos1.Y.Scale, pos2.X.Scale - pos1.X.Scale)
local length = distance * math.min(camera.ViewportSize.X, camera.ViewportSize.Y)

connection.frame.Position = UDim2.new(centerX, 0, centerY, 0)
connection.frame.Size = UDim2.new(0, length, 0, 1)
connection.frame.Rotation = math.deg(angle)
connection.frame.BackgroundTransparency = 0.7 + distance * 2

table.insert(connections, connection)
end
end
end
end
end)

-- Track mouse position for interaction
UserInputService.InputChanged:Connect(function(input)
if input.UserInputType == Enum.UserInputType.MouseMovement then
mousePos = Vector2.new(input.Position.X, input.Position.Y)
end
end)

-- ================================================================= --
-- ENHANCED PARTICLE SYSTEM
-- ================================================================= --

local particleContainer = Instance.new("Frame")
particleContainer.Name = "Particles"
particleContainer.Size = UDim2.new(1, 0, 1, 0)
particleContainer.BackgroundTransparency = 1
particleContainer.ZIndex = 3
particleContainer.Parent = bgFrame

local particles = {}

for i = 1, 50 do
local particle = Instance.new("Frame")
local size = math.random(1, 3)
particle.Size = scaledSize(size, size)
particle.Position = UDim2.new(math.random(), 0, math.random(), 0)
particle.BackgroundColor3 = Color3.fromHSV(0.55 + math.random() * 0.2, 0.8, 1)
particle.BackgroundTransparency = math.random(60, 90) / 100
particle.BorderSizePixel = 0
particle.Parent = particleContainer

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(1, 0)
corner.Parent = particle

table.insert(particles, {
frame = particle,
vx = (math.random() - 0.5) * 0.001,
vy = (math.random() - 0.5) * 0.001,
hue = 0.55 + math.random() * 0.2
})
end

RunService.Heartbeat:Connect(function()
for _, p in ipairs(particles) do
if p.frame and p.frame.Parent then
local pos = p.frame.Position
local newX = pos.X.Scale + p.vx
local newY = pos.Y.Scale + p.vy

if newX < 0 or newX > 1 then p.vx = -p.vx end
if newY < 0 or newY > 1 then p.vy = -p.vy end

p.frame.Position = UDim2.new(
math.clamp(newX, 0, 1), 0,
math.clamp(newY, 0, 1), 0
)

-- Color shift
p.hue = (p.hue + 0.001) % 1
p.frame.BackgroundColor3 = Color3.fromHSV(p.hue, 0.8, 1)
end
end
end)

-- ================================================================= --
-- MOUSE TRAIL EFFECT
-- ================================================================= --

UserInputService.InputChanged:Connect(function(input)
if input.UserInputType == Enum.UserInputType.MouseMovement then
local mousePos = UserInputService:GetMouseLocation()

local trail = Instance.new("Frame")
trail.Size = scaledSize(8, 8)
trail.Position = UDim2.new(0, mousePos.X, 0, mousePos.Y)
trail.AnchorPoint = Vector2.new(0.5, 0.5)
trail.BackgroundColor3 = Color3.fromHSV(0.55, 0.8, 1)
trail.BackgroundTransparency = 0.5
trail.BorderSizePixel = 0
trail.ZIndex = 4
trail.Parent = particleContainer

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(1, 0)
corner.Parent = trail

TweenService:Create(trail, TweenInfo.new(0.5), {
BackgroundTransparency = 1,
Size = scaledSize(20, 20)
}):Play()

task.delay(0.5, function()
trail:Destroy()
end)
end
end)

-- ================================================================= --
-- CINEMATIC INTRO SEQUENCE
-- ================================================================= --

local introContainer = Instance.new("Frame")
introContainer.Name = "IntroSequence"
introContainer.Size = UDim2.new(1, 0, 1, 0)
introContainer.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
introContainer.BorderSizePixel = 0
introContainer.ZIndex = 150
introContainer.Parent = gui

local introLogo = Instance.new("TextLabel")
introLogo.Size = scaledSize(800, 150)
introLogo.Position = UDim2.fromScale(0.5, 0.5)
introLogo.AnchorPoint = Vector2.new(0.5, 0.5)
introLogo.Text = "THE MIST HUB"
introLogo.TextSize = 72 * getScale()
introLogo.Font = Enum.Font.GothamBold
introLogo.TextColor3 = Color3.fromRGB(255, 255, 255)
introLogo.BackgroundTransparency = 1
introLogo.TextTransparency = 1
introLogo.TextStrokeTransparency = 0.3
introLogo.ZIndex = 151
introLogo.Parent = introContainer

local logoGradient = Instance.new("UIGradient")
logoGradient.Color = ColorSequence.new{
ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 217, 255)),
ColorSequenceKeypoint.new(0.5, Color3.fromRGB(181, 55, 242)),
ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 50, 150))
}
logoGradient.Parent = introLogo

local loadingContainer = Instance.new("Frame")
loadingContainer.Size = scaledSize(400, 6)
loadingContainer.Position = UDim2.new(0.5, 0, 0.5, 100 * getScale())
loadingContainer.AnchorPoint = Vector2.new(0.5, 0.5)
loadingContainer.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
loadingContainer.BorderSizePixel = 0
loadingContainer.BackgroundTransparency = 1
loadingContainer.ZIndex = 151
loadingContainer.Parent = introContainer

local loadingBar = Instance.new("Frame")
loadingBar.Size = UDim2.new(0, 0, 1, 0)
loadingBar.BackgroundColor3 = Color3.fromRGB(0, 217, 255)
loadingBar.BorderSizePixel = 0
loadingBar.ZIndex = 152
loadingBar.Parent = loadingContainer

local barGradient = Instance.new("UIGradient")
barGradient.Color = ColorSequence.new{
ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 217, 255)),
ColorSequenceKeypoint.new(1, Color3.fromRGB(181, 55, 242))
}
barGradient.Parent = loadingBar

local loadingText = Instance.new("TextLabel")
loadingText.Size = scaledSize(400, 30)
loadingText.Position = UDim2.new(0.5, 0, 0.5, 130 * getScale())
loadingText.AnchorPoint = Vector2.new(0.5, 0.5)
loadingText.Text = "Initializing..."
loadingText.TextSize = 16 * getScale()
loadingText.Font = Enum.Font.Gotham
loadingText.TextColor3 = Color3.fromRGB(180, 180, 180)
loadingText.BackgroundTransparency = 1
loadingText.TextTransparency = 1
loadingText.ZIndex = 151
loadingText.Parent = introContainer

local percentage = Instance.new("TextLabel")
percentage.Size = scaledSize(100, 40)
percentage.Position = UDim2.new(0.5, 0, 0.5, 160 * getScale())
percentage.AnchorPoint = Vector2.new(0.5, 0.5)
percentage.Text = "0%"
percentage.TextSize = 24 * getScale()
percentage.Font = Enum.Font.GothamBold
percentage.TextColor3 = Color3.fromRGB(0, 217, 255)
percentage.BackgroundTransparency = 1
percentage.TextTransparency = 1
percentage.ZIndex = 151
percentage.Parent = introContainer

-- ENHANCED INTRO SEQUENCE
task.spawn(function()
-- Fade in background first
TweenService:Create(bgFrame, TweenInfo.new(0.8, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
BackgroundTransparency = 0
}):Play()

task.wait(0.2)

-- Then fade in logo
TweenService:Create(introLogo, TweenInfo.new(0.8, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
TextTransparency = 0
}):Play()

task.wait(0.3)

-- Finally fade in loader
TweenService:Create(loadingContainer, TweenInfo.new(0.3), {BackgroundTransparency = 0.3}):Play()
TweenService:Create(loadingText, TweenInfo.new(0.3), {TextTransparency = 0}):Play()
TweenService:Create(percentage, TweenInfo.new(0.3), {TextTransparency = 0}):Play()

task.wait(0.3)

local stages = {
{text = "Loading SDK...", duration = 0.5},
{text = "Connecting to servers...", duration = 0.7},
{text = "Verifying integrity...", duration = 0.6},
{text = "Preparing interface...", duration = 0.5}
}

local totalDuration = 0
for _, stage in ipairs(stages) do
totalDuration = totalDuration + stage.duration
end

local elapsed = 0
for _, stage in ipairs(stages) do
loadingText.Text = stage.text

local stageProgress = TweenService:Create(loadingBar,
TweenInfo.new(stage.duration, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
{Size = UDim2.new((elapsed + stage.duration) / totalDuration, 0, 1, 0)})
stageProgress:Play()

for i = 1, stage.duration * 20 do
elapsed = math.min(elapsed + stage.duration / 20, totalDuration)
percentage.Text = math.floor((elapsed / totalDuration) * 100) .. "%"
task.wait(stage.duration / 20)
end
end

loadingText.Text = "Complete!"
task.wait(0.3)

TweenService:Create(introContainer, TweenInfo.new(0.6, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {
BackgroundTransparency = 1
}):Play()
TweenService:Create(introLogo, TweenInfo.new(0.6), {TextTransparency = 1}):Play()
TweenService:Create(loadingContainer, TweenInfo.new(0.6), {BackgroundTransparency = 1}):Play()
TweenService:Create(loadingBar, TweenInfo.new(0.6), {BackgroundTransparency = 1}):Play()
TweenService:Create(loadingText, TweenInfo.new(0.6), {TextTransparency = 1}):Play()
TweenService:Create(percentage, TweenInfo.new(0.6), {TextTransparency = 1}):Play()

task.wait(0.6)
introContainer:Destroy()
end)

-- ================================================================= --
-- MAIN WINDOW (GLASSMORPHISM)
-- ================================================================= --

local main = Instance.new("Frame")
main.Name = "MainWindow"
main.BackgroundColor3 = Color3.fromRGB(15, 15, 25)
main.BackgroundTransparency = 0.4
main.AnchorPoint = Vector2.new(0.5, 0.5)
main.Position = UDim2.fromScale(0.5, 0.5)
main.Size = scaledSize(600, 500)
main.BorderSizePixel = 0
main.ZIndex = 10
main.Parent = gui

local mainCorner = Instance.new("UICorner")
mainCorner.CornerRadius = UDim.new(0, 24 * getScale())
mainCorner.Parent = main

local mainStroke = Instance.new("UIStroke")
mainStroke.Color = Color3.fromRGB(100, 200, 255)
mainStroke.Thickness = 2
mainStroke.Transparency = 0.5
mainStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
mainStroke.Parent = main

local glow = Instance.new("Frame")
glow.Name = "Glow"
glow.Size = UDim2.new(1, 80 * getScale(), 1, 80 * getScale())
glow.Position = UDim2.fromScale(0.5, 0.5)
glow.AnchorPoint = Vector2.new(0.5, 0.5)
glow.BackgroundColor3 = Color3.fromRGB(0, 217, 255)
glow.BackgroundTransparency = 0.92
glow.BorderSizePixel = 0
glow.ZIndex = 9
glow.Parent = main

local glowCorner = Instance.new("UICorner")
glowCorner.CornerRadius = UDim.new(0, 36 * getScale())
glowCorner.Parent = glow

local scanline = Instance.new("Frame")
scanline.Size = UDim2.new(1, 0, 0, 2)
scanline.Position = UDim2.new(0, 0, 0, 0)
scanline.BackgroundColor3 = Color3.fromRGB(0, 217, 255)
scanline.BackgroundTransparency = 0.7
scanline.BorderSizePixel = 0
scanline.ZIndex = 11
scanline.Parent = main

task.spawn(function()
while scanline.Parent do
TweenService:Create(scanline, TweenInfo.new(2, Enum.EasingStyle.Linear), {
Position = UDim2.new(0, 0, 1, 0)
}):Play()
task.wait(2)
scanline.Position = UDim2.new(0, 0, 0, 0)
end
end)

-- ================================================================= --
-- CLOSE BUTTON WITH ENHANCED HOVER
-- ================================================================= --

local closeBtn = Instance.new("TextButton")
closeBtn.Name = "CloseButton"
closeBtn.Size = scaledSize(40, 40)
closeBtn.Position = UDim2.new(1, -50 * getScale(), 0, 10 * getScale())
closeBtn.BackgroundColor3 = Color3.fromRGB(255, 60, 60)
closeBtn.BackgroundTransparency = 0.3
closeBtn.Text = "×"
closeBtn.TextSize = 28 * getScale()
closeBtn.TextColor3 = Color3.new(1, 1, 1)
closeBtn.Font = Enum.Font.GothamBold
closeBtn.ZIndex = 12
closeBtn.Parent = main

local closeBtnCorner = Instance.new("UICorner")
closeBtnCorner.CornerRadius = UDim.new(1, 0)
closeBtnCorner.Parent = closeBtn

-- Add glow effect for close button
local closeBtnGlow = Instance.new("UIStroke")
closeBtnGlow.Color = Color3.fromRGB(255, 60, 60)
closeBtnGlow.Thickness = 0
closeBtnGlow.Transparency = 0.5
closeBtnGlow.Parent = closeBtn

closeBtn.MouseEnter:Connect(function()
TweenService:Create(closeBtn, TweenInfo.new(0.2), {
BackgroundColor3 = Color3.fromRGB(255, 100, 100),
Size = scaledSize(44, 44)
}):Play()
TweenService:Create(closeBtnGlow, TweenInfo.new(0.2), {
Thickness = 3,
Transparency = 0.2
}):Play()
end)

closeBtn.MouseLeave:Connect(function()
TweenService:Create(closeBtn, TweenInfo.new(0.2), {
BackgroundColor3 = Color3.fromRGB(255, 60, 60),
Size = scaledSize(40, 40)
}):Play()
TweenService:Create(closeBtnGlow, TweenInfo.new(0.2), {
Thickness = 0,
Transparency = 0.5
}):Play()
end)

-- Enhanced outro animation
closeBtn.MouseButton1Click:Connect(function()
-- Fade out all elements sequentially
local fadeElements = {
{element = main, delay = 0},
{element = bgFrame, delay = 0.2},
{element = constellationContainer, delay = 0.1},
{element = particleContainer, delay = 0.15}
}

for _, data in ipairs(fadeElements) do
task.spawn(function()
task.wait(data.delay)
if data.element and data.element.Parent then
TweenService:Create(data.element, TweenInfo.new(0.6, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {
BackgroundTransparency = 1
}):Play()

-- Fade all children
for _, child in ipairs(data.element:GetDescendants()) do
if child:IsA("GuiObject") then
if child:IsA("TextLabel") or child:IsA("TextButton") or child:IsA("TextBox") then
TweenService:Create(child, TweenInfo.new(0.6), {
TextTransparency = 1
}):Play()
end
TweenService:Create(child, TweenInfo.new(0.6), {
BackgroundTransparency = 1
}):Play()
end
if child:IsA("UIStroke") then
TweenService:Create(child, TweenInfo.new(0.6), {
Transparency = 1
}):Play()
end
end
end
end)
end

task.wait(0.8)
gui:Destroy()
end)

-- ================================================================= --
-- TITLE & SUBTITLE
-- ================================================================= --

local title = Instance.new("TextLabel")
title.Name = "Title"
title.Size = UDim2.new(1, -100 * getScale(), 0, 70 * getScale())
title.Position = UDim2.new(0, 30 * getScale(), 0, 20 * getScale())
title.Text = "🔐 THE MIST HUB"
title.TextSize = 36 * getScale()
title.Font = Enum.Font.GothamBold
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.BackgroundTransparency = 1
title.TextStrokeTransparency = 0.8
title.TextXAlignment = Enum.TextXAlignment.Left
title.ZIndex = 12
title.Parent = main

local titleGradient = Instance.new("UIGradient")
titleGradient.Color = ColorSequence.new{
ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 217, 255)),
ColorSequenceKeypoint.new(1, Color3.fromRGB(181, 55, 242))
}
titleGradient.Parent = title

local subtitle = Instance.new("TextLabel")
subtitle.Name = "Subtitle"
subtitle.Size = UDim2.new(1, -60 * getScale(), 0, 30 * getScale())
subtitle.Position = UDim2.new(0, 30 * getScale(), 0, 75 * getScale())
subtitle.Text = "Premium Authentication System • Secure • Fast"
subtitle.TextSize = 14 * getScale()
subtitle.Font = Enum.Font.Gotham
subtitle.TextColor3 = Color3.fromRGB(180, 180, 180)
subtitle.BackgroundTransparency = 1
subtitle.TextXAlignment = Enum.TextXAlignment.Left
subtitle.ZIndex = 12
subtitle.Parent = main

-- ================================================================= --
-- STATUS INDICATOR WITH GLOW
-- ================================================================= --

local statusBar = Instance.new("Frame")
statusBar.Size = UDim2.new(1, -60 * getScale(), 0, 50 * getScale())
statusBar.Position = UDim2.new(0, 30 * getScale(), 0, 120 * getScale())
statusBar.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
statusBar.BackgroundTransparency = 0.5
statusBar.BorderSizePixel = 0
statusBar.ZIndex = 12
statusBar.Parent = main

local statusCorner = Instance.new("UICorner")
statusCorner.CornerRadius = UDim.new(0, 12 * getScale())
statusCorner.Parent = statusBar

-- Add glow effect for status bar
local statusGlow = Instance.new("UIStroke")
statusGlow.Color = Color3.fromRGB(100, 255, 100)
statusGlow.Thickness = 0
statusGlow.Transparency = 0.8
statusGlow.Parent = statusBar

local statusIcon = Instance.new("TextLabel")
statusIcon.Size = UDim2.new(0, 40 * getScale(), 1, 0)
statusIcon.Position = UDim2.new(0, 10 * getScale(), 0, 0)
statusIcon.Text = "🌐"
statusIcon.TextSize = 20 * getScale()
statusIcon.BackgroundTransparency = 1
statusIcon.ZIndex = 13
statusIcon.Parent = statusBar

local statusText = Instance.new("TextLabel")
statusText.Size = UDim2.new(1, -120 * getScale(), 1, 0)
statusText.Position = UDim2.new(0, 50 * getScale(), 0, 0)
statusText.Text = "Server Status: Online"
statusText.TextSize = 14 * getScale()
statusText.Font = Enum.Font.Gotham
statusText.TextColor3 = Color3.fromRGB(100, 255, 100)
statusText.TextXAlignment = Enum.TextXAlignment.Left
statusText.BackgroundTransparency = 1
statusText.ZIndex = 13
statusText.Parent = statusBar

local statusDot = Instance.new("Frame")
statusDot.Size = scaledSize(8, 8)
statusDot.Position = UDim2.new(1, -30 * getScale(), 0.5, 0)
statusDot.AnchorPoint = Vector2.new(0.5, 0.5)
statusDot.BackgroundColor3 = Color3.fromRGB(100, 255, 100)
statusDot.BorderSizePixel = 0
statusDot.ZIndex = 13
statusDot.Parent = statusBar

local dotCorner = Instance.new("UICorner")
dotCorner.CornerRadius = UDim.new(1, 0)
dotCorner.Parent = statusDot

-- Add hover effect for status bar
statusBar.MouseEnter:Connect(function()
TweenService:Create(statusGlow, TweenInfo.new(0.3), {
Thickness = 2,
Transparency = 0.4
}):Play()
end)

statusBar.MouseLeave:Connect(function()
TweenService:Create(statusGlow, TweenInfo.new(0.3), {
Thickness = 0,
Transparency = 0.8
}):Play()
end)

task.spawn(function()
while statusDot.Parent do
TweenService:Create(statusDot, TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {
BackgroundTransparency = 0.7
}):Play()
task.wait(1)
TweenService:Create(statusDot, TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {
BackgroundTransparency = 0
}):Play()
task.wait(1)
end
end)

-- ================================================================= --
-- INPUT FIELD (ENHANCED WITH KEY MASKING)
-- ================================================================= --

local inputContainer = Instance.new("Frame")
inputContainer.Name = "InputContainer"
inputContainer.Size = UDim2.new(1, -60 * getScale(), 0, 60 * getScale())
inputContainer.Position = UDim2.new(0, 30 * getScale(), 0, 190 * getScale())
inputContainer.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
inputContainer.BackgroundTransparency = 0.5
inputContainer.BorderSizePixel = 0
inputContainer.ZIndex = 12
inputContainer.Parent = main

local inputCorner = Instance.new("UICorner")
inputCorner.CornerRadius = UDim.new(0, 14 * getScale())
inputCorner.Parent = inputContainer

local inputStroke = Instance.new("UIStroke")
inputStroke.Color = Color3.fromRGB(80, 80, 100)
inputStroke.Thickness = 2
inputStroke.Transparency = 0.6
inputStroke.Parent = inputContainer

-- Add glow effect for input container
local inputGlow = Instance.new("UIStroke")
inputGlow.Color = Color3.fromRGB(0, 217, 255)
inputGlow.Thickness = 0
inputGlow.Transparency = 0.5
inputGlow.Parent = inputContainer

local inputIcon = Instance.new("TextLabel")
inputIcon.Size = UDim2.new(0, 50 * getScale(), 1, 0)
inputIcon.Position = UDim2.new(0, 0, 0, 0)
inputIcon.Text = "🔑"
inputIcon.TextSize = 22 * getScale()
inputIcon.BackgroundTransparency = 1
inputIcon.ZIndex = 13
inputIcon.Parent = inputContainer

local input = Instance.new("TextBox")
input.Name = "KeyInput"
input.Size = UDim2.new(1, -110 * getScale(), 1, -10 * getScale())
input.Position = UDim2.new(0, 50 * getScale(), 0, 5 * getScale())
input.BackgroundTransparency = 1
input.PlaceholderText = "Enter your key here..."
input.PlaceholderColor3 = Color3.fromRGB(120, 120, 140)
input.TextSize = 16 * getScale()
input.TextColor3 = Color3.fromRGB(255, 255, 255)
input.Font = Enum.Font.Gotham
input.TextXAlignment = Enum.TextXAlignment.Left
input.ClearTextOnFocus = false
input.Text = "" -- Ensure it starts empty
input.ZIndex = 13
input.Parent = inputContainer

-- Enhanced key masking system
local actualKey = ""
local keyVisible = false
local isPasting = false

local function updateDisplayText()
if keyVisible or actualKey == "" then
input.Text = actualKey
else
input.Text = string.rep("*", #actualKey)
end
end

-- Handle text input properly
input.Changed:Connect(function(property)
if property == "Text" and not isPasting then
local currentText = input.Text
if keyVisible then
actualKey = currentText
else
-- Calculate the difference
if #currentText > #actualKey then
-- Characters added
local added = currentText:sub(#actualKey + 1)
actualKey = actualKey .. added
elseif #currentText < #actualKey then
-- Characters removed
actualKey = actualKey:sub(1, #currentText)
end
updateDisplayText()
end
end
end)

-- Handle paste events
UserInputService.InputBegan:Connect(function(input, gameProcessed)
if not gameProcessed and input.KeyCode == Enum.KeyCode.V and UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
isPasting = true
task.wait(0.1)

-- Get clipboard content
local success, clipboardText = pcall(function()
return game:GetService("TextService"):GetTextSize("", 16, Enum.Font.Gotham, Vector2.new(1000, 1000))
end)

-- Simulate paste (since we can't directly access clipboard in Roblox)
-- This is a workaround - in practice, users would need to manually type or use a clipboard function
isPasting = false
end
end)

input.FocusLost:Connect(function()
if not keyVisible then
updateDisplayText()
end
end)

local showKeyBtn = Instance.new("TextButton")
showKeyBtn.Size = UDim2.new(0, 40 * getScale(), 0, 40 * getScale())
showKeyBtn.Position = UDim2.new(1, -50 * getScale(), 0.5, 0)
showKeyBtn.AnchorPoint = Vector2.new(0, 0.5)
showKeyBtn.BackgroundTransparency = 1
showKeyBtn.Text = "👁‍🗨"
showKeyBtn.TextSize = 18 * getScale()
showKeyBtn.TextColor3 = Color3.fromRGB(180, 180, 180)
showKeyBtn.Font = Enum.Font.Gotham
showKeyBtn.ZIndex = 13
showKeyBtn.Parent = inputContainer

-- Add glow effect for show/hide button
local showKeyGlow = Instance.new("UIStroke")
showKeyGlow.Color = Color3.fromRGB(180, 180, 180)
showKeyGlow.Thickness = 0
showKeyGlow.Transparency = 0.5
showKeyGlow.Parent = showKeyBtn

showKeyBtn.MouseButton1Click:Connect(function()
keyVisible = not keyVisible
showKeyBtn.Text = keyVisible and "👁" or "👁‍🗨"
updateDisplayText()
end)

showKeyBtn.MouseEnter:Connect(function()
TweenService:Create(showKeyGlow, TweenInfo.new(0.2), {
Thickness = 2,
Transparency = 0.2
}):Play()
TweenService:Create(showKeyBtn, TweenInfo.new(0.2), {
TextColor3 = Color3.fromRGB(255, 255, 255)
}):Play()
end)

showKeyBtn.MouseLeave:Connect(function()
TweenService:Create(showKeyGlow, TweenInfo.new(0.2), {
Thickness = 0,
Transparency = 0.5
}):Play()
TweenService:Create(showKeyBtn, TweenInfo.new(0.2), {
TextColor3 = Color3.fromRGB(180, 180, 180)
}):Play()
end)

input.Focused:Connect(function()
TweenService:Create(inputStroke, TweenInfo.new(0.3), {
Color = Color3.fromRGB(0, 217, 255),
Transparency = 0,
Thickness = 2
}):Play()
TweenService:Create(inputGlow, TweenInfo.new(0.3), {
Thickness = 3,
Transparency = 0.2
}):Play()
TweenService:Create(inputContainer, TweenInfo.new(0.3), {
BackgroundTransparency = 0.3,
Size = UDim2.new(1, -60 * getScale(), 0, 64 * getScale())
}):Play()
end)

input.FocusLost:Connect(function()
TweenService:Create(inputStroke, TweenInfo.new(0.3), {
Color = Color3.fromRGB(80, 80, 100),
Transparency = 0.6
}):Play()
TweenService:Create(inputGlow, TweenInfo.new(0.3), {
Thickness = 0,
Transparency = 0.5
}):Play()
TweenService:Create(inputContainer, TweenInfo.new(0.3), {
BackgroundTransparency = 0.5,
Size = UDim2.new(1, -60 * getScale(), 0, 60 * getScale())
}):Play()
end)

-- ================================================================= --
-- NOTIFICATION SYSTEM (ENHANCED)
-- ================================================================= --

local function notify(message, success)
local notif = Instance.new("Frame")
notif.Name = "Notification"
notif.Size = scaledSize(400, 80)
notif.Position = UDim2.new(0.5, 0, 1, 20 * getScale())
notif.AnchorPoint = Vector2.new(0.5, 0)
notif.BackgroundColor3 = success and Color3.fromRGB(30, 150, 80) or Color3.fromRGB(200, 60, 60)
notif.BackgroundTransparency = 0.2
notif.BorderSizePixel = 0
notif.ZIndex = 200
notif.Parent = gui

local notifCorner = Instance.new("UICorner")
notifCorner.CornerRadius = UDim.new(0, 16 * getScale())
notifCorner.Parent = notif

local notifStroke = Instance.new("UIStroke")
notifStroke.Color = success and Color3.fromRGB(50, 255, 150) or Color3.fromRGB(255, 100, 100)
notifStroke.Thickness = 2
notifStroke.Parent = notif

local notifGlow = Instance.new("Frame")
notifGlow.Size = UDim2.new(1, 20 * getScale(), 1, 20 * getScale())
notifGlow.Position = UDim2.fromScale(0.5, 0.5)
notifGlow.AnchorPoint = Vector2.new(0.5, 0.5)
notifGlow.BackgroundColor3 = success and Color3.fromRGB(50, 255, 150) or Color3.fromRGB(255, 100, 100)
notifGlow.BackgroundTransparency = 0.9
notifGlow.BorderSizePixel = 0
notifGlow.ZIndex = 199
notifGlow.Parent = notif

local glowC = Instance.new("UICorner")
glowC.CornerRadius = UDim.new(0, 20 * getScale())
glowC.Parent = notifGlow

local icon = Instance.new("TextLabel")
icon.Size = UDim2.new(0, 50 * getScale(), 1, 0)
icon.Position = UDim2.new(0, 15 * getScale(), 0, 0)
icon.BackgroundTransparency = 1
icon.Text = success and "✓" or "✗"
icon.TextSize = 32 * getScale()
icon.TextColor3 = Color3.new(1, 1, 1)
icon.Font = Enum.Font.GothamBold
icon.ZIndex = 201
icon.Parent = notif

local text = Instance.new("TextLabel")
text.Size = UDim2.new(1, -80 * getScale(), 1, 0)
text.Position = UDim2.new(0, 65 * getScale(), 0, 0)
text.BackgroundTransparency = 1
text.Text = message
text.TextSize = 16 * getScale()
text.TextColor3 = Color3.new(1, 1, 1)
text.Font = Enum.Font.GothamSemibold
text.TextXAlignment = Enum.TextXAlignment.Left
text.TextWrapped = true
text.ZIndex = 201
text.Parent = notif

local progress = Instance.new("Frame")
progress.Size = UDim2.new(1, 0, 0, 4)
progress.Position = UDim2.new(0, 0, 1, -4)
progress.BackgroundColor3 = Color3.new(1, 1, 1)
progress.BackgroundTransparency = 0.3
progress.BorderSizePixel = 0
progress.ZIndex = 202
progress.Parent = notif

local progressCorner = Instance.new("UICorner")
progressCorner.CornerRadius = UDim.new(0, 2 * getScale())
progressCorner.Parent = progress

local slideIn = TweenService:Create(notif,
TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
{Position = UDim2.new(0.5, 0, 1, -100 * getScale())})
slideIn:Play()

TweenService:Create(progress, TweenInfo.new(3.5, Enum.EasingStyle.Linear), {
Size = UDim2.new(0, 0, 0, 4)
}):Play()

task.delay(3.5, function()
local slideOut = TweenService:Create(notif,
TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.In),
{Position = UDim2.new(0.5, 0, 1, 20 * getScale())})
slideOut:Play()
slideOut.Completed:Connect(function()
notif:Destroy()
end)
end)
end

-- ================================================================= --
-- CONFETTI EFFECT
-- ================================================================= --

local function createConfetti()
for i = 1, 50 do
local confetti = Instance.new("Frame")
confetti.Size = scaledSize(math.random(4, 8), math.random(8, 16))
confetti.Position = UDim2.new(0.5, 0, 0.5, 0)
confetti.BackgroundColor3 = Color3.fromHSV(math.random(), 1, 1)
confetti.BorderSizePixel = 0
confetti.Rotation = math.random(0, 360)
confetti.ZIndex = 250
confetti.Parent = gui

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 2 * getScale())
corner.Parent = confetti

local angle = math.random() * math.pi * 2
local distance = math.random(200, 500) * getScale()
local endX = 0.5 + math.cos(angle) * distance / camera.ViewportSize.X
local endY = 0.5 + math.sin(angle) * distance / camera.ViewportSize.Y

local tween = TweenService:Create(confetti,
TweenInfo.new(1.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
{
Position = UDim2.new(endX, 0, endY, 0),
Rotation = confetti.Rotation + math.random(-180, 180),
BackgroundTransparency = 1
})
tween:Play()

task.delay(1.5, function()
confetti:Destroy()
end)
end
end

-- ================================================================= --
-- BUTTON CREATION FUNCTION (ENHANCED WITH GLOW)
-- ================================================================= --

local function createButton(text, yPos, color1, color2, icon)
local btn = Instance.new("TextButton")
btn.Size = UDim2.new(1, -60 * getScale(), 0, 60 * getScale())
btn.Position = UDim2.new(0, 30 * getScale(), 0, yPos * getScale())
btn.BackgroundColor3 = color1
btn.BackgroundTransparency = 0.3
btn.Text = ""
btn.BorderSizePixel = 0
btn.ZIndex = 12
btn.Parent = main

local btnCorner = Instance.new("UICorner")
btnCorner.CornerRadius = UDim.new(0, 14 * getScale())
btnCorner.Parent = btn

local btnGradient = Instance.new("UIGradient")
btnGradient.Color = ColorSequence.new{
ColorSequenceKeypoint.new(0, color1),
ColorSequenceKeypoint.new(1, color2)
}
btnGradient.Rotation = 45
btnGradient.Parent = btn

local btnStroke = Instance.new("UIStroke")
btnStroke.Color = color2
btnStroke.Thickness = 2
btnStroke.Transparency = 0.5
btnStroke.Parent = btn

-- Add glow effect for button
local btnGlow = Instance.new("UIStroke")
btnGlow.Color = color2
btnGlow.Thickness = 0
btnGlow.Transparency = 0.3
btnGlow.Parent = btn

local btnIcon = Instance.new("TextLabel")
btnIcon.Size = UDim2.new(0, 40 * getScale(), 1, 0)
btnIcon.Position = UDim2.new(0, 20 * getScale(), 0, 0)
btnIcon.Text = icon
btnIcon.TextSize = 24 * getScale()
btnIcon.TextColor3 = Color3.new(1, 1, 1)
btnIcon.Font = Enum.Font.GothamBold
btnIcon.BackgroundTransparency = 1
btnIcon.ZIndex = 13
btnIcon.Parent = btn

local btnText = Instance.new("TextLabel")
btnText.Size = UDim2.new(1, -80 * getScale(), 1, 0)
btnText.Position = UDim2.new(0, 60 * getScale(), 0, 0)
btnText.Text = text
btnText.TextSize = 18 * getScale()
btnText.TextColor3 = Color3.new(1, 1, 1)
btnText.Font = Enum.Font.GothamBold
btnText.TextXAlignment = Enum.TextXAlignment.Left
btnText.BackgroundTransparency = 1
btnText.ZIndex = 13
btnText.Parent = btn

local originalSize = btn.Size

btn.MouseEnter:Connect(function()
TweenService:Create(btn, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
BackgroundTransparency = 0.1,
Size = UDim2.new(1, -55 * getScale(), 0, 64 * getScale())
}):Play()
TweenService:Create(btnStroke, TweenInfo.new(0.3), {
Thickness = 3,
Transparency = 0.2
}):Play()
TweenService:Create(btnGlow, TweenInfo.new(0.3), {
Thickness = 5,
Transparency = 0.1
}):Play()
TweenService:Create(btnIcon, TweenInfo.new(0.3), {
TextSize = 28 * getScale()
}):Play()
end)

btn.MouseLeave:Connect(function()
TweenService:Create(btn, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
BackgroundTransparency = 0.3,
Size = originalSize
}):Play()
TweenService:Create(btnStroke, TweenInfo.new(0.3), {
Thickness = 2,
Transparency = 0.5
}):Play()
TweenService:Create(btnGlow, TweenInfo.new(0.3), {
Thickness = 0,
Transparency = 0.3
}):Play()
TweenService:Create(btnIcon, TweenInfo.new(0.3), {
TextSize = 24 * getScale()
}):Play()
end)

btn.MouseButton1Down:Connect(function()
TweenService:Create(btn, TweenInfo.new(0.1), {
Size = UDim2.new(1, -62 * getScale(), 0, 58 * getScale())
}):Play()
end)

btn.MouseButton1Up:Connect(function()
TweenService:Create(btn, TweenInfo.new(0.1), {
Size = UDim2.new(1, -55 * getScale(), 0, 64 * getScale())
}):Play()
end)

return btn
end

-- ================================================================= --
-- CREATE BUTTONS
-- ================================================================= --

local validateBtn = createButton("Validate Key", 270,
Color3.fromRGB(40, 180, 99),
Color3.fromRGB(20, 230, 120),
"✓")

local getKeyBtn = createButton("Get Key", 350,
Color3.fromRGB(52, 152, 219),
Color3.fromRGB(41, 128, 185),
"🔑")

local discordBtn = createButton("Join Discord", 430,
Color3.fromRGB(88, 101, 242),
Color3.fromRGB(71, 82, 196),
"💬")

-- ================================================================= --
-- BUTTON CLICK HANDLERS
-- ================================================================= --

validateBtn.MouseButton1Click:Connect(function()
local key = actualKey
if key == "" then
notify("Please enter a key!", false)
for i = 1, 4 do
TweenService:Create(inputContainer, TweenInfo.new(0.05), {
Position = UDim2.new(0, 25 * getScale(), 0, 190 * getScale())
}):Play()
task.wait(0.05)
TweenService:Create(inputContainer, TweenInfo.new(0.05), {
Position = UDim2.new(0, 35 * getScale(), 0, 190 * getScale())
}):Play()
task.wait(0.05)
end
TweenService:Create(inputContainer, TweenInfo.new(0.1), {
Position = UDim2.new(0, 30 * getScale(), 0, 190 * getScale())
}):Play()
else
validateBtn.Active = false

local result = JunkieProtected.ValidateKey({ Key = key })
if result == "valid" then
if writefile then
writefile(KEY_FILENAME, key)
end
notify("Key validated successfully! Welcome to THE MIST HUB", true)
createConfetti()

task.wait(1.5)

-- Enhanced fade-out outro
local fadeElements = {
{element = main, delay = 0},
{element = bgFrame, delay = 0.2},
{element = constellationContainer, delay = 0.1},
{element = particleContainer, delay = 0.15}
}

for _, data in ipairs(fadeElements) do
task.spawn(function()
task.wait(data.delay)
if data.element and data.element.Parent then
TweenService:Create(data.element, TweenInfo.new(0.6, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {
BackgroundTransparency = 1
}):Play()

-- Fade all children
for _, child in ipairs(data.element:GetDescendants()) do
if child:IsA("GuiObject") then
if child:IsA("TextLabel") or child:IsA("TextButton") or child:IsA("TextBox") then
TweenService:Create(child, TweenInfo.new(0.6), {
TextTransparency = 1
}):Play()
end
TweenService:Create(child, TweenInfo.new(0.6), {
BackgroundTransparency = 1
}):Play()
end
if child:IsA("UIStroke") then
TweenService:Create(child, TweenInfo.new(0.6), {
Transparency = 1
}):Play()
end
end
end
end)
end

task.wait(0.8)
gui:Destroy()
RunMainScript()
else
notify("Invalid key. Please check and try again.", false)
validateBtn.Active = true
end
end
end)

getKeyBtn.MouseButton1Click:Connect(function()
local link = JunkieProtected.GetKeyLink()
if setclipboard then
setclipboard(link)
notify("Key link copied to clipboard! Paste in browser.", true)
else
notify("Clipboard not supported. Check console for link.", false)
print("Key Link:", link)
end
end)

discordBtn.MouseButton1Click:Connect(function()
if setclipboard then
setclipboard(DISCORD_LINK)
notify("Discord link copied to clipboard!", true)
else
notify("Opening Discord in default browser...", true)
-- Fallback for systems without clipboard access
if syn and syn.request then
syn.request({
Url = "http://localhost/?redirect=" .. DISCORD_LINK,
Method = "GET"
})
end
end
end)

-- ================================================================= --
-- RESIZE HANDLER
-- ================================================================= --

camera:GetPropertyChangedSignal("ViewportSize"):Connect(function()
main.Size = scaledSize(600, 500)
main.Position = UDim2.fromScale(0.5, 0.5)
title.TextSize = 36 * getScale()
subtitle.TextSize = 14 * getScale()
input.TextSize = 16 * getScale()
end)

-- ================================================================= --
-- FINAL FADE-IN ANIMATION
-- ================================================================= --

task.wait(3)

main.BackgroundTransparency = 1
for _, child in ipairs(main:GetDescendants()) do
if child:IsA("GuiObject") then
if child:IsA("TextLabel") or child:IsA("TextButton") or child:IsA("TextBox") then
child.TextTransparency = 1
end
child.BackgroundTransparency = 1
end
if child:IsA("UIStroke") then
child.Transparency = 1
end
end

TweenService:Create(main, TweenInfo.new(0.6), {
BackgroundTransparency = 0.4
}):Play()

task.wait(0.2)

local function fadeIn(element, delay)
task.wait(delay)
if element:IsA("TextLabel") or element:IsA("TextButton") or element:IsA("TextBox") then
TweenService:Create(element, TweenInfo.new(0.4), {
TextTransparency = 0,
BackgroundTransparency = element.Name == "CloseButton" and 0.3 or (element:IsA("Frame") and 0.5 or 1)
}):Play()
elseif element:IsA("Frame") then
TweenService:Create(element, TweenInfo.new(0.4), {
BackgroundTransparency = 0.5
}):Play()
end

local stroke = element:FindFirstChildOfClass("UIStroke")
if stroke then
TweenService:Create(stroke, TweenInfo.new(0.4), {
Transparency = 0.5
}):Play()
end
end

-- Enhanced button fade-in function
local function fadeInButton(button, delay)
task.wait(delay)

-- Fade in the button background
TweenService:Create(button, TweenInfo.new(0.4), {
BackgroundTransparency = 0.3
}):Play()

-- Fade in the button stroke
local btnStroke = button:FindFirstChildOfClass("UIStroke")
if btnStroke then
TweenService:Create(btnStroke, TweenInfo.new(0.4), {
Transparency = 0.5
}):Play()
end

-- Fade in all child elements
for _, child in ipairs(button:GetChildren()) do
if child:IsA("TextLabel") then
TweenService:Create(child, TweenInfo.new(0.4), {
TextTransparency = 0
}):Play()
elseif child:IsA("UIGradient") then
-- Gradient doesn't have transparency, but we can create a fade effect by animating the button
TweenService:Create(button, TweenInfo.new(0.4), {
BackgroundTransparency = 0.3
}):Play()
end
end
end

fadeIn(closeBtn, 0)
fadeIn(title, 0.1)
fadeIn(subtitle, 0.15)
fadeIn(statusBar, 0.2)
fadeIn(statusIcon, 0.2)
fadeIn(statusText, 0.2)
fadeIn(statusDot, 0.2)
fadeIn(inputContainer, 0.3)
fadeIn(input, 0.3)
fadeIn(inputIcon, 0.3)
fadeIn(showKeyBtn, 0.3)

-- Use the enhanced button fade-in function for the three main buttons
fadeInButton(validateBtn, 0.4)
fadeInButton(getKeyBtn, 0.45)
fadeInButton(discordBtn, 0.5)

-- Auto-focus the input field after fade-in
task.wait(0.6)
input:CaptureFocus()



