local ScreenGui = Instance.new("ScreenGui")
local main = Instance.new("Frame")
local label = Instance.new("TextLabel")
local Hitbox = Instance.new("TextButton")
local TransparencyInput = Instance.new("TextBox")
local SizeInput = Instance.new("TextBox") -- New TextBox for hitbox size

ScreenGui.Parent = game.CoreGui

main.Name = "main"
main.Parent = ScreenGui
main.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Black
main.BackgroundTransparency = 1 -- Make the background of the main frame transparent
main.Position = UDim2.new(0.404, 0, 0.345, 0)
main.Size = UDim2.new(0, 200, 0, 180) -- Adjusted height for the new TextBox
main.Active = true
main.Draggable = true

label.Name = "label"
label.Parent = main
label.BackgroundColor3 = Color3.fromRGB(75, 0, 130) -- Dark Purple
label.Size = UDim2.new(0, 200, 0, 20)
label.Font = Enum.Font.SourceSans
label.Text = "Teen Titan GUI"
label.TextColor3 = Color3.fromRGB(255, 255, 255) -- White text color for contrast
label.TextScaled = true
label.TextSize = 5.000
label.TextWrapped = true

Hitbox.Name = "Hitbox"
Hitbox.Parent = main
Hitbox.BackgroundColor3 = Color3.fromRGB(48, 25, 52) -- Very Dark Purple
Hitbox.Position = UDim2.new(0.114, 0, 0.6, 0) -- Position it lower to fit the new TextBox
Hitbox.Size = UDim2.new(0, 90, 0, 40)
Hitbox.Font = Enum.Font.SourceSans
Hitbox.TextColor3 = Color3.fromRGB(255, 255, 255) -- White text color for contrast
Hitbox.TextSize = 40.000

TransparencyInput.Name = "TransparencyInput"
TransparencyInput.Parent = main
TransparencyInput.BackgroundTransparency = 1 -- Make background transparent
TransparencyInput.Position = UDim2.new(0.114, 0, 0.4, 0) -- Position it above the button
TransparencyInput.Size = UDim2.new(0, 90, 0, 30)
TransparencyInput.Font = Enum.Font.SourceSans
TransparencyInput.PlaceholderText = "Transparency (1-100)"
TransparencyInput.TextColor3 = Color3.fromRGB(255, 255, 255) -- White text for visibility
TransparencyInput.TextSize = 20

SizeInput.Name = "SizeInput" -- New TextBox for hitbox size
SizeInput.Parent = main
SizeInput.BackgroundTransparency = 1 -- Make background transparent
SizeInput.Position = UDim2.new(0.114, 0, 0.1, 0) -- Position it directly above the TransparencyTextBox
SizeInput.Size = UDim2.new(0, 90, 0, 30)
SizeInput.Font = Enum.Font.SourceSans
SizeInput.PlaceholderText = "Size (1-10000)"
SizeInput.TextColor3 = Color3.fromRGB(255, 255, 255) -- White text for visibility
SizeInput.TextSize = 20

local hitboxActive = true -- Variable to track the state of the hitbox (set to true to activate immediately)

-- Default size value
_G.HeadSize = 20

-- Initialize the hitboxes for other players immediately
game:GetService('RunService').RenderStepped:connect(function()
    if hitboxActive then
        for _, v in next, game:GetService('Players'):GetPlayers() do
            if v.Name ~= game:GetService('Players').LocalPlayer.Name then
                pcall(function()
                    local transparencyValue = tonumber(TransparencyInput.Text) or 100 -- Get user input and convert to number, default to 100
                    if transparencyValue < 1 then
                        transparencyValue = 1 -- Minimum value to make it visible
                    elseif transparencyValue > 100 then
                        transparencyValue = 100 -- Maximum value
                    end
                    local adjustedTransparency = transparencyValue / 100 -- Adjusting for Roblox transparency range (0 to 1)

                    -- Get the size from SizeInput or default to _G.HeadSize
                    _G.HeadSize = tonumber(SizeInput.Text) or _G.HeadSize 

                    v.Character.HumanoidRootPart.Size = Vector3.new(_G.HeadSize, _G.HeadSize, _G.HeadSize)
                    v.Character.HumanoidRootPart.Transparency = adjustedTransparency
                    v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really black")
                    v.Character.HumanoidRootPart.Material = "Neon"
                    v.Character.HumanoidRootPart.CanCollide = false
                end)
            end
        end
    end
end)

Hitbox.MouseButton1Down:connect(function()
    hitboxActive = not hitboxActive -- Toggle the hitbox state

    if hitboxActive then
        Hitbox.Text = "On" -- Change button text to "On"
    else
        for _, v in next, game:GetService('Players'):GetPlayers() do
            if v.Name ~= game:GetService('Players').LocalPlayer.Name then
                pcall(function()
                    v.Character.HumanoidRootPart.Size = Vector3.new(2, 2, 2) -- Resetting to default size
                    v.Character.HumanoidRootPart.Transparency = 0 -- Reset transparency
                    v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Medium stone grey") -- Reset color
                    v.Character.HumanoidRootPart.Material = "SmoothPlastic" -- Reset material
                    v.Character.HumanoidRootPart.CanCollide = true -- Enable collision
                end)
            end
        end
        
        Hitbox.Text = "Off" -- Change button text to "Off"
    end
end)

-- Ensure the label is not visible but keep the main frame for positioning the TextBox and button.
label.Visible = false 
