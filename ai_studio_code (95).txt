--==============================================================================
--|| CONFIGURATION & SERVICES
--==============================================================================
local SERVER_READ_URL  = "https://8775b734-9c08-4b7f-932a-e8df8538b275-00-1xt67y1hms2uu.kirk.replit.dev/read"
local SERVER_SEND_URL  = "https://8775b734-9c08-4b7f-932a-e8df8538b275-00-1xt67y1hms2uu.kirk.replit.dev/send"
local NETWORK_REFRESH_RATE, CLIENT_TIMEOUT = 1, 4
local Players, HttpService, TeleportService, UserInputService, RunService, TweenService, Debris, MarketplaceService = game:GetService("Players"), game:GetService("HttpService"), game:GetService("TeleportService"), game:GetService("UserInputService"), game:GetService("RunService"), game:GetService("TweenService"), game:GetService("Debris"), game:GetService("MarketplaceService")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local AdminUserIDs = { 3307721575, 3325270002, 9145208990, 974723668, 5309041855 }

--==============================================================================
--|| STATE MANAGEMENT
--==============================================================================
local activeNetworkUsers, selectedPlayerInfo = {}, {}; local isMinimized, isSwitchingTabs = false, false; local currentTab, networkMonitorConnection = "Current", nil
local frameConnections, playerFrames_Current, playerFrames_Global = {}, {}, {}; local isRefreshing = false; local localGameName = "Unknown Game"
task.spawn(function() local s, r = pcall(MarketplaceService.GetProductInfo, MarketplaceService, game.PlaceId); if s and r and r.Name then localGameName = r.Name end end)

--==============================================================================
--|| HELPER FUNCTIONS
--==============================================================================
local function isAdmin(id) for _, i in ipairs(AdminUserIDs) do if i == id then return true end end; return false end
local function safeJsonDecode(s) local ok, res = pcall(HttpService.JSONDecode, HttpService, s); if ok then return res end; return nil end
local function sendMessageToServer(payload) task.spawn(function() local s, json = pcall(HttpService.JSONEncode, HttpService, payload); if s then pcall(function() game:HttpGet(SERVER_SEND_URL .. "?text=" .. HttpService:UrlEncode(json)) end) end end) end
local function fadeGuiObject(obj, dir, dur) dur = dur or 0.3; local goal = (dir == "In") and 0 or 1; local ti = TweenInfo.new(dur); local tweens = {}; for _, c in ipairs(obj:GetDescendants()) do if c:IsA("GuiObject") then local prop = "BackgroundTransparency"; if c:IsA("TextLabel") or c:IsA("TextButton") or c:IsA("TextBox") then prop = "TextTransparency" elseif c:IsA("ImageLabel") or c:IsA("ImageButton") then prop = "ImageTransparency" end; if c[prop] ~= nil then table.insert(tweens, TweenService:Create(c, ti, {[prop] = goal})) end end end; table.insert(tweens, TweenService:Create(obj, ti, {BackgroundTransparency = goal})); for _, t in ipairs(tweens) do t:Play() end; return tweens[#tweens] end

--==============================================================================
--|| GUI CREATION
--==============================================================================
local Theme = { Colors = { MainBackground = Color3.fromRGB(35, 37, 40), TopBar = Color3.fromRGB(28, 29, 31), ContentBackground = Color3.fromRGB(45, 47, 50), SearchBackground = Color3.fromRGB(40, 42, 45), Text = Color3.fromRGB(220, 220, 220), TextSubtle = Color3.fromRGB(180, 180, 180), Button = Color3.fromRGB(55, 57, 60), ButtonHover = Color3.fromRGB(75, 77, 80), CloseButtonHover = Color3.fromRGB(231, 76, 60), OwnerTag = Color3.fromRGB(255, 207, 74), OwnerName = Color3.fromRGB(255, 220, 120), OwnerBackground = Color3.fromRGB(87, 72, 28), OwnerHover = Color3.fromRGB(107, 92, 48), UserTag = Color3.fromRGB(231, 76, 60), UserName = Color3.fromRGB(240, 128, 128), UserBackground = Color3.fromRGB(87, 28, 28), UserHover = Color3.fromRGB(107, 48, 48), TabInactive = Color3.fromRGB(40,42,45), TabActive = Color3.fromRGB(55,57,60), TabHover = Color3.fromRGB(65, 67, 70), Separator = Color3.fromRGB(60,62,65), ScriptText = Color3.fromRGB(180, 210, 255) }, Animations = { In = TweenInfo.new(0.6, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), Out = TweenInfo.new(0.4, Enum.EasingStyle.Quint, Enum.EasingDirection.In), Hover = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), TabSwitch = TweenInfo.new(0.3, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out) }, Tags = { Owner = "Owner", User = "User" } }
local AdminGui = Instance.new("ScreenGui"); AdminGui.Name = "AdminNetworkGui"; AdminGui.Parent = PlayerGui; AdminGui.ResetOnSpawn = false
local MainFrame = Instance.new("Frame"); MainFrame.Name = "MainFrame"; MainFrame.Size = UDim2.new(0, 460, 0, 420); MainFrame.Position = UDim2.new(0.5, -230, -1, 0); MainFrame.BackgroundColor3 = Theme.Colors.MainBackground; MainFrame.BorderSizePixel = 0; MainFrame.ClipsDescendants = true; MainFrame.Parent = AdminGui
local FrameCorner = Instance.new("UICorner", MainFrame); FrameCorner.CornerRadius = UDim.new(0, 8); local TopBar = Instance.new("Frame", MainFrame); TopBar.Name = "TopBar"; TopBar.Size = UDim2.new(1, 0, 0, 35); TopBar.BackgroundColor3 = Theme.Colors.TopBar; TopBar.BorderSizePixel = 0; local TopBarCorner = Instance.new("UICorner", TopBar); TopBarCorner.CornerRadius = UDim.new(0, 8)
local TitleLabel = Instance.new("TextLabel", TopBar); TitleLabel.Name = "TitleLabel"; TitleLabel.Size = UDim2.new(1, -80, 1, 0); TitleLabel.Position = UDim2.new(0, 15, 0, 0); TitleLabel.BackgroundTransparency = 1; TitleLabel.Font = Enum.Font.SourceSansBold; TitleLabel.TextColor3 = Theme.Colors.Text; TitleLabel.Text = "Network Control"; TitleLabel.TextXAlignment = Enum.TextXAlignment.Left; TitleLabel.TextSize = 20
local CloseButton = Instance.new("TextButton", TopBar); CloseButton.Name = "CloseButton"; CloseButton.Size = UDim2.new(0, 35, 1, 0); CloseButton.Position = UDim2.new(1, -35, 0, 0); CloseButton.BackgroundColor3 = Theme.Colors.TopBar; CloseButton.Font = Enum.Font.SourceSansBold; CloseButton.TextColor3 = Theme.Colors.Text; CloseButton.Text = "X"; CloseButton.TextSize = 24; local CloseCorner = Instance.new("UICorner", CloseButton); CloseCorner.CornerRadius = UDim.new(0, 8)
local MinimizeButton = Instance.new("TextButton", TopBar); MinimizeButton.Name = "MinimizeButton"; MinimizeButton.Size = UDim2.new(0, 35, 1, 0); MinimizeButton.Position = UDim2.new(1, -70, 0, 0); MinimizeButton.BackgroundColor3 = Theme.Colors.TopBar; MinimizeButton.Font = Enum.Font.SourceSansBold; MinimizeButton.TextColor3 = Theme.Colors.Text; MinimizeButton.Text = "_"; MinimizeButton.TextSize = 24; local MinimizeCorner = Instance.new("UICorner", MinimizeButton); MinimizeCorner.CornerRadius = UDim.new(0, 8)
local TabFrame = Instance.new("Frame", MainFrame); TabFrame.Name = "TabFrame"; TabFrame.Size = UDim2.new(1, -10, 0, 30); TabFrame.Position = UDim2.new(0, 5, 0, 40); TabFrame.BackgroundTransparency = 1; local UIListLayout_Tabs = Instance.new("UIListLayout", TabFrame); UIListLayout_Tabs.Padding = UDim.new(0, 5); UIListLayout_Tabs.FillDirection = Enum.FillDirection.Horizontal
local TabCurrentButton = Instance.new("TextButton", TabFrame); TabCurrentButton.Name = "TabCurrentButton"; TabCurrentButton.Text = "Current Server"; TabCurrentButton.Size = UDim2.new(0.5, -2.5, 1, 0); TabCurrentButton.BackgroundColor3 = Theme.Colors.TabActive; TabCurrentButton.Font = Enum.Font.SourceSansBold; TabCurrentButton.TextColor3 = Theme.Colors.Text; TabCurrentButton.TextSize = 16; local TabCurrentCorner = Instance.new("UICorner", TabCurrentButton); TabCurrentCorner.CornerRadius = UDim.new(0, 6)
local TabGlobalButton = Instance.new("TextButton", TabFrame); TabGlobalButton.Name = "TabGlobalButton"; TabGlobalButton.Text = "Global Network"; TabGlobalButton.Size = UDim2.new(0.5, -2.5, 1, 0); TabGlobalButton.BackgroundColor3 = Theme.Colors.TabInactive; TabGlobalButton.Font = Enum.Font.SourceSansBold; TabGlobalButton.TextColor3 = Theme.Colors.TextSubtle; TabGlobalButton.TextSize = 16; local TabGlobalCorner = Instance.new("UICorner", TabGlobalButton); TabGlobalCorner.CornerRadius = UDim.new(0, 6)
local PlayerListContainer = Instance.new("Frame", MainFrame); PlayerListContainer.Name = "PlayerListContainer"; PlayerListContainer.Size = UDim2.new(0, 222, 1, -80); PlayerListContainer.Position = UDim2.new(0, 5, 0, 75); PlayerListContainer.BackgroundTransparency = 1
local SearchBox = Instance.new("TextBox", PlayerListContainer); SearchBox.Name = "SearchBox"; SearchBox.Size = UDim2.new(1, 0, 0, 24); SearchBox.BackgroundColor3 = Theme.Colors.SearchBackground; SearchBox.Font = Enum.Font.SourceSans; SearchBox.PlaceholderText = "Search by Name or ID..."; SearchBox.TextColor3 = Theme.Colors.Text; SearchBox.PlaceholderColor3 = Theme.Colors.TextSubtle; SearchBox.TextSize = 14; SearchBox.ClearTextOnFocus = false; local SearchCorner = Instance.new("UICorner", SearchBox); SearchCorner.CornerRadius = UDim.new(0.5, 0); local SearchStroke = Instance.new("UIStroke", SearchBox); SearchStroke.Color = Theme.Colors.TopBar; SearchStroke.Thickness = 1; local SearchIcon = Instance.new("TextLabel", SearchBox); SearchIcon.Name = "SearchIcon"; SearchIcon.Size = UDim2.new(0, 24, 1, 0); SearchIcon.Position = UDim2.new(0, 8, 0, 0); SearchIcon.BackgroundTransparency = 1; SearchIcon.Font = Enum.Font.Arial; SearchIcon.Text = "üîç"; SearchIcon.TextColor3 = Theme.Colors.TextSubtle; SearchIcon.TextSize = 16; SearchIcon.TextXAlignment = Enum.TextXAlignment.Center; local SearchPadding = Instance.new("UIPadding", SearchBox); SearchPadding.PaddingLeft = UDim.new(0, 30); SearchBox.Text = ""
local PlayerListFrame_Current = Instance.new("ScrollingFrame", PlayerListContainer); PlayerListFrame_Current.Name = "PlayerListFrame_Current"; PlayerListFrame_Current.Size = UDim2.new(1, 0, 1, -29); PlayerListFrame_Current.Position = UDim2.new(0, 0, 0, 29); PlayerListFrame_Current.BackgroundColor3 = Theme.Colors.ContentBackground; PlayerListFrame_Current.BorderSizePixel = 0; PlayerListFrame_Current.CanvasSize = UDim2.new(0, 0, 0, 0); PlayerListFrame_Current.ScrollBarThickness = 6; local PlayerListCornerC = Instance.new("UICorner", PlayerListFrame_Current); PlayerListCornerC.CornerRadius = UDim.new(0, 6); local UIListLayoutC = Instance.new("UIListLayout", PlayerListFrame_Current); UIListLayoutC.Padding = UDim.new(0, 5); UIListLayoutC.SortOrder = Enum.SortOrder.LayoutOrder
local PlayerListFrame_Global = Instance.new("ScrollingFrame", PlayerListContainer); PlayerListFrame_Global.Name = "PlayerListFrame_Global"; PlayerListFrame_Global.Size = UDim2.new(1, 0, 1, -29); PlayerListFrame_Global.Position = UDim2.new(0, 0, 0, 29); PlayerListFrame_Global.BackgroundColor3 = Theme.Colors.ContentBackground; PlayerListFrame_Global.BorderSizePixel = 0; PlayerListFrame_Global.CanvasSize = UDim2.new(0, 0, 0, 0); PlayerListFrame_Global.ScrollBarThickness = 6; PlayerListFrame_Global.Visible = false; local PlayerListCornerG = Instance.new("UICorner", PlayerListFrame_Global); PlayerListCornerG.CornerRadius = UDim.new(0, 6); local UIListLayoutG = Instance.new("UIListLayout", PlayerListFrame_Global); UIListLayoutG.Padding = UDim.new(0, 5); UIListLayoutG.SortOrder = Enum.SortOrder.LayoutOrder
local CommandFrame = Instance.new("ScrollingFrame", MainFrame); CommandFrame.Name = "CommandFrame"; CommandFrame.Size = UDim2.new(0, 222, 1, -80); CommandFrame.Position = UDim2.new(0, 233, 0, 75); CommandFrame.BackgroundColor3 = Theme.Colors.ContentBackground; CommandFrame.BorderSizePixel = 0; CommandFrame.CanvasSize = UDim2.new(0,0,0,0); CommandFrame.ScrollBarThickness = 4; CommandFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y; local CommandFrameCorner = Instance.new("UICorner", CommandFrame); CommandFrameCorner.CornerRadius = UDim.new(0, 6); local CommandListLayout = Instance.new("UIListLayout", CommandFrame); CommandListLayout.Padding = UDim.new(0, 5); CommandListLayout.SortOrder = Enum.SortOrder.LayoutOrder
local TargetedCommandsFrame = Instance.new("Frame", CommandFrame); TargetedCommandsFrame.BackgroundTransparency = 1; TargetedCommandsFrame.Size = UDim2.new(1,0,0,0); TargetedCommandsFrame.AutomaticSize = Enum.AutomaticSize.Y; TargetedCommandsFrame.LayoutOrder = 1; local CommandLayout = Instance.new("UIGridLayout", TargetedCommandsFrame); CommandLayout.CellPadding = UDim2.new(0, 5, 0, 5); local buttonWidth = (222 - 5) / 2; CommandLayout.CellSize = UDim2.new(0, math.floor(buttonWidth), 0, 35); CommandLayout.SortOrder = Enum.SortOrder.LayoutOrder
local UniversalHeaderLabel = Instance.new("TextLabel", CommandFrame); UniversalHeaderLabel.Name = "UniversalHeader"; UniversalHeaderLabel.Size = UDim2.new(1, 0, 0, 20); UniversalHeaderLabel.Text = " target : all commands"; UniversalHeaderLabel.Font = Enum.Font.SourceSans; UniversalHeaderLabel.TextColor3 = Theme.Colors.TextSubtle; UniversalHeaderLabel.TextSize = 14; UniversalHeaderLabel.BackgroundTransparency = 1; UniversalHeaderLabel.TextXAlignment = Enum.TextXAlignment.Center; UniversalHeaderLabel.LayoutOrder = 2
local SeparatorFrame = Instance.new("Frame", CommandFrame); SeparatorFrame.Size = UDim2.new(1, -10, 0, 1); SeparatorFrame.Position = UDim2.new(0, 5, 0, 0); SeparatorFrame.BackgroundColor3 = Theme.Colors.Separator; SeparatorFrame.BorderSizePixel = 0; SeparatorFrame.LayoutOrder = 3
local UniversalCommandsFrame = Instance.new("Frame", CommandFrame); UniversalCommandsFrame.BackgroundTransparency = 1; UniversalCommandsFrame.Size = UDim2.new(1,0,0,0); UniversalCommandsFrame.AutomaticSize = Enum.AutomaticSize.Y; UniversalCommandsFrame.LayoutOrder = 4; local UniversalCommandLayout = Instance.new("UIGridLayout", UniversalCommandsFrame); UniversalCommandLayout.CellPadding = UDim2.new(0, 5, 0, 5); UniversalCommandLayout.CellSize = UDim2.new(0, math.floor(buttonWidth), 0, 35); UniversalCommandLayout.SortOrder = Enum.SortOrder.LayoutOrder
local ModuleHeaderLabel = Instance.new("TextLabel", CommandFrame); ModuleHeaderLabel.Name = "ModuleHeader"; ModuleHeaderLabel.Size = UDim2.new(1, 0, 0, 20); ModuleHeaderLabel.Text = " target : module commands"; ModuleHeaderLabel.Font = Enum.Font.SourceSans; ModuleHeaderLabel.TextColor3 = Theme.Colors.TextSubtle; ModuleHeaderLabel.TextSize = 14; ModuleHeaderLabel.BackgroundTransparency = 1; ModuleHeaderLabel.TextXAlignment = Enum.TextXAlignment.Center; ModuleHeaderLabel.LayoutOrder = 5
local SeparatorFrame2 = SeparatorFrame:Clone(); SeparatorFrame2.LayoutOrder = 6; SeparatorFrame2.Parent = CommandFrame
local ModuleCommandsFrame = Instance.new("Frame", CommandFrame); ModuleCommandsFrame.BackgroundTransparency = 1; ModuleCommandsFrame.Size = UDim2.new(1,0,0,0); ModuleCommandsFrame.AutomaticSize = Enum.AutomaticSize.Y; ModuleCommandsFrame.LayoutOrder = 7; local ModuleCommandLayout = Instance.new("UIGridLayout", ModuleCommandsFrame); ModuleCommandLayout.CellPadding = UDim2.new(0, 5, 0, 5); ModuleCommandLayout.CellSize = UDim2.new(0, math.floor(buttonWidth), 0, 35); ModuleCommandLayout.SortOrder = Enum.SortOrder.LayoutOrder

local PlayerTemplate = Instance.new("Frame"); PlayerTemplate.Name = "PlayerTemplate"; PlayerTemplate.Size = UDim2.new(1, 0, 0, 75); PlayerTemplate.BackgroundColor3 = Theme.Colors.Button; PlayerTemplate.BorderSizePixel = 0; PlayerTemplate.BackgroundTransparency = 1; local PlayerCorner = Instance.new("UICorner", PlayerTemplate); PlayerCorner.CornerRadius = UDim.new(0, 6); local PlayerButton = Instance.new("TextButton", PlayerTemplate); PlayerButton.Name = "PlayerButton"; PlayerButton.Size = UDim2.new(1,0,1,0); PlayerButton.Text = ""; PlayerButton.BackgroundTransparency = 1; local PlayerIcon = Instance.new("ImageLabel", PlayerTemplate); PlayerIcon.Name = "PlayerIcon"; PlayerIcon.Size = UDim2.new(0, 50, 0, 50); PlayerIcon.Position = UDim2.new(0, 5, 0.5, -25); PlayerIcon.BackgroundTransparency = 1; local IconCorner = Instance.new("UICorner", PlayerIcon); IconCorner.CornerRadius = UDim.new(1, 0); local DisplayName = Instance.new("TextLabel", PlayerTemplate); DisplayName.Name = "DisplayName"; DisplayName.Size = UDim2.new(1, -120, 0, 18); DisplayName.Position = UDim2.new(0, 65, 0, 4); DisplayName.Font = Enum.Font.SourceSansBold; DisplayName.TextColor3 = Theme.Colors.Text; DisplayName.TextXAlignment = Enum.TextXAlignment.Left; DisplayName.BackgroundTransparency = 1; DisplayName.TextSize = 16; DisplayName.ClipsDescendants = true; local UserName = Instance.new("TextLabel", PlayerTemplate); UserName.Name = "UserName"; UserName.Size = UDim2.new(1, -120, 0, 16); UserName.Position = UDim2.new(0, 65, 0, 22); UserName.Font = Enum.Font.SourceSans; UserName.TextColor3 = Theme.Colors.TextSubtle; UserName.TextXAlignment = Enum.TextXAlignment.Left; UserName.BackgroundTransparency = 1; UserName.TextSize = 13; UserName.ClipsDescendants = true; local TagLabel = Instance.new("TextLabel", PlayerTemplate); TagLabel.Name = "TagLabel"; TagLabel.Size = UDim2.new(0, 45, 0, 20); TagLabel.Position = UDim2.new(1, -50, 0.5, -10); TagLabel.Font = Enum.Font.SourceSansBold; TagLabel.TextColor3 = Color3.fromRGB(255,255,255); TagLabel.BackgroundColor3 = Theme.Colors.OwnerTag; TagLabel.Text = ""; TagLabel.TextScaled = true; TagLabel.Visible = false; local TagCorner = Instance.new("UICorner", TagLabel); TagCorner.CornerRadius = UDim.new(0, 6); local GameName = Instance.new("TextLabel", PlayerTemplate); GameName.Name = "GameName"; GameName.Size = UDim2.new(1, -120, 0, 16); GameName.Position = UDim2.new(0, 65, 0, 38); GameName.Font = Enum.Font.SourceSans; GameName.TextColor3 = Theme.Colors.TextSubtle; GameName.TextXAlignment = Enum.TextXAlignment.Left; GameName.BackgroundTransparency = 1; GameName.TextSize = 13; GameName.ClipsDescendants = true; local ScriptName = Instance.new("TextLabel", PlayerTemplate); ScriptName.Name = "ScriptName"; ScriptName.Size = UDim2.new(1, -120, 0, 16); ScriptName.Position = UDim2.new(0, 65, 0, 56); ScriptName.Font = Enum.Font.SourceSans; ScriptName.TextColor3 = Theme.Colors.ScriptText; ScriptName.TextXAlignment = Enum.TextXAlignment.Left; ScriptName.BackgroundTransparency = 1; ScriptName.TextSize = 13; ScriptName.Text = ""; ScriptName.Visible = false;
PlayerTemplate.Parent = nil
local JoinServerButton = Instance.new("TextButton"); JoinServerButton.Name = "JoinServer"; JoinServerButton.Text = "Join Server"; JoinServerButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255); JoinServerButton.TextColor3 = Color3.fromRGB(20, 20, 20); JoinServerButton.Font = Enum.Font.SourceSansBold; JoinServerButton.TextSize = 16; JoinServerButton.Visible = false; JoinServerButton.LayoutOrder = 1000; JoinServerButton.Parent = TargetedCommandsFrame; local JoinCorner = Instance.new("UICorner", JoinServerButton); JoinCorner.CornerRadius = UDim.new(0, 5)

--==============================================================================
--|| DYNAMIC GUI MANAGEMENT
--==============================================================================
local function updateCanvasSize(list) task.wait(); local layout = list:FindFirstChildOfClass("UIListLayout"); if layout then list.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y) end end
local function showNotification(text, dur) local notif = Instance.new("TextLabel"); notif.Text = text; notif.Size = UDim2.new(0.8, 0, 0, 50); notif.Position = UDim2.new(0.5, 0, 1, 20); notif.AnchorPoint = Vector2.new(0.5, 1); notif.BackgroundColor3 = Theme.Colors.TopBar; notif.Font = Enum.Font.SourceSansBold; notif.TextColor3 = Theme.Colors.Text; notif.TextScaled = true; notif.Parent = AdminGui; local notifCorner = Instance.new("UICorner", notif); notifCorner.CornerRadius = UDim.new(0, 6); TweenService:Create(notif, Theme.Animations.In, {Position = UDim2.new(0.5, 0, 1, -10)}):Play(); Debris:AddItem(notif, dur or 4); task.delay(dur or 4 - 0.4, function() if notif.Parent then TweenService:Create(notif, Theme.Animations.Out, {Position = UDim2.new(0.5, 0, 1, 20)}):Play() end end) end
local function makeDraggable(obj, handle) local dragging, dragStart, startPos; handle.InputBegan:Connect(function(i) if (i.UserInputType == Enum.UserInputType.MouseButton1 or i.UserInputType == Enum.UserInputType.Touch) and not isMinimized then dragging, dragStart, startPos = true, i.Position, obj.Position; i.Changed:Connect(function() if i.UserInputState == Enum.UserInputState.End then dragging = false end end) end end); UserInputService.InputChanged:Connect(function(i) if (i.UserInputType == Enum.UserInputType.MouseMovement or i.UserInputType == Enum.UserInputType.Touch) and dragging then local delta = i.Position - dragStart; obj.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y) end end) end
local function getCommandInput(title, placeholder, cb) local bg = Instance.new("Frame", MainFrame); bg.Size=UDim2.fromScale(1,1);bg.BackgroundColor3=Color3.new(0,0,0);bg.BackgroundTransparency=0.3;local frame=Instance.new("Frame",bg);frame.Size=UDim2.new(0,300,0,120);frame.Position=UDim2.new(0.5,-150,0.5,-60);frame.BackgroundColor3=Theme.Colors.MainBackground;local c=Instance.new("UICorner",frame);c.CornerRadius=UDim.new(0,6);local l=Instance.new("TextLabel",frame);l.Size=UDim2.new(1,-20,0,30);l.Position=UDim2.new(0,10,0,10);l.Text=title;l.Font=Enum.Font.SourceSansBold;l.TextColor3=Theme.Colors.Text;l.TextSize=18;l.BackgroundTransparency=1;local box=Instance.new("TextBox",frame);box.Size=UDim2.new(1,-20,0,30);box.Position=UDim2.new(0,10,0,45);box.PlaceholderText=placeholder;box.Font=Enum.Font.SourceSans;box.TextColor3=Theme.Colors.Text;box.BackgroundColor3=Theme.Colors.ContentBackground;local bc=Instance.new("UICorner",box);bc.CornerRadius=UDim.new(0,4);box:CaptureFocus();local submit=Instance.new("TextButton",frame);submit.Size=UDim2.new(0.5,-15,0,30);submit.Position=UDim2.new(0,10,0,85);submit.Text="Submit";submit.BackgroundColor3=Theme.Colors.ButtonHover;submit.Font=Enum.Font.SourceSansBold;submit.TextColor3=Color3.new(1,1,1);local sc=Instance.new("UICorner",submit);sc.CornerRadius=UDim.new(0,4);local cancel=Instance.new("TextButton",frame);cancel.Size=UDim2.new(0.5,-15,0,30);cancel.Position=UDim2.new(0.5,5,0,85);cancel.Text="Cancel";cancel.BackgroundColor3=Theme.Colors.Button;cancel.Font=Enum.Font.SourceSansBold;cancel.TextColor3=Theme.Colors.Text;local cc=Instance.new("UICorner",cancel);cc.CornerRadius=UDim.new(0,4);local function close()if bg.Parent then bg:Destroy()end end;submit.MouseButton1Click:Connect(function()cb(box.Text);close()end);cancel.MouseButton1Click:Connect(close);box.FocusLost:Connect(function(e)if e then cb(box.Text);close()end end)end
local function applyPlayerStyle(pFrame, status, isSelected) if frameConnections[pFrame] then for _, c in ipairs(frameConnections[pFrame]) do c:Disconnect() end; frameConnections[pFrame] = nil end; frameConnections[pFrame] = {}; local base, hover, name, tag, tagName; if status == "Owner" then base, hover, name, tag, tagName = Theme.Colors.OwnerBackground, Theme.Colors.OwnerHover, Theme.Colors.OwnerName, Theme.Colors.OwnerTag, Theme.Tags.Owner elseif status == "User" then base, hover, name, tag, tagName = Theme.Colors.UserBackground, Theme.Colors.UserHover, Theme.Colors.UserName, Theme.Colors.UserTag, Theme.Tags.User else base, hover, name = Theme.Colors.Button, Theme.Colors.ButtonHover, Theme.Colors.Text end; pFrame.DisplayName.TextColor3 = name; if tagName then pFrame.TagLabel.Text, pFrame.TagLabel.BackgroundColor3, pFrame.TagLabel.Visible = tagName, tag, true else pFrame.TagLabel.Visible = false end; local targetColor = isSelected and hover or base; local colorTween = TweenService:Create(pFrame, Theme.Animations.Hover, { BackgroundColor3 = targetColor }); if pFrame:GetAttribute("NeedsEntryAnim") then pFrame:SetAttribute("NeedsEntryAnim", nil); local finalPos = pFrame.Position; pFrame.Position -= UDim2.fromOffset(0,20); for _,c in ipairs(pFrame:GetDescendants()) do if c:IsA("GuiObject") then if c:IsA("Frame") or c:IsA("TextLabel") or c:IsA("ImageLabel") or c:IsA("TextButton") or c:IsA("ImageButton") then c.BackgroundTransparency = 1 end; if c:IsA("TextLabel") or c:IsA("TextButton") or c:IsA("TextBox") then c.TextTransparency = 1 end; if c:IsA("ImageLabel") or c:IsA("ImageButton") then c.ImageTransparency = 1 end end end; fadeGuiObject(pFrame, "In", 0.6); TweenService:Create(pFrame, Theme.Animations.In, {Position = finalPos}):Play(); colorTween:Play() else colorTween:Play() end; local me = pFrame.PlayerButton.MouseEnter:Connect(function() if not isSelected then TweenService:Create(pFrame, Theme.Animations.Hover, { BackgroundColor3 = hover }):Play() end end); local ml = pFrame.PlayerButton.MouseLeave:Connect(function() if not isSelected then TweenService:Create(pFrame, Theme.Animations.Hover, { BackgroundColor3 = base }):Play() end end); table.insert(frameConnections[pFrame], me); table.insert(frameConnections[pFrame], ml); pFrame:SetAttribute("CurrentStatus", status); pFrame:SetAttribute("IsSelected", isSelected) end
local function createPlayerFrame(pData, parent) local pFrame = PlayerTemplate:Clone(); pFrame.Name = tostring(pData.userId); pFrame.DisplayName.Text = pData.displayName; pFrame.UserName.Text = "@" .. pData.name; pFrame.GameName.Text = "üéÆ " .. (pData.gameName or "Unknown Game"); pFrame:SetAttribute("NeedsEntryAnim", true); task.spawn(function() local s, c = pcall(Players.GetUserThumbnailAsync, Players, pData.userId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size420x420); if s and c and pFrame.Parent then pFrame.PlayerIcon.Image = c end end); pFrame.PlayerButton.MouseButton1Click:Connect(function() if selectedPlayerInfo and selectedPlayerInfo.userId == pData.userId then selectedPlayerInfo = nil else selectedPlayerInfo = pData end; JoinServerButton.Visible = (selectedPlayerInfo and currentTab == "Global"); RefreshPlayerLists() end); pFrame.Parent = parent; return pFrame end
local function filterPlayerLists() local q = SearchBox.Text:lower(); local function f(tbl) for _, p in pairs(tbl) do if p and p.Parent then p.Visible = (q == "" or p.DisplayName.Text:lower():find(q, 1, true) or p.UserName.Text:lower():find(q, 1, true) or p.Name:find(q, 1, true)) end end end; f(playerFrames_Current); f(playerFrames_Global); updateCanvasSize(PlayerListFrame_Current); updateCanvasSize(PlayerListFrame_Global) end
function RefreshPlayerLists() if isRefreshing then return end; isRefreshing = true; local seenCurrent, seenGlobal = {}, {}; for _, p in ipairs(Players:GetPlayers()) do local uid = p.UserId; seenCurrent[uid] = true; local pFrame = playerFrames_Current[uid]; if not pFrame or not pFrame.Parent then pFrame = createPlayerFrame({userId = uid, name = p.Name, displayName = p.DisplayName, jobId = game.JobId, gameName = localGameName}, PlayerListFrame_Current); playerFrames_Current[uid] = pFrame end; local userData = activeNetworkUsers[uid]; local status = "Normal"; if isAdmin(uid) then status = "Owner" elseif userData then status = "User" end; if pFrame and pFrame:FindFirstChild("ScriptName") then if userData and userData.module == "Mist_v3" then pFrame.ScriptName.Visible = true; pFrame.ScriptName.Text = "Script: Mist v3" else pFrame.ScriptName.Visible = false; pFrame.ScriptName.Text = "" end end; pFrame.LayoutOrder = (status == "Owner") and -1 or ((status == "User") and 0 or 1); local isSelected = selectedPlayerInfo and selectedPlayerInfo.userId == uid; if pFrame:GetAttribute("CurrentStatus")~=status or pFrame:GetAttribute("IsSelected")~=isSelected or pFrame:GetAttribute("NeedsEntryAnim") then applyPlayerStyle(pFrame, status, isSelected) end end; for uid, uData in pairs(activeNetworkUsers) do seenGlobal[uid] = true; local pFrame = playerFrames_Global[uid]; if not pFrame or not pFrame.Parent then pFrame = createPlayerFrame(uData, PlayerListFrame_Global); playerFrames_Global[uid] = pFrame end; if pFrame and pFrame:FindFirstChild("ScriptName") then if uData.module == "Mist_v3" then pFrame.ScriptName.Visible = true; pFrame.ScriptName.Text = "Script: Mist v3" else pFrame.ScriptName.Visible = false; pFrame.ScriptName.Text = "" end end; local status = isAdmin(uid) and "Owner" or "User"; local isSelected = selectedPlayerInfo and selectedPlayerInfo.userId == uid; if pFrame:GetAttribute("CurrentStatus")~=status or pFrame:GetAttribute("IsSelected")~=isSelected or pFrame:GetAttribute("NeedsEntryAnim") then applyPlayerStyle(pFrame, status, isSelected) end end; for uid, p in pairs(playerFrames_Current) do if not seenCurrent[uid] then fadeGuiObject(p, "Out").Completed:Connect(function() if p then p:Destroy() end end); playerFrames_Current[uid] = nil end end; for uid, p in pairs(playerFrames_Global) do if not seenGlobal[uid] then fadeGuiObject(p, "Out").Completed:Connect(function() if p then p:Destroy() end end); playerFrames_Global[uid] = nil end end; filterPlayerLists(); isRefreshing = false end
AdminGui.Destroying:Connect(function() if networkMonitorConnection then task.cancel(networkMonitorConnection) end; for _, c in pairs(frameConnections) do for _, conn in ipairs(c) do conn:Disconnect() end end end)
local function NetworkMonitor() while AdminGui.Parent do local s, resp = pcall(game.HttpGet, game, SERVER_READ_URL .. "?cb=" .. HttpService:GenerateGUID(false)); if s and resp then local data = safeJsonDecode(resp); if type(data)=="table" then local latest = {}; local now = os.time(); for i = #data, 1, -1 do local msg = safeJsonDecode(data[i]); if type(msg)=="table" and msg.userId and msg.ts and not latest[msg.userId] then if (now - msg.ts) <= CLIENT_TIMEOUT then latest[msg.userId] = msg end end end; activeNetworkUsers = latest end end; RefreshPlayerLists(); task.wait(NETWORK_REFRESH_RATE) end end

local Commands = {
	{name="freeze", order=1}, {name="unfreeze", order=2}, {name="kill", order=9}, {name="rejoin", order=10}, {name="kick", args={"Kick Message:", "Kicked by Admin"}, order=11}, {name="use", text="Execute", args={"Script URL:"}, order=13},
    {name="mist_toggle_exclude", text="Toggle Exclude", order=19, isTargetedOnly = true},
	{name="mist_toggle_target", text="Toggle Target", order=20, moduleCmd = true}, {name="mist_toggle_esp", text="Toggle ESP", order=21, moduleCmd = true}, {name="mist_toggle_stealth", text="Toggle Stealth", order=22, moduleCmd = true}, {name="mist_toggle_fov_changer", text="Toggle FOV Changer", order=23, moduleCmd = true}, {name="mist_set_target_fov", text="Set Target FOV", args={"Enter Target FOV:", "35"}, order=24, moduleCmd = true}, {name="mist_set_camera_fov", text="Set Camera FOV", args={"Enter Camera FOV:", "115"}, order=25, moduleCmd = true}, {name="mist_switch_delay_mode", text="Switch Delay", order=26, moduleCmd = true}
}

function createCommandButtons() local function createBtn(d, p) local b = Instance.new("TextButton"); b.Name=d.name; b.LayoutOrder=d.order; b.Text=d.text or (d.name:sub(1,1):upper()..d.name:sub(2)); b.BackgroundColor3=Theme.Colors.Button; b.Font=Enum.Font.SourceSansBold; b.TextColor3=Theme.Colors.Text; b.TextSize=16; b.Parent=p; local c=Instance.new("UICorner",b);c.CornerRadius=UDim.new(0,5);b.MouseEnter:Connect(function()TweenService:Create(b,Theme.Animations.Hover,{BackgroundColor3=Theme.Colors.ButtonHover}):Play()end);b.MouseLeave:Connect(function()TweenService:Create(b,Theme.Animations.Hover,{BackgroundColor3=Theme.Colors.Button}):Play()end); return b end
	local function connectBtn(b, d, isUni) b.MouseButton1Click:Connect(function() if not isUni and not selectedPlayerInfo then showNotification("No player selected!", 3); return end; local payload = {cmd = d.name, target = isUni and "all" or selectedPlayerInfo.userId}; if d.name == "mist_toggle_exclude" then payload.args = {selectedPlayerInfo.userId}; sendMessageToServer(payload); showNotification("Command sent!", 2) elseif d.args then getCommandInput(d.args[1], d.args[2] or "Value...", function(arg1) if arg1 == "" then return end; payload.args = {arg1}; sendMessageToServer(payload); showNotification((isUni and "Universal command" or "Command") .. " sent!", 2) end) else sendMessageToServer(payload); showNotification((isUni and "Universal command" or "Command") .. " sent!", 2) end end) end
	for _, data in ipairs(Commands) do
		if data.moduleCmd then local modBtn = createBtn(data, ModuleCommandsFrame); connectBtn(modBtn, data, false)
        elseif data.isTargetedOnly then local tBtn = createBtn(data, TargetedCommandsFrame); connectBtn(tBtn, data, false)
        else local tBtn = createBtn(data, TargetedCommandsFrame); connectBtn(tBtn, data, false); local uBtn = createBtn(data, UniversalCommandsFrame); connectBtn(uBtn, data, true) end
	end
end

local function styleTabs() TweenService:Create(TabCurrentButton, Theme.Animations.Hover, {BackgroundColor3 = currentTab=="Current" and Theme.Colors.TabActive or Theme.Colors.TabInactive, TextColor3=currentTab=="Current" and Theme.Colors.Text or Theme.Colors.TextSubtle}):Play(); TweenService:Create(TabGlobalButton, Theme.Animations.Hover, {BackgroundColor3 = currentTab=="Global" and Theme.Colors.TabActive or Theme.Colors.TabInactive, TextColor3=currentTab=="Global" and Theme.Colors.Text or Theme.Colors.TextSubtle}):Play() end
TabCurrentButton.MouseEnter:Connect(function() if currentTab~="Current" then TweenService:Create(TabCurrentButton,Theme.Animations.Hover,{BackgroundColor3=Theme.Colors.TabHover}):Play() end end); TabCurrentButton.MouseLeave:Connect(function() if currentTab~="Current" then TweenService:Create(TabCurrentButton,Theme.Animations.Hover,{BackgroundColor3=Theme.Colors.TabInactive}):Play() end end)
TabGlobalButton.MouseEnter:Connect(function() if currentTab~="Global" then TweenService:Create(TabGlobalButton,Theme.Animations.Hover,{BackgroundColor3=Theme.Colors.TabHover}):Play() end end); TabGlobalButton.MouseLeave:Connect(function() if currentTab~="Global" then TweenService:Create(TabGlobalButton,Theme.Animations.Hover,{BackgroundColor3=Theme.Colors.TabInactive}):Play() end end)
TabCurrentButton.MouseButton1Click:Connect(function() if currentTab=="Current" or isSwitchingTabs then return end; isSwitchingTabs=true; currentTab="Current"; styleTabs(); local o=TweenService:Create(PlayerListFrame_Global,Theme.Animations.TabSwitch,{Position=UDim2.new(0,233,0,29)}); local i=TweenService:Create(PlayerListFrame_Current,Theme.Animations.TabSwitch,{Position=UDim2.new(0,0,0,29)}); o.Completed:Connect(function() PlayerListFrame_Global.Visible=false; isSwitchingTabs=false; filterPlayerLists() end); PlayerListFrame_Current.Visible=true; o:Play(); i:Play() end)
TabGlobalButton.MouseButton1Click:Connect(function() if currentTab=="Global" or isSwitchingTabs then return end; isSwitchingTabs=true; currentTab="Global"; styleTabs(); local o=TweenService:Create(PlayerListFrame_Current,Theme.Animations.TabSwitch,{Position=UDim2.new(0,-233,0,29)}); local i=TweenService:Create(PlayerListFrame_Global,Theme.Animations.TabSwitch,{Position=UDim2.new(0,0,0,29)}); o.Completed:Connect(function() PlayerListFrame_Current.Visible=false; isSwitchingTabs=false; filterPlayerLists() end); PlayerListFrame_Global.Visible=true; o:Play(); i:Play() end)
CloseButton.MouseEnter:Connect(function() TweenService:Create(CloseButton,Theme.Animations.Hover,{BackgroundColor3=Theme.Colors.CloseButtonHover}):Play() end); CloseButton.MouseLeave:Connect(function() TweenService:Create(CloseButton,Theme.Animations.Hover,{BackgroundColor3=Theme.Colors.TopBar}):Play() end); CloseButton.MouseButton1Click:Connect(function() AdminGui:Destroy() end)
MinimizeButton.MouseEnter:Connect(function() TweenService:Create(MinimizeButton,Theme.Animations.Hover,{BackgroundColor3=Theme.Colors.ButtonHover}):Play() end); MinimizeButton.MouseLeave:Connect(function() TweenService:Create(MinimizeButton,Theme.Animations.Hover,{BackgroundColor3=Theme.Colors.TopBar}):Play() end); MinimizeButton.MouseButton1Click:Connect(function() isMinimized = not isMinimized; local size = isMinimized and UDim2.new(0,460,0,35) or UDim2.new(0,460,0,420); local vis=not isMinimized; MinimizeButton.Text = isMinimized and "‚ùê" or "_"; TabFrame.Visible, CommandFrame.Visible, PlayerListContainer.Visible = vis, vis, vis; TweenService:Create(MainFrame, Theme.Animations.Out, {Size = size}):Play() end)
JoinServerButton.MouseEnter:Connect(function() TweenService:Create(JoinServerButton,Theme.Animations.Hover,{BackgroundColor3=Color3.fromRGB(230,230,230)}):Play() end); JoinServerButton.MouseLeave:Connect(function() TweenService:Create(JoinServerButton,Theme.Animations.Hover,{BackgroundColor3=Color3.fromRGB(255,255,255)}):Play() end); JoinServerButton.MouseButton1Click:Connect(function() if not selectedPlayerInfo or not selectedPlayerInfo.jobId then showNotification("No server info for this player.", 3); return end; TeleportService:TeleportToPlaceInstance(game.PlaceId, selectedPlayerInfo.jobId, LocalPlayer); showNotification("Teleporting...", 3) end)

--==============================================================================
--|| INITIALIZATION
--==============================================================================
TweenService:Create(MainFrame, Theme.Animations.In, {Position = UDim2.new(0.5, -230, 0.5, -210)}):Play()
makeDraggable(MainFrame, TopBar); createCommandButtons(); SearchBox:GetPropertyChangedSignal("Text"):Connect(filterPlayerLists)
Players.PlayerAdded:Connect(RefreshPlayerLists); Players.PlayerRemoving:Connect(RefreshPlayerLists)
networkMonitorConnection = task.spawn(NetworkMonitor)
showNotification("Network Control GUI Loaded.", 4)