--[[
    THE MIST HUB v6.6 (Omega Edition - Keybind Update)
    - FIXED BY DAN: Correctly named and referenced the NameTag's TextLabel.
    - FINAL VERSION: Includes ForceField, DisplayName Tags, Tracers, and Boxes.
    - KEYBIND UPDATE: Added a configurable keybind for the Hold to Fly feature.
]]

--================================================================================================--
-- SERVICES & CORE REFERENCES
--================================================================================================--
local CoreGui = game:GetService("CoreGui")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local localPlayer = Players.LocalPlayer

--================================================================================================--
-- CONFIGURATION & THEME (UNCHANGED)
--================================================================================================--
local Config = {
    Colors = {
        Background = Color3.fromHex("1B1D29"),
        Primary = Color3.fromHex("2A2D3D"),
        PrimaryGradientStart = Color3.fromHex("3D4157"),
        PrimaryGradientEnd = Color3.fromHex("232533"),
        Accent = Color3.fromHex("00D1FF"),
        AccentGlow = Color3.fromHex("A5F3FF"),
        Text = Color3.fromHex("FFFFFF"),
        TextDull = Color3.fromHex("B0B0B0"),
        Opener = Color3.fromHex("101116"),
    },
    Fonts = {
        Title = Enum.Font.GothamBold,
        Button = Enum.Font.GothamSemibold,
        Info = Enum.Font.Gotham
    },
    Speed = { Min = 16, Default = 80, Max = 120, Increment = 10 }
}

--================================================================================================--
-- GUI (UNCHANGED AESTHETICS, ADDED KEYBIND BUTTON)
--================================================================================================--
pcall(function() CoreGui:FindFirstChild("MistHubScreenGui"):Destroy() end)
pcall(function() CoreGui:FindFirstChild("MistHubDrawingGui"):Destroy() end)
local ScreenGui = Instance.new("ScreenGui"); ScreenGui.Name = "MistHubScreenGui"; ScreenGui.Parent = CoreGui; ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Global
local OpenerButton = Instance.new("TextButton", ScreenGui); OpenerButton.Size = UDim2.new(0, 50, 0, 50); OpenerButton.Position = UDim2.new(0, 20, 0.5, -25); OpenerButton.BackgroundColor3 = Config.Colors.Opener; OpenerButton.Text = "mist"; OpenerButton.Font = Config.Fonts.Info; OpenerButton.TextColor3 = Config.Colors.TextDull; OpenerButton.TextSize = 14; OpenerButton.AutoButtonColor = false
Instance.new("UIAspectRatioConstraint", OpenerButton); local openerCorner = Instance.new("UICorner", OpenerButton); openerCorner.CornerRadius = UDim.new(1, 0); local openerStroke = Instance.new("UIStroke", OpenerButton); openerStroke.Color = Color3.fromHex("000000"); openerStroke.Thickness = 1.5
local Main = Instance.new("Frame", ScreenGui); Main.Size = UDim2.new(0, 240, 0, 280); Main.Position = UDim2.new(0.5, -120, 0.5, -140); Main.BackgroundColor3 = Config.Colors.Background; Main.BorderColor3 = Color3.fromHex("0D0E14"); Main.BorderSizePixel = 2; Main.Draggable = true; Main.Active = true; Main.Visible = false; Main.ClipsDescendants = true
local mainCorner = Instance.new("UICorner", Main); mainCorner.CornerRadius = UDim.new(0, 8)
local ContentCanvas = Instance.new("CanvasGroup", Main); ContentCanvas.Size = UDim2.new(1, 0, 1, 0); ContentCanvas.BackgroundTransparency = 1
local mainPadding = Instance.new("UIPadding", ContentCanvas); mainPadding.PaddingLeft = UDim.new(0, 12); mainPadding.PaddingRight = UDim.new(0, 12); mainPadding.PaddingTop = UDim.new(0, 12); mainPadding.PaddingBottom = UDim.new(0, 12)
local MinimizeButton = Instance.new("TextButton", ContentCanvas); MinimizeButton.Size = UDim2.new(0, 20, 0, 20); MinimizeButton.Position = UDim2.new(1, 0, 0, 0); MinimizeButton.AnchorPoint = Vector2.new(1, 0); MinimizeButton.BackgroundTransparency = 1; MinimizeButton.Text = "â€”"; MinimizeButton.Font = Enum.Font.SourceSansBold; MinimizeButton.TextColor3 = Config.Colors.TextDull; MinimizeButton.TextSize = 20; MinimizeButton.ZIndex = 2
local KeybindButton = Instance.new("TextButton", ContentCanvas); KeybindButton.Size = UDim2.new(0, 45, 0, 28); KeybindButton.Position = UDim2.new(1, -12, 1, -12); KeybindButton.AnchorPoint = Vector2.new(1, 1); KeybindButton.BackgroundColor3 = Config.Colors.Primary; KeybindButton.Font = Config.Fonts.Button; KeybindButton.TextColor3 = Config.Colors.Text; KeybindButton.TextSize = 16; KeybindButton.ZIndex = 2; Instance.new("UICorner", KeybindButton).CornerRadius = UDim.new(0, 6); Instance.new("UIStroke", KeybindButton).Color = Color3.fromHex("0D0E14")
local KeybindLabel = Instance.new("TextLabel", ContentCanvas); KeybindLabel.Size = UDim2.new(0, 150, 0, 20); KeybindLabel.Position = UDim2.new(1, -63, 1, -16); KeybindLabel.AnchorPoint = Vector2.new(1, 1); KeybindLabel.BackgroundTransparency = 1; KeybindLabel.Font = Config.Fonts.Info; KeybindLabel.TextColor3 = Config.Colors.TextDull; KeybindLabel.TextSize = 12; KeybindLabel.TextXAlignment = Enum.TextXAlignment.Right; KeybindLabel.Text = "click to change keybind"; KeybindLabel.ZIndex = 2
local Title = Instance.new("TextLabel", ContentCanvas); Title.Size = UDim2.new(1, 0, 0, 35); Title.BackgroundTransparency = 1; Title.Font = Config.Fonts.Title; Title.Text = "THE MIST HUB"; Title.TextColor3 = Config.Colors.Text; Title.TextSize = 22
local titleGradient = Instance.new("UIGradient", Title); titleGradient.Color = ColorSequence.new({ColorSequenceKeypoint.new(0,Config.Colors.TextDull),ColorSequenceKeypoint.new(0.45,Config.Colors.Text),ColorSequenceKeypoint.new(0.55,Config.Colors.Text),ColorSequenceKeypoint.new(1,Config.Colors.TextDull)}); titleGradient.Rotation = -90
spawn(function() while Main.Parent do TweenService:Create(titleGradient, TweenInfo.new(1.5, Enum.EasingStyle.Linear), {Offset = Vector2.new(0, 1)}):Play(); task.wait(1.5); titleGradient.Offset = Vector2.new(0, -1); TweenService:Create(titleGradient, TweenInfo.new(1.5, Enum.EasingStyle.Linear), {Offset = Vector2.new(0, 0)}):Play(); task.wait(2) end end)
local Content = Instance.new("Frame", ContentCanvas); Content.Size = UDim2.new(1, 0, 1, -35); Content.Position = UDim2.new(0, 0, 0, 35); Content.BackgroundTransparency = 1; local ListLayout = Instance.new("UIListLayout", Content); ListLayout.Padding = UDim.new(0, 10); ListLayout.SortOrder = Enum.SortOrder.LayoutOrder
local function CreateToggle(text, order) local btn = Instance.new("TextButton"); btn.Size = UDim2.new(1, 0, 0, 40); btn.BackgroundColor3 = Config.Colors.Primary; btn.Text = ""; btn.LayoutOrder = order; btn.Parent = Content; btn.ClipsDescendants = true; Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 6); local staticBorder = Instance.new("UIStroke", btn); staticBorder.Color = Color3.fromHex("0D0E14"); staticBorder.Thickness = 1.5; local bgGradient = Instance.new("UIGradient", btn); bgGradient.Color = ColorSequence.new(Config.Colors.PrimaryGradientStart, Config.Colors.PrimaryGradientEnd); bgGradient.Rotation = 45; local textLabel = Instance.new("TextLabel", btn); textLabel.Size = UDim2.new(1, 0, 1, 0); textLabel.BackgroundTransparency = 1; textLabel.Font = Config.Fonts.Button; textLabel.Text = text; textLabel.TextColor3 = Config.Colors.Text; textLabel.TextSize = 15; local strokeContainer = Instance.new("Frame", btn); strokeContainer.Size = UDim2.new(1, 0, 1, 0); strokeContainer.BackgroundTransparency = 1; local strokeTop = Instance.new("Frame", strokeContainer); strokeTop.BackgroundColor3 = Config.Colors.Accent; strokeTop.BorderSizePixel = 0; strokeTop.Size = UDim2.new(0, 0, 0, 2); strokeTop.Position = UDim2.new(0, 0, 0, 0); local strokeRight = Instance.new("Frame", strokeContainer); strokeRight.BackgroundColor3 = Config.Colors.Accent; strokeRight.BorderSizePixel = 0; strokeRight.Size = UDim2.new(0, 2, 0, 0); strokeRight.Position = UDim2.new(1, 0, 0, 0); strokeRight.AnchorPoint = Vector2.new(1, 0); local strokeBottom = Instance.new("Frame", strokeContainer); strokeBottom.BackgroundColor3 = Config.Colors.Accent; strokeBottom.BorderSizePixel = 0; strokeBottom.Size = UDim2.new(0, 0, 0, 2); strokeBottom.Position = UDim2.new(1, 0, 1, 0); strokeBottom.AnchorPoint = Vector2.new(1, 1); local strokeLeft = Instance.new("Frame", strokeContainer); strokeLeft.BackgroundColor3 = Config.Colors.Accent; strokeLeft.BorderSizePixel = 0; strokeLeft.Size = UDim2.new(0, 2, 0, 0); strokeLeft.Position = UDim2.new(0, 0, 1, 0); strokeLeft.AnchorPoint = Vector2.new(0, 1); local isHovering = false; local hoverAnimSpeed = 0.1; btn.MouseEnter:Connect(function() isHovering = true; task.spawn(function() TweenService:Create(strokeTop, TweenInfo.new(hoverAnimSpeed), {Size = UDim2.new(1, 0, 0, 2)}):Play(); task.wait(hoverAnimSpeed); if not isHovering then return end; TweenService:Create(strokeRight, TweenInfo.new(hoverAnimSpeed), {Size = UDim2.new(0, 2, 1, 0)}):Play(); task.wait(hoverAnimSpeed); if not isHovering then return end; TweenService:Create(strokeBottom, TweenInfo.new(hoverAnimSpeed), {Size = UDim2.new(1, 0, 0, 2)}):Play(); task.wait(hoverAnimSpeed); if not isHovering then return end; TweenService:Create(strokeLeft, TweenInfo.new(hoverAnimSpeed), {Size = UDim2.new(0, 2, 1, 0)}):Play() end) end); btn.MouseLeave:Connect(function() isHovering = false; task.spawn(function() TweenService:Create(strokeTop, TweenInfo.new(hoverAnimSpeed), {Size = UDim2.new(0, 0, 0, 2)}):Play(); task.wait(hoverAnimSpeed); TweenService:Create(strokeLeft, TweenInfo.new(hoverAnimSpeed), {Size = UDim2.new(0, 2, 0, 0)}):Play(); task.wait(hoverAnimSpeed); TweenService:Create(strokeBottom, TweenInfo.new(hoverAnimSpeed), {Size = UDim2.new(0, 0, 0, 2)}):Play(); task.wait(hoverAnimSpeed); TweenService:Create(strokeRight, TweenInfo.new(hoverAnimSpeed), {Size = UDim2.new(0, 2, 0, 0)}):Play() end) end); local textShadow = Instance.new("UIStroke", textLabel); textShadow.Color = Color3.fromHex("000000"); textShadow.Transparency = 1; textShadow.Thickness = 1.5; btn.MouseButton1Down:Connect(function() TweenService:Create(bgGradient, TweenInfo.new(0.1), {Rotation = -135}):Play(); TweenService:Create(textShadow, TweenInfo.new(0.1), {Transparency = 0.5}):Play() end); btn.MouseButton1Up:Connect(function() TweenService:Create(bgGradient, TweenInfo.new(0.2), {Rotation = 45}):Play(); TweenService:Create(textShadow, TweenInfo.new(0.2), {Transparency = 1}):Play() end); return btn, textLabel end
local ESPButton, ESPButtonText = CreateToggle("ESP", 1)
local FlyButton, FlyButtonText = CreateToggle("HOLD TO FLY", 2)
local SpeedFrame = Instance.new("Frame", Content); SpeedFrame.Size = UDim2.new(1, 0, 0, 85); SpeedFrame.BackgroundTransparency = 1; SpeedFrame.LayoutOrder = 3
local SpeedLabel = Instance.new("TextLabel", SpeedFrame); SpeedLabel.Size = UDim2.new(1, 0, 0, 20); SpeedLabel.Position = UDim2.new(0.5, 0, 0, 5); SpeedLabel.AnchorPoint = Vector2.new(0.5, 0); SpeedLabel.BackgroundTransparency = 1; SpeedLabel.Font = Config.Fonts.Button; SpeedLabel.TextColor3 = Config.Colors.Text; SpeedLabel.TextSize = 14
local SpeedRec = Instance.new("TextLabel", SpeedFrame); SpeedRec.Size = UDim2.new(1, 0, 0, 15); SpeedRec.Position = UDim2.new(0.5, 0, 0, 25); SpeedRec.AnchorPoint = Vector2.new(0.5, 0); SpeedRec.BackgroundTransparency = 1; SpeedRec.Font = Config.Fonts.Info; SpeedRec.TextColor3 = Config.Colors.TextDull; SpeedRec.TextSize = 12; SpeedRec.Text = "Speed is always on"
local Track = Instance.new("Frame", SpeedFrame); Track.Size = UDim2.new(1, -60, 0, 2); Track.Position = UDim2.new(0.5, 0, 0.5, 10); Track.AnchorPoint = Vector2.new(0.5, 0.5); Track.BackgroundColor3 = Config.Colors.Opener; Instance.new("UICorner", Track).CornerRadius = UDim.new(1, 0); local Progress = Instance.new("Frame", Track); Progress.Size = UDim2.new(0, 0, 1, 0); Progress.BackgroundColor3 = Config.Colors.Accent; Instance.new("UICorner", Progress).CornerRadius = UDim.new(1, 0); local Thumb = Instance.new("Frame", Track); Thumb.Size = UDim2.new(0, 16, 0, 16); Thumb.AnchorPoint = Vector2.new(0.5, 0.5); Thumb.BackgroundColor3 = Config.Colors.AccentGlow; Thumb.BorderSizePixel = 0; Instance.new("UICorner", Thumb).CornerRadius = UDim.new(1, 0); Instance.new("UIStroke", Thumb).Color = Config.Colors.Opener; local ThumbDragger = Instance.new("TextButton", Thumb); ThumbDragger.Size = UDim2.new(1, 10, 1, 10); ThumbDragger.AnchorPoint = Vector2.new(0.5, 0.5); ThumbDragger.Position = UDim2.new(0.5, 0, 0.5, 0); ThumbDragger.BackgroundTransparency = 1; ThumbDragger.Text = ""; ThumbDragger.MouseEnter:Connect(function() TweenService:Create(Thumb, TweenInfo.new(0.2), {Size = UDim2.new(0, 20, 0, 20)}):Play() end); ThumbDragger.MouseLeave:Connect(function() TweenService:Create(Thumb, TweenInfo.new(0.2), {Size = UDim2.new(0, 16, 0, 16)}):Play() end); local function createSpeedAdjustButton(text, position, anchor) local btn = Instance.new("TextButton", SpeedFrame); btn.Size = UDim2.new(0, 25, 0, 25); btn.Position = position; btn.AnchorPoint = anchor; btn.BackgroundColor3 = Config.Colors.Primary; btn.Font = Config.Fonts.Button; btn.Text = text; btn.TextColor3 = Config.Colors.TextDull; btn.TextSize = 22; Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 6); return btn end
local SpeedDownButton = createSpeedAdjustButton("-", UDim2.new(0, 0, 0.5, 10), Vector2.new(0, 0.5))
local SpeedUpButton = createSpeedAdjustButton("+", UDim2.new(1, 0, 0.5, 10), Vector2.new(1, 0.5))

--================================================================================================--
-- GUI ANIMATION & INTERACTIVITY (UNCHANGED)
--================================================================================================--
local isGuiOpen = false; local isAnimating = false; local mainAnimInfo = TweenInfo.new(0.6, Enum.EasingStyle.Sine, Enum.EasingDirection.Out); local contentFadeInfo = TweenInfo.new(0.3, Enum.EasingStyle.Sine, Enum.EasingDirection.Out); local lastPosition = Main.Position
local function openGui() if isGuiOpen or isAnimating then return end; isAnimating = true; OpenerButton.Visible = false; Main.Visible = true; Main.Position = OpenerButton.Position; Main.Size = OpenerButton.Size; mainCorner.CornerRadius = UDim.new(1, 0); ContentCanvas.GroupTransparency = 1; local frameTween = TweenService:Create(Main, mainAnimInfo, {Size = UDim2.new(0, 240, 0, 280), Position = lastPosition}); local cornerTween = TweenService:Create(mainCorner, mainAnimInfo, {CornerRadius = UDim.new(0, 8)}); frameTween:Play(); cornerTween:Play(); task.delay(mainAnimInfo.Time - contentFadeInfo.Time, function() if not Main.Parent then return end; TweenService:Create(ContentCanvas, contentFadeInfo, {GroupTransparency = 0}):Play() end); frameTween.Completed:Connect(function() isGuiOpen = true; isAnimating = false end) end
local function closeGui() if not isGuiOpen or isAnimating then return end; isAnimating = true; lastPosition = Main.Position; TweenService:Create(ContentCanvas, contentFadeInfo, {GroupTransparency = 1}):Play(); local frameTween = TweenService:Create(Main, mainAnimInfo, {Size = OpenerButton.Size, Position = OpenerButton.Position}); local cornerTween = TweenService:Create(mainCorner, mainAnimInfo, {CornerRadius = UDim.new(1, 0)}); frameTween:Play(); cornerTween:Play(); frameTween.Completed:Connect(function() Main.Visible = false; OpenerButton.Visible = true; isGuiOpen = false; isAnimating = false end) end
OpenerButton.MouseButton1Click:Connect(openGui); MinimizeButton.MouseButton1Click:Connect(closeGui)

--================================================================================================--
-- DEFINITIVE ENGINE
--================================================================================================--
-- STATE & CONFIG
local boostPower = 4000
local currentMaxSpeed = Config.Speed.Default
local isFlying = false
local ghostVehicle, bodyGyro, bodyVelocity, weld
local espEnabled = false
local visionGuis = {}
local originalProperties = {}
local flyKeybind = Enum.KeyCode.Q
local isChangingKeybind = false
local DrawingGui = Instance.new("ScreenGui"); DrawingGui.Name = "MistHubDrawingGui"; DrawingGui.Parent = CoreGui; DrawingGui.ZIndexBehavior = Enum.ZIndexBehavior.Global; DrawingGui.DisplayOrder = 99

-- ENGINE FUNCTIONS
local function updateSpeed(newSpeed) currentMaxSpeed = math.clamp(newSpeed, Config.Speed.Min, Config.Speed.Max); SpeedLabel.Text = "SPEED: " .. math.floor(currentMaxSpeed); local p = (currentMaxSpeed - Config.Speed.Min) / (Config.Speed.Max - Config.Speed.Min); local ti = TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out); TweenService:Create(Progress, ti, { Size = UDim2.new(p, 0, 1, 0) }):Play(); TweenService:Create(Thumb, ti, { Position = UDim2.new(p, 0, 0.5, 0) }):Play() end
local function cleanupFlight() if weld then weld:Destroy() end; if ghostVehicle then ghostVehicle:Destroy() end; weld, ghostVehicle, bodyGyro, bodyVelocity = nil, nil, nil, nil end
local function cleanupVision()
    for _, guiElements in pairs(visionGuis) do for _, element in pairs(guiElements) do if element and element.Parent then element:Destroy() end end end
    visionGuis = {}
    for part, props in pairs(originalProperties) do if part and part.Parent then pcall(function() part.Material = props.Material; part.Color = props.Color; part.Transparency = props.Transparency end) end end
    originalProperties = {}
end
local function startFlying()
    if isFlying then return end -- Prevent re-triggering
    isFlying = true; local character = localPlayer.Character; local rootPart = character and character:FindFirstChild("HumanoidRootPart"); if not character or not rootPart then isFlying = false; return end; cleanupFlight(); ghostVehicle = Instance.new("Part", workspace); ghostVehicle.Size = Vector3.new(1, 1, 1); ghostVehicle.Position = rootPart.Position; ghostVehicle.Transparency = 1; ghostVehicle.CanCollide = false; ghostVehicle.Anchored = false; bodyGyro = Instance.new("BodyGyro", ghostVehicle); bodyGyro.MaxTorque = Vector3.new(math.huge, math.huge, math.huge); bodyGyro.P = 50000; bodyVelocity = Instance.new("BodyVelocity", ghostVehicle); bodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge); weld = Instance.new("WeldConstraint", ghostVehicle); weld.Part0 = ghostVehicle; weld.Part1 = rootPart
end
local function stopFlying()
    isFlying = false; cleanupFlight()
end

--================================================================================================--
-- WIRING & CORE LOOP
--================================================================================================--
ESPButton.MouseButton1Click:Connect(function() espEnabled = not espEnabled; if not espEnabled then cleanupVision() end end)

-- Flying Logic (Button, Keybind, and Keyboard)
FlyButton.InputBegan:Connect(function(input) if not (input.UserInputType:IsA("MouseInputType") or input.UserInputType == Enum.UserInputType.Touch) then return end; startFlying() end)
FlyButton.InputEnded:Connect(function(input) if not (input.UserInputType:IsA("MouseInputType") or input.UserInputType == Enum.UserInputType.Touch) then return end; stopFlying() end)

KeybindButton.Text = flyKeybind.Name
KeybindButton.MouseButton1Click:Connect(function()
    if isChangingKeybind then return end
    isChangingKeybind = true
    local oldKey = flyKeybind
    KeybindButton.Text = "..."
    KeybindLabel.Text = "Press key (ESC to cancel)"
    local connection
    connection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if isChangingKeybind and not gameProcessed and input.UserInputType == Enum.UserInputType.Keyboard then
            isChangingKeybind = false
            if input.KeyCode == Enum.KeyCode.Escape then
                flyKeybind = oldKey
            else
                flyKeybind = input.KeyCode
            end
            KeybindButton.Text = flyKeybind.Name
            KeybindLabel.Text = "click to change keybind"
            connection:Disconnect()
        end
    end)
end)

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed or isChangingKeybind or UserInputService:GetFocusedTextBox() then return end
    if input.KeyCode == flyKeybind then startFlying() end
end)
UserInputService.InputEnded:Connect(function(input)
    if input.KeyCode == flyKeybind and not isChangingKeybind then stopFlying() end
end)

-- Speed Controls
SpeedUpButton.MouseButton1Click:Connect(function() updateSpeed(currentMaxSpeed + Config.Speed.Increment) end); SpeedDownButton.MouseButton1Click:Connect(function() updateSpeed(currentMaxSpeed - Config.Speed.Increment) end)
local isDraggingSlider = false; ThumbDragger.InputBegan:Connect(function(input) if input.UserInputType:IsA("MouseInputType") or input.UserInputType == Enum.UserInputType.Touch then isDraggingSlider = true; TweenService:Create(Thumb, TweenInfo.new(0.2), {Size = UDim2.new(0, 22, 0, 22)}):Play() end end); UserInputService.InputEnded:connect(function(input) if input.UserInputType:IsA("MouseInputType") or input.UserInputType == Enum.UserInputType.Touch then isDraggingSlider = false; TweenService:Create(Thumb, TweenInfo.new(0.2), {Size = UDim2.new(0, 16, 0, 16)}):Play() end end); UserInputService.InputChanged:connect(function(input) if isDraggingSlider and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then local mPos = UserInputService:GetMouseLocation(); local rPos = mPos.X - Track.AbsolutePosition.X; local p = math.clamp(rPos / Track.AbsoluteSize.X, 0, 1); updateSpeed(Config.Speed.Min + (p * (Config.Speed.Max - Config.Speed.Min))) end end)

-- Main Engine Loop
RunService.Heartbeat:Connect(function()
    local char = localPlayer.Character; if not char then return end
    local humanoid = char:FindFirstChildOfClass("Humanoid"); local root = char:FindFirstChild("HumanoidRootPart"); if not (humanoid and root) then return end
    local camera = workspace.CurrentCamera

    -- FULL ESP LOGIC
    if espEnabled and camera then
        for _, p in ipairs(Players:GetPlayers()) do
            local pChar = p.Character; local pRoot = pChar and pChar:FindFirstChild("HumanoidRootPart")
            if p ~= localPlayer and pChar and pRoot then
                local vector, onScreen = camera:WorldToScreenPoint(pRoot.Position)
                
                if not visionGuis[p] then visionGuis[p] = {} end
                
                -- ForceField & Material
                for _, part in ipairs(pChar:GetDescendants()) do if part:IsA("BasePart") then if not originalProperties[part] then originalProperties[part] = {Material = part.Material, Color = part.Color, Transparency = part.Transparency} end; part.Material = Enum.Material.ForceField; part.Color = Config.Colors.Accent; part.Transparency = 0.4 end end

                if onScreen then
                    -- NameTag
                    local pHead = pChar:FindFirstChild("Head")
                    if pHead then
                        if not visionGuis[p].NameTag then
                            local b = Instance.new("BillboardGui", DrawingGui); b.Adornee = pHead; b.AlwaysOnTop = true; b.Size = UDim2.new(0, 200, 0, 50); b.StudsOffset = Vector3.new(0, 3, 0); b.MaxDistance = 1000;
                            local t = Instance.new("TextLabel", b); t.Name = "NameText"; t.BackgroundTransparency = 1; t.Size = UDim2.new(1, 0, 1, 0); t.Font = Config.Fonts.Button; t.TextColor3 = Config.Colors.AccentGlow; t.TextSize = 18;
                            local s = Instance.new("UIStroke", t); s.Color = Color3.fromHex("000000"); s.Thickness = 1.5;
                            visionGuis[p].NameTag = b
                        end
                        visionGuis[p].NameTag.Enabled = true; visionGuis[p].NameTag.Adornee = pHead
                        visionGuis[p].NameTag.NameText.Text = p.DisplayName
                    end

                    -- Tracer (Rotated Frame)
                    if not visionGuis[p].Tracer then local tracer = Instance.new("Frame", DrawingGui); tracer.BorderSizePixel = 0; tracer.AnchorPoint = Vector2.new(0.5, 0.5); tracer.BackgroundColor3 = Config.Colors.Accent; tracer.Transparency = 0.4; visionGuis[p].Tracer = tracer end
                    local from = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y); local to = Vector2.new(vector.X, vector.Y)
                    local distance = (from - to).Magnitude; local center = (from + to) / 2
                    visionGuis[p].Tracer.Visible = true; visionGuis[p].Tracer.Size = UDim2.fromOffset(distance, 1); visionGuis[p].Tracer.Position = UDim2.fromOffset(center.X, center.Y); visionGuis[p].Tracer.Rotation = math.deg(math.atan2(to.Y - from.Y, to.X - from.X))

                    -- Box
                    local headPos = pHead and pHead.Position or pRoot.Position + Vector3.new(0, 2, 0); local feetPos = pRoot.Position - Vector3.new(0, 3, 0)
                    local headVector, _ = camera:WorldToScreenPoint(headPos); local feetVector, _ = camera:WorldToScreenPoint(feetPos)
                    local height = math.abs(headVector.Y - feetVector.Y); local width = height / 2
                    if not visionGuis[p].Box then local box = Instance.new("Frame", DrawingGui); box.BackgroundTransparency = 1; box.BorderSizePixel = 0; Instance.new("UIStroke", box).Color = Config.Colors.Accent; visionGuis[p].Box = box end
                    visionGuis[p].Box.Visible = true; visionGuis[p].Box.Size = UDim2.fromOffset(width, height); visionGuis[p].Box.Position = UDim2.fromOffset(vector.X - width/2, vector.Y - height/2)
                else
                    if visionGuis[p] then if visionGuis[p].Tracer then visionGuis[p].Tracer.Visible = false end; if visionGuis[p].Box then visionGuis[p].Box.Visible = false end; if visionGuis[p].NameTag then visionGuis[p].NameTag.Enabled = false end end
                end
            end
        end
    end
    
    -- Movement Logic
    if isFlying and ghostVehicle then if camera then bodyGyro.CFrame = camera.CFrame; bodyVelocity.Velocity = camera.CFrame.LookVector * currentMaxSpeed end
    elseif humanoid.MoveDirection.Magnitude > 0.1 then if root.Velocity.Magnitude < currentMaxSpeed then root:ApplyImpulse(humanoid.MoveDirection.Unit * boostPower * (1/60)) end end
end)

--================================================================================================--
-- CLEANUP & INITIALIZATION
--================================================================================================--
Players.PlayerRemoving:Connect(function(p) if visionGuis[p] then cleanupVision() end end)
local function onChar(char) isFlying = false; cleanupFlight(); if espEnabled then cleanupVision() end; char:WaitForChild("Humanoid").Died:Connect(function() isFlying = false; cleanupFlight(); cleanupVision() end) end
if localPlayer.Character then onChar(localPlayer.Character) end
localPlayer.CharacterAdded:Connect(onChar)
updateSpeed(Config.Speed.Default)
