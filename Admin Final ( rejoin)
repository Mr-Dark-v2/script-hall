--==============================================================================
--|| CONFIGURATION & SERVICES
--==============================================================================
-- [!] CONFIGURE THESE URLS TO MATCH YOUR WEB SERVER
local SERVER_READ_URL  = "https://8775b734-9c08-4b7f-932a-e8df8538b275-00-1xt67y1hms2uu.kirk.replit.dev/read"
local SERVER_SEND_URL  = "https://8775b734-9c08-4b7f-932a-e8df8538b275-00-1xt67y1hms2uu.kirk.replit.dev/send"

-- [!] TIMING CONFIGURATION
local NETWORK_REFRESH_RATE = 1
local CLIENT_TIMEOUT = 4

local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local Debris = game:GetService("Debris")
local MarketplaceService = game:GetService("MarketplaceService")

local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

local AdminUserIDs = { 3307721575, 3325270002, 9145208990, 974723668, 5309041855 }

--==============================================================================
--|| STATE MANAGEMENT
--==============================================================================
local activeNetworkUsers, selectedPlayerInfo = {}, {}
local isMinimized, isSwitchingTabs = false, false
local currentTab, networkMonitorConnection = "Current", nil
local frameConnections = {}
local playerFrames_Current, playerFrames_Global = {}, {}
local isRefreshing = false
local localGameName = "Unknown Game"

task.spawn(function()
	local success, result = pcall(function() return MarketplaceService:GetProductInfo(game.PlaceId) end)
	if success and result and result.Name then
		localGameName = result.Name
	end
end)

--==============================================================================
--|| HELPER FUNCTIONS
--==============================================================================
local function isAdmin(userId) for _, id in ipairs(AdminUserIDs) do if id == userId then return true end end; return false end
local function safeJsonDecode(s) local ok, res = pcall(function() return HttpService:JSONDecode(s) end); if ok then return res end; return nil end
local function sendMessageToServer(payloadTable) task.spawn(function() local ok, jsonPayload = pcall(HttpService.JSONEncode, HttpService, payloadTable); if ok then pcall(function() game:HttpGet(SERVER_SEND_URL .. "?text=" .. HttpService:UrlEncode(jsonPayload)) end) end end) end
local function fadeGuiObject(object, direction, duration) duration = duration or 0.3; local goal = (direction == "In") and 0 or 1; local tweenInfo = TweenInfo.new(duration); local tweens = {}; for _, child in ipairs(object:GetDescendants()) do if child:IsA("GuiObject") then local prop = "BackgroundTransparency"; if child:IsA("TextLabel") or child:IsA("TextButton") or child:IsA("TextBox") then prop = "TextTransparency" elseif child:IsA("ImageLabel") or child:IsA("ImageButton") then prop = "ImageTransparency" end; if child[prop] ~= nil then table.insert(tweens, TweenService:Create(child, tweenInfo, {[prop] = goal})) end end end; table.insert(tweens, TweenService:Create(object, tweenInfo, {BackgroundTransparency = goal})); for _, tween in ipairs(tweens) do tween:Play() end; return tweens[#tweens] end

--==============================================================================
--|| GUI CREATION
--==============================================================================
local Theme = { Colors = { MainBackground = Color3.fromRGB(35, 37, 40), TopBar = Color3.fromRGB(28, 29, 31), ContentBackground = Color3.fromRGB(45, 47, 50), SearchBackground = Color3.fromRGB(40, 42, 45), Text = Color3.fromRGB(220, 220, 220), TextSubtle = Color3.fromRGB(180, 180, 180), Button = Color3.fromRGB(55, 57, 60), ButtonHover = Color3.fromRGB(75, 77, 80), CloseButtonHover = Color3.fromRGB(231, 76, 60), OwnerTag = Color3.fromRGB(255, 207, 74), OwnerName = Color3.fromRGB(255, 220, 120), OwnerBackground = Color3.fromRGB(87, 72, 28), OwnerHover = Color3.fromRGB(107, 92, 48), UserTag = Color3.fromRGB(231, 76, 60), UserName = Color3.fromRGB(240, 128, 128), UserBackground = Color3.fromRGB(87, 28, 28), UserHover = Color3.fromRGB(107, 48, 48), TabInactive = Color3.fromRGB(40,42,45), TabActive = Color3.fromRGB(55,57,60), TabHover = Color3.fromRGB(65, 67, 70), Separator = Color3.fromRGB(60,62,65) }, Animations = { In = TweenInfo.new(0.6, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), Out = TweenInfo.new(0.4, Enum.EasingStyle.Quint, Enum.EasingDirection.In), Hover = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), TabSwitch = TweenInfo.new(0.3, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out) }, Tags = { Owner = "Owner", User = "User" } }
local AdminGui = Instance.new("ScreenGui"); AdminGui.Name = "AdminNetworkGui"; AdminGui.Parent = PlayerGui; AdminGui.ResetOnSpawn = false
local MainFrame = Instance.new("Frame"); MainFrame.Name = "MainFrame"; MainFrame.Size = UDim2.new(0, 460, 0, 380); MainFrame.Position = UDim2.new(0.5, -230, -1, 0); MainFrame.BackgroundColor3 = Theme.Colors.MainBackground; MainFrame.BorderSizePixel = 0; MainFrame.ClipsDescendants = true; MainFrame.Parent = AdminGui
local FrameCorner = Instance.new("UICorner", MainFrame); FrameCorner.CornerRadius = UDim.new(0, 8)
local TopBar = Instance.new("Frame"); TopBar.Name = "TopBar"; TopBar.Size = UDim2.new(1, 0, 0, 35); TopBar.BackgroundColor3 = Theme.Colors.TopBar; TopBar.BorderSizePixel = 0; TopBar.Parent = MainFrame
local TopBarCorner = Instance.new("UICorner", TopBar); TopBarCorner.CornerRadius = UDim.new(0, 8)
local TitleLabel = Instance.new("TextLabel"); TitleLabel.Name = "TitleLabel"; TitleLabel.Size = UDim2.new(1, -80, 1, 0); TitleLabel.Position = UDim2.new(0, 15, 0, 0); TitleLabel.BackgroundTransparency = 1; TitleLabel.Font = Enum.Font.SourceSansBold; TitleLabel.TextColor3 = Theme.Colors.Text; TitleLabel.Text = "Network Control"; TitleLabel.TextXAlignment = Enum.TextXAlignment.Left; TitleLabel.TextSize = 20; TitleLabel.Parent = TopBar
local CloseButton = Instance.new("TextButton"); CloseButton.Name = "CloseButton"; CloseButton.Size = UDim2.new(0, 35, 1, 0); CloseButton.Position = UDim2.new(1, -35, 0, 0); CloseButton.BackgroundColor3 = Theme.Colors.TopBar; CloseButton.Font = Enum.Font.SourceSansBold; CloseButton.TextColor3 = Theme.Colors.Text; CloseButton.Text = "X"; CloseButton.TextSize = 24; CloseButton.Parent = TopBar
local CloseCorner = Instance.new("UICorner", CloseButton); CloseCorner.CornerRadius = UDim.new(0, 8)
local MinimizeButton = Instance.new("TextButton"); MinimizeButton.Name = "MinimizeButton"; MinimizeButton.Size = UDim2.new(0, 35, 1, 0); MinimizeButton.Position = UDim2.new(1, -70, 0, 0); MinimizeButton.BackgroundColor3 = Theme.Colors.TopBar; MinimizeButton.Font = Enum.Font.SourceSansBold; MinimizeButton.TextColor3 = Theme.Colors.Text; MinimizeButton.Text = "_"; MinimizeButton.TextSize = 24; MinimizeButton.Parent = TopBar
local MinimizeCorner = Instance.new("UICorner", MinimizeButton); MinimizeCorner.CornerRadius = UDim.new(0, 8)
local TabFrame = Instance.new("Frame"); TabFrame.Name = "TabFrame"; TabFrame.Size = UDim2.new(1, -10, 0, 30); TabFrame.Position = UDim2.new(0, 5, 0, 40); TabFrame.BackgroundTransparency = 1; TabFrame.Parent = MainFrame
local UIListLayout_Tabs = Instance.new("UIListLayout", TabFrame); UIListLayout_Tabs.Padding = UDim.new(0, 5); UIListLayout_Tabs.FillDirection = Enum.FillDirection.Horizontal
local TabCurrentButton = Instance.new("TextButton"); TabCurrentButton.Name = "TabCurrentButton"; TabCurrentButton.Text = "Current Server"; TabCurrentButton.Size = UDim2.new(0.5, -2.5, 1, 0); TabCurrentButton.BackgroundColor3 = Theme.Colors.TabActive; TabCurrentButton.Font = Enum.Font.SourceSansBold; TabCurrentButton.TextColor3 = Theme.Colors.Text; TabCurrentButton.TextSize = 16; TabCurrentButton.Parent = TabFrame
local TabCurrentCorner = Instance.new("UICorner", TabCurrentButton); TabCurrentCorner.CornerRadius = UDim.new(0, 6)
local TabGlobalButton = Instance.new("TextButton"); TabGlobalButton.Name = "TabGlobalButton"; TabGlobalButton.Text = "Global Network"; TabGlobalButton.Size = UDim2.new(0.5, -2.5, 1, 0); TabGlobalButton.BackgroundColor3 = Theme.Colors.TabInactive; TabGlobalButton.Font = Enum.Font.SourceSansBold; TabGlobalButton.TextColor3 = Theme.Colors.TextSubtle; TabGlobalButton.TextSize = 16; TabGlobalButton.Parent = TabFrame
local TabGlobalCorner = Instance.new("UICorner", TabGlobalButton); TabGlobalCorner.CornerRadius = UDim.new(0, 6)
local PlayerListContainer = Instance.new("Frame"); PlayerListContainer.Name = "PlayerListContainer"; PlayerListContainer.Size = UDim2.new(0, 222, 1, -80); PlayerListContainer.Position = UDim2.new(0, 5, 0, 75); PlayerListContainer.BackgroundTransparency = 1; PlayerListContainer.Parent = MainFrame
local SearchBox = Instance.new("TextBox"); SearchBox.Name = "SearchBox"; SearchBox.Size = UDim2.new(1, 0, 0, 24); SearchBox.Position = UDim2.new(0, 0, 0, 0); SearchBox.BackgroundColor3 = Theme.Colors.SearchBackground; SearchBox.Font = Enum.Font.SourceSans; SearchBox.PlaceholderText = "Search by Name or ID..."; SearchBox.TextColor3 = Theme.Colors.Text; SearchBox.PlaceholderColor3 = Theme.Colors.TextSubtle; SearchBox.TextSize = 14; SearchBox.ClearTextOnFocus = false; SearchBox.Parent = PlayerListContainer; local SearchCorner = Instance.new("UICorner", SearchBox); SearchCorner.CornerRadius = UDim.new(0.5, 0);
local SearchStroke = Instance.new("UIStroke"); SearchStroke.Color = Theme.Colors.TopBar; SearchStroke.Thickness = 1; SearchStroke.Parent = SearchBox
local SearchIcon = Instance.new("TextLabel"); SearchIcon.Name = "SearchIcon"; SearchIcon.Size = UDim2.new(0, 24, 1, 0); SearchIcon.Position = UDim2.new(0, 8, 0, 0); SearchIcon.BackgroundTransparency = 1; SearchIcon.Font = Enum.Font.Arial; SearchIcon.Text = "üîç"; SearchIcon.TextColor3 = Theme.Colors.TextSubtle; SearchIcon.TextSize = 16; SearchIcon.TextXAlignment = Enum.TextXAlignment.Center; SearchIcon.Parent = SearchBox
local SearchPadding = Instance.new("UIPadding"); SearchPadding.PaddingLeft = UDim.new(0, 30); SearchPadding.Parent = SearchBox
SearchBox.Text = ""
local PlayerListFrame_Current = Instance.new("ScrollingFrame"); PlayerListFrame_Current.Name = "PlayerListFrame_Current"; PlayerListFrame_Current.Size = UDim2.new(1, 0, 1, -29); PlayerListFrame_Current.Position = UDim2.new(0, 0, 0, 29); PlayerListFrame_Current.BackgroundColor3 = Theme.Colors.ContentBackground; PlayerListFrame_Current.BorderSizePixel = 0; PlayerListFrame_Current.CanvasSize = UDim2.new(0, 0, 0, 0); PlayerListFrame_Current.ScrollBarThickness = 6; PlayerListFrame_Current.Parent = PlayerListContainer
local PlayerListCornerC = Instance.new("UICorner", PlayerListFrame_Current); PlayerListCornerC.CornerRadius = UDim.new(0, 6)
local UIListLayoutC = Instance.new("UIListLayout", PlayerListFrame_Current); UIListLayoutC.Padding = UDim.new(0, 5); UIListLayoutC.SortOrder = Enum.SortOrder.LayoutOrder
local PlayerListFrame_Global = Instance.new("ScrollingFrame"); PlayerListFrame_Global.Name = "PlayerListFrame_Global"; PlayerListFrame_Global.Size = UDim2.new(1, 0, 1, -29); PlayerListFrame_Global.Position = UDim2.new(0, 0, 0, 29); PlayerListFrame_Global.BackgroundColor3 = Theme.Colors.ContentBackground; PlayerListFrame_Global.BorderSizePixel = 0; PlayerListFrame_Global.CanvasSize = UDim2.new(0, 0, 0, 0); PlayerListFrame_Global.ScrollBarThickness = 6; PlayerListFrame_Global.Parent = PlayerListContainer; PlayerListFrame_Global.Visible = false
local PlayerListCornerG = Instance.new("UICorner", PlayerListFrame_Global); PlayerListCornerG.CornerRadius = UDim.new(0, 6)
local UIListLayoutG = Instance.new("UIListLayout", PlayerListFrame_Global); UIListLayoutG.Padding = UDim.new(0, 5); UIListLayoutG.SortOrder = Enum.SortOrder.LayoutOrder
local CommandFrame = Instance.new("ScrollingFrame"); CommandFrame.Name = "CommandFrame"; CommandFrame.Size = UDim2.new(0, 222, 1, -80); CommandFrame.Position = UDim2.new(0, 233, 0, 75); CommandFrame.BackgroundColor3 = Theme.Colors.ContentBackground; CommandFrame.BorderSizePixel = 0; CommandFrame.Parent = MainFrame; CommandFrame.CanvasSize = UDim2.new(0,0,0,0); CommandFrame.ScrollBarThickness = 4; CommandFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
local CommandFrameCorner = Instance.new("UICorner", CommandFrame); CommandFrameCorner.CornerRadius = UDim.new(0, 6)
local CommandListLayout = Instance.new("UIListLayout", CommandFrame); CommandListLayout.Padding = UDim.new(0, 5); CommandListLayout.SortOrder = Enum.SortOrder.LayoutOrder
local TargetedCommandsFrame = Instance.new("Frame", CommandFrame); TargetedCommandsFrame.BackgroundTransparency = 1; TargetedCommandsFrame.Size = UDim2.new(1,0,0,0); TargetedCommandsFrame.AutomaticSize = Enum.AutomaticSize.Y; TargetedCommandsFrame.LayoutOrder = 1
local CommandLayout = Instance.new("UIGridLayout", TargetedCommandsFrame); CommandLayout.CellPadding = UDim2.new(0, 5, 0, 5); local buttonWidth = (222 - 5) / 2; CommandLayout.CellSize = UDim2.new(0, math.floor(buttonWidth), 0, 35); CommandLayout.SortOrder = Enum.SortOrder.LayoutOrder
local UniversalHeaderLabel = Instance.new("TextLabel", CommandFrame); UniversalHeaderLabel.Name = "UniversalHeader"; UniversalHeaderLabel.Size = UDim2.new(1, 0, 0, 20); UniversalHeaderLabel.Text = " target : all commands"; UniversalHeaderLabel.Font = Enum.Font.SourceSans; UniversalHeaderLabel.TextColor3 = Theme.Colors.TextSubtle; UniversalHeaderLabel.TextSize = 14; UniversalHeaderLabel.BackgroundTransparency = 1; UniversalHeaderLabel.TextXAlignment = Enum.TextXAlignment.Center; UniversalHeaderLabel.LayoutOrder = 2
local SeparatorFrame = Instance.new("Frame", CommandFrame); SeparatorFrame.Size = UDim2.new(1, -10, 0, 1); SeparatorFrame.Position = UDim2.new(0, 5, 0, 0); SeparatorFrame.BackgroundColor3 = Theme.Colors.Separator; SeparatorFrame.BorderSizePixel = 0; SeparatorFrame.LayoutOrder = 3
local UniversalCommandsFrame = Instance.new("Frame", CommandFrame); UniversalCommandsFrame.BackgroundTransparency = 1; UniversalCommandsFrame.Size = UDim2.new(1,0,0,0); UniversalCommandsFrame.AutomaticSize = Enum.AutomaticSize.Y; UniversalCommandsFrame.LayoutOrder = 4
local UniversalCommandLayout = Instance.new("UIGridLayout", UniversalCommandsFrame); UniversalCommandLayout.CellPadding = UDim2.new(0, 5, 0, 5); UniversalCommandLayout.CellSize = UDim2.new(0, math.floor(buttonWidth), 0, 35); UniversalCommandLayout.SortOrder = Enum.SortOrder.LayoutOrder
local PlayerTemplate = Instance.new("Frame"); PlayerTemplate.Name = "PlayerTemplate"; PlayerTemplate.Size = UDim2.new(1, 0, 0, 60); PlayerTemplate.BackgroundColor3 = Theme.Colors.Button; PlayerTemplate.BorderSizePixel = 0; PlayerTemplate.BackgroundTransparency = 1; local PlayerCorner = Instance.new("UICorner", PlayerTemplate); PlayerCorner.CornerRadius = UDim.new(0, 6); local PlayerButton = Instance.new("TextButton", PlayerTemplate); PlayerButton.Name = "PlayerButton"; PlayerButton.Size = UDim2.new(1,0,1,0); PlayerButton.Text = ""; PlayerButton.BackgroundTransparency = 1; local PlayerIcon = Instance.new("ImageLabel", PlayerTemplate); PlayerIcon.Name = "PlayerIcon"; PlayerIcon.Size = UDim2.new(0, 50, 0, 50); PlayerIcon.Position = UDim2.new(0, 5, 0.5, -25); PlayerIcon.BackgroundTransparency = 1; local IconCorner = Instance.new("UICorner", PlayerIcon); IconCorner.CornerRadius = UDim.new(1, 0); local DisplayName = Instance.new("TextLabel", PlayerTemplate); DisplayName.Name = "DisplayName"; DisplayName.Size = UDim2.new(1, -120, 0, 18); DisplayName.Position = UDim2.new(0, 65, 0, 4); DisplayName.Font = Enum.Font.SourceSansBold; DisplayName.TextColor3 = Theme.Colors.Text; DisplayName.TextXAlignment = Enum.TextXAlignment.Left; DisplayName.BackgroundTransparency = 1; DisplayName.TextSize = 16; DisplayName.ClipsDescendants = true; local UserName = Instance.new("TextLabel", PlayerTemplate); UserName.Name = "UserName"; UserName.Size = UDim2.new(1, -120, 0, 16); UserName.Position = UDim2.new(0, 65, 0, 22); UserName.Font = Enum.Font.SourceSans; UserName.TextColor3 = Theme.Colors.TextSubtle; UserName.TextXAlignment = Enum.TextXAlignment.Left; UserName.BackgroundTransparency = 1; UserName.TextSize = 13; UserName.ClipsDescendants = true; local TagLabel = Instance.new("TextLabel", PlayerTemplate); TagLabel.Name = "TagLabel"; TagLabel.Size = UDim2.new(0, 45, 0, 20); TagLabel.Position = UDim2.new(1, -50, 0.5, -10); TagLabel.Font = Enum.Font.SourceSansBold; TagLabel.TextColor3 = Color3.fromRGB(255,255,255); TagLabel.BackgroundColor3 = Theme.Colors.OwnerTag; TagLabel.Text = ""; TagLabel.TextScaled = true; TagLabel.Visible = false; local TagCorner = Instance.new("UICorner", TagLabel); TagCorner.CornerRadius = UDim.new(0, 6);
local GameName = Instance.new("TextLabel", PlayerTemplate); GameName.Name = "GameName"; GameName.Size = UDim2.new(1, -120, 0, 16); GameName.Position = UDim2.new(0, 65, 0, 38); GameName.Font = Enum.Font.SourceSans; GameName.TextColor3 = Theme.Colors.TextSubtle; GameName.TextXAlignment = Enum.TextXAlignment.Left; GameName.BackgroundTransparency = 1; GameName.TextSize = 13; GameName.ClipsDescendants = true;
PlayerTemplate.Parent = nil
local JoinServerButton = Instance.new("TextButton"); JoinServerButton.Name = "JoinServer"; JoinServerButton.Text = "Join Server"; JoinServerButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255); JoinServerButton.TextColor3 = Color3.fromRGB(20, 20, 20); JoinServerButton.Font = Enum.Font.SourceSansBold; JoinServerButton.TextSize = 16; JoinServerButton.Visible = false; JoinServerButton.LayoutOrder = 1000; JoinServerButton.Parent = TargetedCommandsFrame; local JoinCorner = Instance.new("UICorner", JoinServerButton); JoinCorner.CornerRadius = UDim.new(0, 5)

--==============================================================================
--|| DYNAMIC GUI MANAGEMENT
--==============================================================================
local function updateCanvasSize(listFrame) task.wait(); local layout = listFrame:FindFirstChildOfClass("UIListLayout"); if layout then listFrame.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y) end end
local function showNotification(text, duration) local notif = Instance.new("TextLabel"); notif.Text = text; notif.Size = UDim2.new(0.8, 0, 0, 50); notif.Position = UDim2.new(0.5, 0, 1, 20); notif.AnchorPoint = Vector2.new(0.5, 1); notif.BackgroundColor3 = Theme.Colors.TopBar; notif.Font = Enum.Font.SourceSansBold; notif.TextColor3 = Theme.Colors.Text; notif.TextScaled = true; notif.Parent = AdminGui; local notifCorner = Instance.new("UICorner", notif); notifCorner.CornerRadius = UDim.new(0, 6); TweenService:Create(notif, Theme.Animations.In, {Position = UDim2.new(0.5, 0, 1, -10)}):Play(); Debris:AddItem(notif, duration or 4); task.delay(duration or 4 - 0.4, function() if notif.Parent then TweenService:Create(notif, Theme.Animations.Out, {Position = UDim2.new(0.5, 0, 1, 20)}):Play() end end) end
local function makeDraggable(guiObject, dragHandle) local dragging, dragStart, startPos; dragHandle.InputBegan:Connect(function(input) if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) and not isMinimized then dragging, dragStart, startPos = true, input.Position, guiObject.Position; input.Changed:Connect(function() if input.UserInputState == Enum.UserInputState.End then dragging = false end end) end end); UserInputService.InputChanged:Connect(function(input) if (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) and dragging then local delta = input.Position - dragStart; guiObject.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y) end end) end
local function getChoiceInput(title, btn1Text, btn1Callback, btn2Text, btn2Callback) local choiceBG = Instance.new("Frame", MainFrame); choiceBG.Size = UDim2.new(1,0,1,0); choiceBG.BackgroundColor3=Color3.new(0,0,0); choiceBG.BackgroundTransparency=0.3; local choiceFrame = Instance.new("Frame", choiceBG); choiceFrame.Size = UDim2.new(0, 300, 0, 120); choiceFrame.Position = UDim2.new(0.5, -150, 0.5, -60); choiceFrame.BackgroundColor3 = Theme.Colors.MainBackground; local corner = Instance.new("UICorner", choiceFrame); corner.CornerRadius = UDim.new(0, 6); local label = Instance.new("TextLabel", choiceFrame); label.Size = UDim2.new(1, -20, 0, 40); label.Position = UDim2.new(0, 10, 0, 5); label.Text = title; label.Font=Enum.Font.SourceSansBold; label.TextColor3=Theme.Colors.Text; label.TextSize=20; label.BackgroundTransparency=1; local function closeInput() if choiceBG.Parent then choiceBG:Destroy() end end; local button1 = Instance.new("TextButton", choiceFrame); button1.Size = UDim2.new(0.5, -15, 0, 50); button1.Position = UDim2.new(0,10,0,55); button1.Text = btn1Text; button1.BackgroundColor3=Theme.Colors.ButtonHover; button1.Font=Enum.Font.SourceSansBold; button1.TextColor3=Color3.new(1,1,1); local b1corner = Instance.new("UICorner", button1); b1corner.CornerRadius = UDim.new(0,4); button1.MouseButton1Click:Connect(function() btn1Callback(); closeInput() end); local button2 = Instance.new("TextButton", choiceFrame); button2.Size = UDim2.new(0.5, -15, 0, 50); button2.Position = UDim2.new(0.5,5,0,55); button2.Text= btn2Text; button2.BackgroundColor3=Theme.Colors.Button; button2.Font=Enum.Font.SourceSansBold; button2.TextColor3=Theme.Colors.Text; local b2corner = Instance.new("UICorner", button2); b2corner.CornerRadius = UDim.new(0,4); button2.MouseButton1Click:Connect(function() btn2Callback(); closeInput() end) end
local function getCommandInput(title, placeholder, callback) local inputBG = Instance.new("Frame", MainFrame); inputBG.Size = UDim2.new(1,0,1,0); inputBG.BackgroundColor3=Color3.new(0,0,0); inputBG.BackgroundTransparency=0.3; local inputFrame = Instance.new("Frame", inputBG); inputFrame.Size = UDim2.new(0, 300, 0, 120); inputFrame.Position = UDim2.new(0.5, -150, 0.5, -60); inputFrame.BackgroundColor3 = Theme.Colors.MainBackground; local corner = Instance.new("UICorner", inputFrame); corner.CornerRadius = UDim.new(0, 6); local label = Instance.new("TextLabel", inputFrame); label.Size = UDim2.new(1, -20, 0, 30); label.Position = UDim2.new(0, 10, 0, 10); label.Text = title; label.Font=Enum.Font.SourceSansBold; label.TextColor3=Theme.Colors.Text; label.TextSize=18; label.BackgroundTransparency=1; local box = Instance.new("TextBox", inputFrame); box.Size = UDim2.new(1,-20,0,30); box.Position = UDim2.new(0,10,0,45); box.PlaceholderText=placeholder; box.Font=Enum.Font.SourceSans; box.TextColor3=Theme.Colors.Text; box.BackgroundColor3=Theme.Colors.ContentBackground; local boxCorner = Instance.new("UICorner", box); boxCorner.CornerRadius = UDim.new(0,4); box:CaptureFocus(); local submit = Instance.new("TextButton", inputFrame); submit.Size = UDim2.new(0.5, -15, 0, 30); submit.Position = UDim2.new(0,10,0,85); submit.Text="Submit"; submit.BackgroundColor3=Theme.Colors.ButtonHover; submit.Font=Enum.Font.SourceSansBold; submit.TextColor3=Color3.new(1,1,1); local submitCorner = Instance.new("UICorner", submit); submitCorner.CornerRadius = UDim.new(0,4); local cancel = Instance.new("TextButton", inputFrame); cancel.Size = UDim2.new(0.5, -15, 0, 30); cancel.Position = UDim2.new(0.5,5,0,85); cancel.Text="Cancel"; cancel.BackgroundColor3=Theme.Colors.Button; cancel.Font=Enum.Font.SourceSansBold; cancel.TextColor3=Theme.Colors.Text; local cancelCorner = Instance.new("UICorner", cancel); cancelCorner.CornerRadius = UDim.new(0,4); local function closeInput() if inputBG.Parent then inputBG:Destroy() end end; submit.MouseButton1Click:Connect(function() callback(box.Text); closeInput() end); cancel.MouseButton1Click:Connect(closeInput); box.FocusLost:Connect(function(enter) if enter then callback(box.Text); closeInput() end end) end
local function applyPlayerStyle(pFrame, status, isSelected) if frameConnections[pFrame] then for _, conn in ipairs(frameConnections[pFrame]) do conn:Disconnect() end; frameConnections[pFrame] = nil end; frameConnections[pFrame] = {}; local baseColor, hoverColor, nameColor, tagColor, tagName; if status == "Owner" then baseColor, hoverColor, nameColor, tagColor, tagName = Theme.Colors.OwnerBackground, Theme.Colors.OwnerHover, Theme.Colors.OwnerName, Theme.Colors.OwnerTag, Theme.Tags.Owner elseif status == "User" then baseColor, hoverColor, nameColor, tagColor, tagName = Theme.Colors.UserBackground, Theme.Colors.UserHover, Theme.Colors.UserName, Theme.Colors.UserTag, Theme.Tags.User else baseColor, hoverColor, nameColor = Theme.Colors.Button, Theme.Colors.ButtonHover, Theme.Colors.Text end; pFrame.DisplayName.TextColor3 = nameColor; if tagName then pFrame.TagLabel.Text = tagName; pFrame.TagLabel.BackgroundColor3 = tagColor; pFrame.TagLabel.Visible = true else pFrame.TagLabel.Visible = false end; local targetColor = isSelected and hoverColor or baseColor; local colorTween = TweenService:Create(pFrame, Theme.Animations.Hover, { BackgroundColor3 = targetColor }); if pFrame:GetAttribute("NeedsEntryAnim") then pFrame:SetAttribute("NeedsEntryAnim", nil); local finalPosition = pFrame.Position; pFrame.Position = finalPosition - UDim2.fromOffset(0, 20); for _, child in ipairs(pFrame:GetDescendants()) do if child:IsA("GuiObject") and child.Name ~= "TagLabel" then if child:IsA("Frame") or child:IsA("TextLabel") or child:IsA("ImageLabel") or child:IsA("TextButton") or child:IsA("ImageButton") then child.BackgroundTransparency = 1 end; if child:IsA("TextLabel") or child:IsA("TextButton") or child:IsA("TextBox") then child.TextTransparency = 1 end; if child:IsA("ImageLabel") or child:IsA("ImageButton") then child.ImageTransparency = 1 end end end; fadeGuiObject(pFrame, "In", 0.6); TweenService:Create(pFrame, Theme.Animations.In, {Position = finalPosition}):Play(); colorTween:Play() else colorTween:Play() end; local me = pFrame.PlayerButton.MouseEnter:Connect(function() if not isSelected then TweenService:Create(pFrame, Theme.Animations.Hover, { BackgroundColor3 = hoverColor }):Play() end end); local ml = pFrame.PlayerButton.MouseLeave:Connect(function() if not isSelected then TweenService:Create(pFrame, Theme.Animations.Hover, { BackgroundColor3 = baseColor }):Play() end end); table.insert(frameConnections[pFrame], me); table.insert(frameConnections[pFrame], ml); pFrame:SetAttribute("CurrentStatus", status); pFrame:SetAttribute("IsSelected", isSelected) end
local function createPlayerFrame(pData, parentFrame) local pFrame = PlayerTemplate:Clone(); pFrame.Name = tostring(pData.userId); pFrame.DisplayName.Text = pData.displayName; pFrame.UserName.Text = "@" .. pData.name; pFrame.GameName.Text = "üéÆ " .. (pData.gameName or "Unknown Game"); pFrame:SetAttribute("NeedsEntryAnim", true); task.spawn(function() local success, contentId = pcall(Players.GetUserThumbnailAsync, Players, pData.userId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size420x420); if success and contentId and pFrame.Parent then pFrame.PlayerIcon.Image = contentId end end); pFrame.PlayerButton.MouseButton1Click:Connect(function() if selectedPlayerInfo and selectedPlayerInfo.userId == pData.userId then selectedPlayerInfo = nil else selectedPlayerInfo = pData end; JoinServerButton.Visible = (selectedPlayerInfo and currentTab == "Global"); RefreshPlayerLists() end); pFrame.Parent = parentFrame; return pFrame end
local function filterPlayerLists() local query = SearchBox.Text:lower(); local function filter(frameTable) for _, pFrame in pairs(frameTable) do if pFrame and pFrame.Parent then local displayName = pFrame.DisplayName.Text:lower(); local userName = pFrame.UserName.Text:lower(); local userID = pFrame.Name; pFrame.Visible = (query == "" or displayName:find(query, 1, true) or userName:find(query, 1, true) or userID:find(query, 1, true)) end end end; filter(playerFrames_Current); filter(playerFrames_Global); updateCanvasSize(PlayerListFrame_Current); updateCanvasSize(PlayerListFrame_Global) end
function RefreshPlayerLists() if isRefreshing then return end; isRefreshing = true; local seenCurrent, seenGlobal = {}, {}; for _, player in ipairs(Players:GetPlayers()) do local userId = player.UserId; seenCurrent[userId] = true; local pFrame = playerFrames_Current[userId]; if not pFrame or not pFrame.Parent then pFrame = createPlayerFrame({userId = userId, name = player.Name, displayName = player.DisplayName, jobId = game.JobId, gameName = localGameName}, PlayerListFrame_Current); playerFrames_Current[userId] = pFrame end; local status = "Normal"; if isAdmin(userId) then status = "Owner" elseif activeNetworkUsers[userId] then status = "User" end; pFrame.LayoutOrder = (status == "Owner") and -1 or ((status == "User") and 0 or 1); local isSelected = selectedPlayerInfo and selectedPlayerInfo.userId == userId; if pFrame:GetAttribute("CurrentStatus") ~= status or pFrame:GetAttribute("IsSelected") ~= isSelected or pFrame:GetAttribute("NeedsEntryAnim") then applyPlayerStyle(pFrame, status, isSelected) end end; for userId, userData in pairs(activeNetworkUsers) do seenGlobal[userId] = true; local pFrame = playerFrames_Global[userId]; if not pFrame or not pFrame.Parent then pFrame = createPlayerFrame(userData, PlayerListFrame_Global); playerFrames_Global[userId] = pFrame end; local status = isAdmin(userId) and "Owner" or "User"; local isSelected = selectedPlayerInfo and selectedPlayerInfo.userId == userId; if pFrame:GetAttribute("CurrentStatus") ~= status or pFrame:GetAttribute("IsSelected") ~= isSelected or pFrame:GetAttribute("NeedsEntryAnim") then applyPlayerStyle(pFrame, status, isSelected) end end; for userId, pFrame in pairs(playerFrames_Current) do if not seenCurrent[userId] then fadeGuiObject(pFrame, "Out").Completed:Connect(function() if pFrame then pFrame:Destroy() end end); playerFrames_Current[userId] = nil end end; for userId, pFrame in pairs(playerFrames_Global) do if not seenGlobal[userId] then fadeGuiObject(pFrame, "Out").Completed:Connect(function() if pFrame then pFrame:Destroy() end end); playerFrames_Global[userId] = nil end end; filterPlayerLists(); isRefreshing = false end
AdminGui.Destroying:Connect(function() if networkMonitorConnection then task.cancel(networkMonitorConnection) end; for frame, connections in pairs(frameConnections) do for _, conn in ipairs(connections) do conn:Disconnect() end end; frameConnections = {}; playerFrames_Current, playerFrames_Global = {}, {} end)
local function NetworkMonitor() while AdminGui.Parent do local ok, resp = pcall(game.HttpGet, game, SERVER_READ_URL .. "?cb=" .. HttpService:GenerateGUID(false)); if ok and resp then local data = safeJsonDecode(resp); if type(data) == "table" then local latestHeartbeats = {}; local now = os.time(); for i = #data, 1, -1 do local msgData = safeJsonDecode(data[i]); if type(msgData) == "table" and msgData.userId and msgData.ts and not latestHeartbeats[msgData.userId] then if (now - msgData.ts) <= CLIENT_TIMEOUT then latestHeartbeats[msgData.userId] = msgData end end end; activeNetworkUsers = latestHeartbeats end end; RefreshPlayerLists(); task.wait(NETWORK_REFRESH_RATE) end end

local Commands = {
	{name="freeze", order=1},
	{name="unfreeze", order=2},
	{name="stopgame", text="Stop Game", order=3},
	{name="resumegame", text="Resume Game", order=4},
	{name="jail", order=5},
	{name="unjail", order=6},
	{name="kidnap", order=7},
	{name="joinme", text="Join Me", order=8},
	{name="kill", order=9},
	{name="rejoin", order=10},
	{name="kick", args={"Enter Kick Message:", "Default: Kicked by Admin"}, order=11},
	{name="um", text="Message", args={"Enter Message:", "Duration (optional):"}, order=12},
	{name="use", text="Execute", args={"Enter Script URL:"}, order=13},
	{name="blockchat", text="Block Chat", order=14},
	{name="unblockchat", text="Unblock Chat", order=15},
	{name="sendchat", text="Send Chat", args={"Enter chat message:", "Message..."}, order=16}
}

function createCommandButtons() local function createButton(cmdData, parentFrame) local btn = Instance.new("TextButton"); btn.Name = cmdData.name; btn.LayoutOrder = cmdData.order; btn.Text = cmdData.text or (cmdData.name:sub(1,1):upper() .. cmdData.name:sub(2)); btn.BackgroundColor3 = Theme.Colors.Button; btn.Font = Enum.Font.SourceSansBold; btn.TextColor3 = Theme.Colors.Text; btn.TextSize = 16; btn.Parent = parentFrame; local corner = Instance.new("UICorner", btn); corner.CornerRadius = UDim.new(0, 5); btn.MouseEnter:Connect(function() TweenService:Create(btn, Theme.Animations.Hover, {BackgroundColor3 = Theme.Colors.ButtonHover}):Play() end); btn.MouseLeave:Connect(function() TweenService:Create(btn, Theme.Animations.Hover, {BackgroundColor3 = Theme.Colors.Button}):Play() end); return btn end
	local function connectButton(btn, cmdData, isUniversal)
		btn.MouseButton1Click:Connect(function()
			if not isUniversal and not selectedPlayerInfo then showNotification("No player selected!", 3); return end
			local payload = {cmd = cmdData.name, target = isUniversal and "all" or selectedPlayerInfo.userId}
			if cmdData.name == "joinme" then
				payload.args = {game.JobId}
				sendMessageToServer(payload)
				showNotification("Summon command sent!", 2)
			elseif cmdData.name == "um" then
				getCommandInput("Enter Message:", "Your message here...", function(message)
					if message == "" then return end
					getCommandInput("Enter Duration (optional):", "e.g., 5", function(duration)
						payload.args = {message, duration}
						sendMessageToServer(payload)
						showNotification((isUniversal and "Universal command" or "Command") .. " sent!", 2)
					end)
				end)
			elseif cmdData.args then
				getCommandInput(cmdData.args[1], cmdData.args[2] or "Value...", function(arg1)
					if cmdData.name == "kick" and arg1 == "" then arg1 = "Kicked by Admin"
					elseif cmdData.name ~= "kick" and arg1 == "" then return end
					payload.args = {arg1}
					sendMessageToServer(payload)
					showNotification((isUniversal and "Universal command" or "Command") .. " sent!", 2)
				end)
			else
				sendMessageToServer(payload)
				showNotification((isUniversal and "Universal command" or "Command") .. " sent!", 2)
			end
		end)
	end
	for _, cmdData in ipairs(Commands) do
		local targetedBtn = createButton(cmdData, TargetedCommandsFrame)
		connectButton(targetedBtn, cmdData, false)
		local universalBtn = createButton(cmdData, UniversalCommandsFrame)
		connectButton(universalBtn, cmdData, true)
	end
end

local function styleTabs() TweenService:Create(TabCurrentButton, Theme.Animations.Hover, {BackgroundColor3 = currentTab == "Current" and Theme.Colors.TabActive or Theme.Colors.TabInactive, TextColor3 = currentTab == "Current" and Theme.Colors.Text or Theme.Colors.TextSubtle}):Play(); TweenService:Create(TabGlobalButton, Theme.Animations.Hover, {BackgroundColor3 = currentTab == "Global" and Theme.Colors.TabActive or Theme.Colors.TabInactive, TextColor3 = currentTab == "Global" and Theme.Colors.Text or Theme.Colors.TextSubtle}):Play() end
TabCurrentButton.MouseEnter:Connect(function() if currentTab ~= "Current" then TweenService:Create(TabCurrentButton, Theme.Animations.Hover, {BackgroundColor3 = Theme.Colors.TabHover}):Play() end end); TabCurrentButton.MouseLeave:Connect(function() if currentTab ~= "Current" then TweenService:Create(TabCurrentButton, Theme.Animations.Hover, {BackgroundColor3 = Theme.Colors.TabInactive}):Play() end end)
TabGlobalButton.MouseEnter:Connect(function() if currentTab ~= "Global" then TweenService:Create(TabGlobalButton, Theme.Animations.Hover, {BackgroundColor3 = Theme.Colors.TabHover}):Play() end end); TabGlobalButton.MouseLeave:Connect(function() if currentTab ~= "Global" then TweenService:Create(TabGlobalButton, Theme.Animations.Hover, {BackgroundColor3 = Theme.Colors.TabInactive}):Play() end end)
TabCurrentButton.MouseButton1Click:Connect(function() if currentTab == "Current" or isSwitchingTabs then return end; isSwitchingTabs = true; currentTab = "Current"; styleTabs(); local tweenOut = TweenService:Create(PlayerListFrame_Global, Theme.Animations.TabSwitch, {Position = UDim2.new(0, 233, 0, 29)}); local tweenIn = TweenService:Create(PlayerListFrame_Current, Theme.Animations.TabSwitch, {Position = UDim2.new(0, 0, 0, 29)}); tweenOut.Completed:Connect(function() PlayerListFrame_Global.Visible = false; isSwitchingTabs = false; filterPlayerLists() end); PlayerListFrame_Current.Visible = true; tweenOut:Play(); tweenIn:Play() end)
TabGlobalButton.MouseButton1Click:Connect(function() if currentTab == "Global" or isSwitchingTabs then return end; isSwitchingTabs = true; currentTab = "Global"; styleTabs(); local tweenOut = TweenService:Create(PlayerListFrame_Current, Theme.Animations.TabSwitch, {Position = UDim2.new(0, -233, 0, 29)}); local tweenIn = TweenService:Create(PlayerListFrame_Global, Theme.Animations.TabSwitch, {Position = UDim2.new(0, 0, 0, 29)}); tweenOut.Completed:Connect(function() PlayerListFrame_Current.Visible = false; isSwitchingTabs = false; filterPlayerLists() end); PlayerListFrame_Global.Visible = true; tweenOut:Play(); tweenIn:Play() end)
CloseButton.MouseEnter:Connect(function() TweenService:Create(CloseButton, Theme.Animations.Hover, {BackgroundColor3 = Theme.Colors.CloseButtonHover}):Play() end); CloseButton.MouseLeave:Connect(function() TweenService:Create(CloseButton, Theme.Animations.Hover, {BackgroundColor3 = Theme.Colors.TopBar}):Play() end); CloseButton.MouseButton1Click:Connect(function() AdminGui:Destroy() end)
MinimizeButton.MouseEnter:Connect(function() TweenService:Create(MinimizeButton, Theme.Animations.Hover, {BackgroundColor3 = Theme.Colors.ButtonHover}):Play() end); MinimizeButton.MouseLeave:Connect(function() TweenService:Create(MinimizeButton, Theme.Animations.Hover, {BackgroundColor3 = Theme.Colors.TopBar}):Play() end); MinimizeButton.MouseButton1Click:Connect(function() isMinimized = not isMinimized; local targetSize = isMinimized and UDim2.new(0, 460, 0, 35) or UDim2.new(0, 460, 0, 380); local frameVisibility = not isMinimized; MinimizeButton.Text = isMinimized and "‚ùê" or "_"; TabFrame.Visible, CommandFrame.Visible, PlayerListContainer.Visible = frameVisibility, frameVisibility, frameVisibility; TweenService:Create(MainFrame, Theme.Animations.Out, {Size = targetSize}):Play() end)
JoinServerButton.MouseEnter:Connect(function() TweenService:Create(JoinServerButton, Theme.Animations.Hover, {BackgroundColor3 = Color3.fromRGB(230, 230, 230)}):Play() end); JoinServerButton.MouseLeave:Connect(function() TweenService:Create(JoinServerButton, Theme.Animations.Hover, {BackgroundColor3 = Color3.fromRGB(255, 255, 255)}):Play() end)
JoinServerButton.MouseButton1Click:Connect(function() if not selectedPlayerInfo or not selectedPlayerInfo.jobId then showNotification("No server information for this player.", 3); return end; local joinScript = string.format('game:GetService("TeleportService"):TeleportToPlaceInstance(%d, "%s")', game.PlaceId, selectedPlayerInfo.jobId); getChoiceInput("Join Player", "Join Now", function() local func, err = loadstring(joinScript); if func then showNotification("Executing teleport...", 3); pcall(func) else showNotification("Failed to load script: "..tostring(err), 5) end end, "Copy Script", function() if setclipboard then setclipboard(joinScript); showNotification("Join script copied to clipboard!", 4) else showNotification("Clipboard feature not available.", 4) end end) end)

--==============================================================================
--|| INITIALIZATION
--==============================================================================
TweenService:Create(MainFrame, Theme.Animations.In, {Position = UDim2.new(0.5, -230, 0.5, -190)}):Play()
makeDraggable(MainFrame, TopBar); createCommandButtons()
SearchBox:GetPropertyChangedSignal("Text"):Connect(filterPlayerLists)
Players.PlayerAdded:Connect(function() RefreshPlayerLists() end); Players.PlayerRemoving:Connect(function() RefreshPlayerLists() end)
networkMonitorConnection = task.spawn(NetworkMonitor)
showNotification("Network Control GUI Loaded.", 4)
