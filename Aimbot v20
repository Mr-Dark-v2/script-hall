-- Services
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")

-- Variables
local fov = 130 -- Default FOV set to 130
local Cam = workspace.CurrentCamera
local Player = Players.LocalPlayer
local aimAtHead = true
local isAiming = false
local validNPCs = {}
local currentTarget = nil -- Cache the current target
local horseBlacklist = {} -- Store horses for raycast blacklist

-- FOV Ring Setup
local FOVring = Drawing.new("Circle")
FOVring.Visible = false
FOVring.Thickness = 2
FOVring.Color = Color3.fromRGB(128, 0, 128)
FOVring.Filled = false
FOVring.Radius = fov
FOVring.Position = Cam.ViewportSize / 2
FOVring.Transparency = 0.5



-- Raycast Setup
local raycastParams = RaycastParams.new()
raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
raycastParams.FilterDescendantsInstances = {Player.Character or {}} -- Initial blacklist with player character

-- GUI Setup
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game.CoreGui
ScreenGui.Name = "AimbotGUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.IgnoreGuiInset = true

local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 120, 0, 120)
MainFrame.Position = UDim2.new(0.5, -60, 0, -60)
MainFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
MainFrame.BackgroundTransparency = 0.7
MainFrame.BorderSizePixel = 0
MainFrame.Parent = ScreenGui

local MainCorner = Instance.new("UICorner")
MainCorner.CornerRadius = UDim.new(0, 10)
MainCorner.Parent = MainFrame

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(0, 120, 0, 20)
Title.Position = UDim2.new(0, 0, 0, 0)
Title.BackgroundTransparency = 1
Title.Text = "DIO's AIMBOT"
Title.TextColor3 = Color3.fromRGB(200, 0, 200)
Title.Font = Enum.Font.GothamBlack
Title.TextSize = 14
Title.Parent = MainFrame

local ToggleButton = Instance.new("TextButton")
ToggleButton.Size = UDim2.new(0, 100, 0, 40)
ToggleButton.Position = UDim2.new(0, 10, 0, 25)
ToggleButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
ToggleButton.BackgroundTransparency = 0.3
ToggleButton.Text = "ðŸ”“ CamLock: OFF"
ToggleButton.TextColor3 = Color3.fromRGB(255, 50, 50)
ToggleButton.Font = Enum.Font.GothamBold
ToggleButton.TextSize = 12
ToggleButton.Parent = MainFrame

local ToggleCorner = Instance.new("UICorner")
ToggleCorner.CornerRadius = UDim.new(0, 8)
ToggleCorner.Parent = ToggleButton

local HeadToggle = Instance.new("TextButton")
HeadToggle.Size = UDim2.new(0, 100, 0, 40)
HeadToggle.Position = UDim2.new(0, 10, 0, 70)
HeadToggle.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
HeadToggle.BackgroundTransparency = 0.3
HeadToggle.Text = aimAtHead and "ðŸ‘¤ Head" or "ðŸ§¥ Torso"
HeadToggle.TextColor3 = aimAtHead and Color3.fromRGB(200, 0, 200) or Color3.fromRGB(0, 200, 200)
HeadToggle.Font = Enum.Font.GothamBold
HeadToggle.TextSize = 14
HeadToggle.Parent = MainFrame

local HeadCorner = Instance.new("UICorner")
HeadCorner.CornerRadius = UDim.new(0, 8)
HeadCorner.Parent = HeadToggle

local FOVBox = Instance.new("TextBox")
FOVBox.Size = UDim2.new(0, 60, 0, 15)
FOVBox.Position = UDim2.new(0, 30, 0, 105)
FOVBox.BackgroundTransparency = 1
FOVBox.Text = "FOV: " .. tostring(fov)
FOVBox.TextColor3 = Color3.fromRGB(255, 255, 255)
FOVBox.TextTransparency = 0.5
FOVBox.Font = Enum.Font.Gotham
FOVBox.TextSize = 10
FOVBox.ClearTextOnFocus = false
FOVBox.Parent = MainFrame

-- Animation Function
local function tweenButton(button, goal, duration)
    local tweenInfo = TweenInfo.new(duration, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local tween = TweenService:Create(button, tweenInfo, goal)
    tween:Play()
end

-- Particle Creation Function
local function createParticle(parent, button)
    local particle = Instance.new("Frame")
    particle.Size = UDim2.new(0, 5, 0, 5)
    particle.BackgroundColor3 = Color3.fromRGB(200, 0, 200)
    particle.BorderSizePixel = 0
    particle.ZIndex = 2
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 5)
    corner.Parent = particle
    local btnPos = button.Position
    local btnSize = button.Size
    local randomX = btnPos.X.Offset + math.random(0, btnSize.X.Offset)
    local randomY = btnPos.Y.Offset + math.random(0, btnSize.Y.Offset)
    particle.Position = UDim2.new(0, randomX, 0, randomY)
    particle.Parent = parent
    local angle = math.random() * 2 * math.pi
    local dx = math.cos(angle)
    local dy = math.sin(angle)
    local distance = 50
    local targetX = randomX + distance * dx
    local targetY = randomY + distance * dy
    local targetPosition = UDim2.new(0, targetX, 0, targetY)
    local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local positionTween = TweenService:Create(particle, tweenInfo, {Position = targetPosition})
    local transparencyTween = TweenService:Create(particle, tweenInfo, {BackgroundTransparency = 1})
    positionTween:Play()
    transparencyTween:Play()
    positionTween.Completed:Connect(function()
        particle:Destroy()
    end)
end

-- NPC Detection Functions
local function isNPC(obj)
    if not obj:IsA("Model") then return false end
    local humanoid = obj:FindFirstChildOfClass("Humanoid")
    if not humanoid or humanoid.Health <= 0 then return false end
    local rootPart = obj:FindFirstChild("HumanoidRootPart") or obj:FindFirstChild("Torso") -- Fallback for non-standard NPCs
    if not rootPart then return false end
    if Players:GetPlayerFromCharacter(obj) then return false end
    if obj.Name == "Horse" or obj:FindFirstChild("HorsePart") then
        if not horseBlacklist[obj] then
            horseBlacklist[obj] = true
        end
        return false
    end
    return true
end

local function initialScan()
    validNPCs = {}
    for i = 1, 3 do -- Repeat scan 3 times with a delay
        for _, obj in ipairs(workspace:GetDescendants()) do
            if isNPC(obj) and not table.find(validNPCs, obj) then
                table.insert(validNPCs, obj)
                -- print("Initial scan added NPC:", obj.Name)
            end
        end
        wait(0.5) -- Wait for more NPCs to load
    end
    -- print("Initial scan complete. Total NPCs:", #validNPCs)
end

local function onDescendantAdded(descendant)
    task.spawn(function()
        wait(0.1) -- Delay to catch late-spawning NPCs
        if isNPC(descendant) then
            -- print("Added NPC:", descendant.Name)
            table.insert(validNPCs, descendant)
            local humanoid = descendant:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.Died:Connect(function()
                    for i, npc in ipairs(validNPCs) do
                        if npc == descendant then
                            table.remove(validNPCs, i)
                            -- print("Removed dead NPC:", descendant.Name)
                            break
                        end
                    end
                end)
                humanoid:GetPropertyChangedSignal("Health"):Connect(function()
                    if humanoid.Health <= 0 then
                        for i, npc in ipairs(validNPCs) do
                            if npc == descendant then
                                table.remove(validNPCs, i)
                                -- print("Removed NPC with 0 health:", descendant.Name)
                                break
                            end
                        end
                    end
                end)
            end
        end
    end)
end

local function onDescendantRemoving(descendant)
    for i = #validNPCs, 1, -1 do
        if validNPCs[i] == descendant then
            table.remove(validNPCs, i)
            -- print("Removed NPC from workspace:", descendant.Name)
            break
        end
    end
    if horseBlacklist[descendant] then
        horseBlacklist[descendant] = nil
    end
end

-- Original Functions (Adapted)
local function updateDrawings()
    FOVring.Position = Cam.ViewportSize / 2
    FOVring.Radius = fov * (Cam.ViewportSize.Y / 1080)
end

local function getTargetPosition(target)
    if aimAtHead and target:FindFirstChild("Head") then
        return target.Head.Position
    else
        return (target:FindFirstChild("HumanoidRootPart") or target:FindFirstChild("Torso")).Position
    end
end

local function getTarget()
    local viewportCenter = Cam.ViewportSize / 2
    local blacklist = {Player.Character or {}}
    for horse in pairs(horseBlacklist) do
        table.insert(blacklist, horse)
    end
    raycastParams.FilterDescendantsInstances = blacklist
    
    if currentTarget then
        local humanoid = currentTarget:FindFirstChildOfClass("Humanoid")
        local rootPart = currentTarget:FindFirstChild("HumanoidRootPart") or currentTarget:FindFirstChild("Torso")
        if humanoid and humanoid.Health > 0 and rootPart then
            local targetPos = getTargetPosition(currentTarget)
            local screenPos, visible = Cam:WorldToViewportPoint(targetPos)
            if visible and screenPos.Z > 0 then
                local distance = (Vector2.new(screenPos.X, screenPos.Y) - viewportCenter).Magnitude
                if distance < fov then
                    local direction = (targetPos - Cam.CFrame.Position).Unit * 1000
                    local ray = workspace:Raycast(Cam.CFrame.Position, direction, raycastParams)
                    if ray and ray.Instance:IsDescendantOf(currentTarget) then
                        return currentTarget
                    end
                end
            end
        end
        currentTarget = nil -- Clear if invalid
    end
    
    local nearest = nil
    local minDistance = math.huge
    local camPos = Cam.CFrame.Position
    
    for _, npc in ipairs(validNPCs) do
        local humanoid = npc:FindFirstChildOfClass("Humanoid")
        local rootPart = npc:FindFirstChild("HumanoidRootPart") or npc:FindFirstChild("Torso")
        if humanoid and humanoid.Health > 0 and rootPart then
            local targetPos = getTargetPosition(npc)
            local screenPos, visible = Cam:WorldToViewportPoint(targetPos)
            if visible and screenPos.Z > 0 then
                local distance = (Vector2.new(screenPos.X, screenPos.Y) - viewportCenter).Magnitude
                if distance < fov then
                    local direction = (targetPos - camPos).Unit * 1000
                    local ray = workspace:Raycast(camPos, direction, raycastParams)
                    if ray and ray.Instance:IsDescendantOf(npc) then
                        if distance < minDistance then
                            minDistance = distance
                            nearest = npc
                        end
                    end
                end
            end
        end
    end
    currentTarget = nearest
    return nearest
end

local function instantAim(targetPosition)
    Cam.CFrame = CFrame.new(Cam.CFrame.Position, targetPosition)
end

-- Main Loop
local RenderStepped = RunService.RenderStepped
RenderStepped:Connect(function(dt)
    updateDrawings()
    if isAiming then
        local target = getTarget()
        if target then
            local targetPosition = getTargetPosition(target)
            instantAim(targetPosition)
        end
    end
end)

-- FOV Text Box Functionality
FOVBox.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        local inputText = FOVBox.Text
        local newFOV = tonumber(inputText:match("%d+"))
        if newFOV and newFOV > 0 and newFOV <= 360 then
            fov = newFOV
            FOVring.Radius = fov
            FOVBox.Text = "FOV: " .. tostring(fov)
        else
            FOVBox.Text = "FOV: " .. tostring(fov)
        end
    end
end)

-- Toggle Button Functionality
ToggleButton.MouseButton1Click:Connect(function()
    isAiming = not isAiming
    FOVring.Visible = isAiming
    ToggleButton.Text = isAiming and "ðŸ”’ CamLock: ON" or "ðŸ”“ CamLock: OFF"
    local targetColor = isAiming and Color3.fromRGB(50, 255, 50) or Color3.fromRGB(255, 50, 50)
    tweenButton(ToggleButton, {TextColor3 = targetColor}, 0.3)
    for i = 1, 5 do
        createParticle(MainFrame, ToggleButton)
    end
end)

ToggleButton.MouseEnter:Connect(function()
    tweenButton(ToggleButton, {Size = UDim2.new(0, 105, 0, 42), BackgroundTransparency = 0.1}, 0.2)
end)
ToggleButton.MouseLeave:Connect(function()
    tweenButton(ToggleButton, {Size = UDim2.new(0, 100, 0, 40), BackgroundTransparency = 0.3}, 0.2)
end)

-- HeadToggle Functionality
HeadToggle.MouseButton1Click:Connect(function()
    aimAtHead = not aimAtHead
    HeadToggle.Text = aimAtHead and "ðŸ‘¤ Head" or "ðŸ§¥ Torso"
    local targetColor = aimAtHead and Color3.fromRGB(200, 0, 200) or Color3.fromRGB(0, 200, 200)
    tweenButton(HeadToggle, {TextColor3 = targetColor}, 0.3)
    for i = 1, 5 do
        createParticle(MainFrame, HeadToggle)
    end
end)

HeadToggle.MouseEnter:Connect(function()
    tweenButton(HeadToggle, {Size = UDim2.new(0, 105, 0, 42), BackgroundTransparency = 0.1}, 0.2)
end)
HeadToggle.MouseLeave:Connect(function()
    tweenButton(HeadToggle, {Size = UDim2.new(0, 100, 0, 40), BackgroundTransparency = 0.3}, 0.2)
end)

-- Dragging Functionality
local dragging, dragInput, dragStart, startPos
MainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
    end
end)
MainFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)
UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)
MainFrame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = false
    end
end)

-- Cleanup and Reset
Players.PlayerRemoving:Connect(function(player)
    if player == Player then
        FOVring:Remove()
        ScreenGui:Destroy()
    end
end)

Players.LocalPlayer.CharacterAdded:Connect(function()
    validNPCs = {} -- Reset NPC table when character spawns
    horseBlacklist = {} -- Reset blacklist
    raycastParams.FilterDescendantsInstances = {Player.Character or {}}
    initialScan() -- Re-run scan
    -- print("Character spawned, reset NPC list and re-scanned")
end)

-- Initial Setup and Workspace Listeners
initialScan()
workspace.DescendantAdded:Connect(onDescendantAdded)
workspace.DescendantRemoving:Connect(onDescendantRemoving)
MainFrame.Position = UDim2.new(0.5, -60, 0.5, 60)
tweenButton(MainFrame, {Position = UDim2.new(0.5, -60, 0.5, -60)}, 0.5)
